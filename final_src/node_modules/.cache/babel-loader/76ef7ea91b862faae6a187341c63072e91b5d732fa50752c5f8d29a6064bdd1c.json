{"ast":null,"code":"var _jsxFileName = \"/Users/srushtipatil/Downloads/Greentrendz/final_src/src/components/FileUploads.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport GreenTrendz from '../assets/img/logo_1.png';\nimport './style.css'; // If style.css is in the same folder as FileUploads.js\nimport { Info } from 'lucide-react';\nimport { Home, LayoutDashboard, FileText, BarChart2, Calculator, Settings, UserCircle, HelpCircle, CloudUpload } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  landingPage: {\n    display: 'flex',\n    height: '100vh',\n    backgroundColor: '#f4f4f9',\n    fontFamily: 'Arial, sans-serif'\n  },\n  sidebar: {\n    width: '250px',\n    background: 'linear-gradient(to bottom right, #064e3b, #276749)',\n    color: 'white',\n    padding: '20px',\n    boxSizing: 'border-box',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    position: 'fixed',\n    height: '100vh',\n    zIndex: 10,\n    boxShadow: '2px 0 15px rgba(0, 0, 0, 0.15)',\n    transition: 'width 0.3s ease'\n  },\n  logo: {\n    fontSize: '25px',\n    marginBottom: '30px',\n    fontWeight: 'bold',\n    color: '#fff',\n    textAlign: 'center',\n    marginTop: '20px',\n    transition: 'transform 0.3s ease'\n  },\n  logoHover: {\n    transform: 'scale(1.1)'\n  },\n  navList: {\n    listStyle: 'none',\n    padding: 0,\n    margin: 0,\n    width: '100%'\n  },\n  navItem: {\n    color: 'white',\n    textDecoration: 'none',\n    padding: '15px 20px',\n    display: 'flex',\n    alignItems: 'center',\n    width: '100%',\n    borderRadius: '8px',\n    marginBottom: '12px',\n    transition: 'background-color 0.3s ease, transform 0.3s ease',\n    cursor: 'pointer',\n    fontfamily: \"'Poppins', sans-serif\",\n    // Custom font for links\n    fontWeight: '500' // Optional for bold text\n  },\n  navItemHover: {\n    backgroundColor: '#3b6b5c',\n    transform: 'scale(1.05)'\n  },\n  navIcon: {\n    marginRight: '20px',\n    transition: 'transform 0.3s ease'\n  },\n  content: {\n    flex: 1,\n    padding: '30px',\n    boxSizing: 'border-box',\n    backgroundColor: '#f8f9fa',\n    // Light gray background for a softer look\n    overflowY: 'auto',\n    marginLeft: '250px',\n    transition: 'margin-left 0.3s ease'\n  },\n  button: {\n    backgroundColor: '#ffffff',\n    // Default background color\n    color: 'Black',\n    // Text color\n    border: 'none',\n    // No border\n    padding: '10px 20px',\n    // Padding for a nice clickable area\n    borderRadius: '5px',\n    // Rounded corners\n    fontWeight: 'bold',\n    // Bold text\n    fontSize: '16px',\n    // Font size\n    cursor: 'pointer',\n    // Pointer cursor on hover\n    boxShadow: '0px 4px 6px rgba(0, 0, 0, 0.1)',\n    // Subtle shadow for a 3D effect\n    transition: 'background-color 0.3s ease, transform 0.2s ease' // Smooth transition for hover effects\n  },\n  infoIcon: {\n    marginLeft: '8px',\n    cursor: 'pointer',\n    fontSize: '6px',\n    color: '#666',\n    lineHeight: '1',\n    width: '20px',\n    // Adjust width to control circle size\n    height: '20px',\n    // Adjust height to control circle size\n    display: 'inline-flex',\n    // Ensures proper centering\n    alignItems: 'center',\n    // Vertically centers the icon within the circle\n    justifyContent: 'center',\n    // Horizontally centers the icon within the circle\n    borderRadius: '50%',\n    // Ensures it's a circle\n    padding: '2px' // Adjust padding for inner spacing\n  },\n  tooltip: {\n    position: 'absolute',\n    backgroundColor: '#333',\n    color: '#fff',\n    padding: '5px 10px',\n    borderRadius: '4px',\n    fontSize: '12px',\n    zIndex: '1000',\n    visibility: 'hidden',\n    opacity: 0,\n    transition: 'opacity 0.3s'\n  },\n  tooltipVisible: {\n    visibility: 'visible',\n    opacity: 1\n  },\n  popupTab: {\n    position: 'fixed',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    backgroundColor: '#fff',\n    padding: '20px',\n    borderRadius: '8px',\n    boxShadow: '0px 4px 15px rgba(0, 0, 0, 0.2)',\n    zIndex: 1000,\n    width: '400px'\n  },\n  popupHeader: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: '20px'\n  },\n  closeButton: {\n    backgroundColor: 'transparent',\n    border: 'none',\n    fontSize: '20px',\n    cursor: 'pointer'\n  },\n  buttonContainer: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginTop: '20px'\n  },\n  saveButton: {\n    backgroundColor: '#064e3b',\n    color: '#fff',\n    border: 'none',\n    padding: '10px 20px',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    marginRight: '10px'\n  },\n  cancelButton: {\n    backgroundColor: '#ccc',\n    color: '#000',\n    border: 'none',\n    padding: '10px 20px',\n    borderRadius: '5px',\n    cursor: 'pointer'\n  },\n  uploadLabel: {\n    border: '2px dashed #ccc',\n    padding: '20px',\n    borderRadius: '8px',\n    textAlign: 'center',\n    cursor: 'pointer',\n    marginBottom: '20px'\n  },\n  preview: {\n    marginTop: '10px',\n    textAlign: 'center'\n  },\n  success: {\n    color: 'green',\n    marginTop: '10px'\n  },\n  error: {\n    color: 'red',\n    marginTop: '10px'\n  }\n};\nconst menuItems = [{\n  icon: Home,\n  label: 'Home',\n  path: '/land'\n}, {\n  icon: CloudUpload,\n  label: 'Data Upload',\n  path: '/upload'\n}, {\n  icon: LayoutDashboard,\n  label: 'Dashboard',\n  path: '/dashboard'\n}, {\n  icon: FileText,\n  label: 'Reports',\n  path: '/reports'\n}, {\n  icon: BarChart2,\n  label: 'Comparison',\n  path: '/comparison'\n}, {\n  icon: Calculator,\n  label: 'Carbon Calculator',\n  path: '/calculator'\n}, {\n  icon: Settings,\n  label: 'Settings',\n  path: '/settings'\n}, {\n  icon: HelpCircle,\n  label: 'Help & Support',\n  path: '/help'\n}, {\n  icon: UserCircle,\n  label: 'Account',\n  path: '/account'\n}];\nconst Sidebar = () => {\n  _s();\n  const [showLogoutPopup, setShowLogoutPopup] = useState(false);\n  const [tooltipVisible, setTooltipVisible] = useState({});\n  const showTooltip = key => {\n    setTooltipVisible(prev => ({\n      ...prev,\n      [key]: true\n    }));\n  };\n  const hideTooltip = key => {\n    setTooltipVisible(prev => ({\n      ...prev,\n      [key]: false\n    }));\n  };\n  const toggleSection = section => {\n    setExpandedSections(prev => ({\n      ...prev,\n      [section]: !prev[section]\n    }));\n  };\n  const [environmentalData, setEnvironmentalData] = useState({});\n  const [socialData, setSocialData] = useState({});\n  const [governanceData, setGovernanceData] = useState({});\n  const [dataImportData, setDataImportData] = useState({\n    startDate: '',\n    endDate: ''\n  });\n  const [csvFile, setCsvFile] = useState(null);\n  const [logoFile, setLogoFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleCsvUpload = e => {\n    const file = e.target.files[0];\n    if (file && file.type !== 'text/csv') {\n      alert('Please upload a valid CSV file.');\n      return;\n    }\n    setCsvFile(file);\n  };\n  const handleLogoUpload = e => {\n    const file = e.target.files[0];\n    if (file && !['image/png', 'image/jpeg'].includes(file.type)) {\n      alert('Please upload a valid image file (PNG or JPEG).');\n      return;\n    }\n    setLogoFile(file);\n  };\n  const handleSubmit = async () => {\n    if (!csvFile || !logoFile) {\n      alert('Please upload both CSV and Logo files.');\n      return;\n    }\n    setLoading(true);\n    setSuccessMessage('');\n    setErrorMessage('');\n    const formData = new FormData();\n    formData.append('environmentalData', JSON.stringify(environmentalData));\n    formData.append('socialData', JSON.stringify(socialData));\n    formData.append('governanceData', JSON.stringify(governanceData));\n    formData.append('startDate', dataImportData.startDate);\n    formData.append('endDate', dataImportData.endDate);\n    formData.append('csvFile', csvFile);\n    formData.append('logoFile', logoFile);\n    try {\n      const response = await fetch('http://localhost:5003/api/save-esg-data', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        const result = await response.json();\n        setSuccessMessage(result.message || 'Data submitted successfully!');\n      } else {\n        const errorDetail = await response.text();\n        throw new Error(`Error ${response.status}: ${errorDetail}`);\n      }\n    } catch (error) {\n      setErrorMessage('Error submitting data: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const [environmentalSections, setEnvironmentalSections] = useState([{\n    title: 'Energy',\n    metrics: [{\n      label: 'Coal (tons, GJ)',\n      key: 'coal',\n      type: 'number'\n    }, {\n      label: 'Diesel (L, GJ)',\n      key: 'diesel',\n      type: 'number'\n    }, {\n      label: 'High-Speed Diesel (HSD) (L, GJ)',\n      key: 'hsd',\n      type: 'number'\n    }, {\n      label: 'Petrol (L, GJ)',\n      key: 'petrol',\n      type: 'number'\n    }, {\n      label: 'Liquefied Petroleum Gas (LPG) (m³, GJ)',\n      key: 'lpg',\n      type: 'number'\n    }, {\n      label: 'Natural Gas (m³, GJ)',\n      key: 'naturalGas',\n      type: 'number'\n    }, {\n      label: 'LNG/PNG (m³, GJ)',\n      key: 'lngPng',\n      type: 'number'\n    }, {\n      label: 'Solar Energy (MWh, kWh)',\n      key: 'solarEnergy',\n      type: 'number'\n    }, {\n      label: 'Wind Energy (MWh, kWh)',\n      key: 'windEnergy',\n      type: 'number'\n    }, {\n      label: 'Hydroelectric Energy (MWh, kWh)',\n      key: 'hydroEnergy',\n      type: 'number'\n    }, {\n      label: 'Biomass (tons, GJ)',\n      key: 'biomass',\n      type: 'number'\n    }, {\n      label: 'Renewable Energy Generated (MWh, %)',\n      key: 'renewableEnergyGenerated',\n      type: 'number'\n    }, {\n      label: 'On-site Energy Consumption (MWh, GJ)',\n      key: 'onsiteEnergyConsumption',\n      type: 'number'\n    }, {\n      label: 'Biodiesel (L, GJ)',\n      key: 'biodiesel',\n      type: 'number'\n    }]\n  }, {\n    title: 'Water',\n    metrics: [{\n      label: 'Produced Water Withdrawal (m³, L)',\n      key: 'producedWaterWithdrawal',\n      type: 'number'\n    }, {\n      label: 'Surface Water Withdrawal (m³, L)',\n      key: 'surfaceWaterWithdrawal',\n      type: 'number'\n    }, {\n      label: 'Ground Water Withdrawal (m³, L)',\n      key: 'groundWaterWithdrawal',\n      type: 'number'\n    }, {\n      label: 'Seawater Withdrawal (m³, L)',\n      key: 'seawaterWithdrawal',\n      type: 'number'\n    }, {\n      label: 'Third-Party Water Withdrawal (m³, L)',\n      key: 'thirdPartyWaterWithdrawal',\n      type: 'number'\n    }, {\n      label: 'Water Consumption (m³, L)',\n      key: 'waterConsumption',\n      type: 'number'\n    }, {\n      label: 'Water Recycled (m³, %)',\n      key: 'waterRecycled',\n      type: 'number'\n    }, {\n      label: 'Water Discharge to Surface Water (m³, L)',\n      key: 'waterDischargeSurface',\n      type: 'number'\n    }, {\n      label: 'Water Discharge to Groundwater (m³, L)',\n      key: 'waterDischargeGround',\n      type: 'number'\n    }, {\n      label: 'Water Discharge to Third-Party (m³, L)',\n      key: 'waterDischargeThirdParty',\n      type: 'number'\n    }, {\n      label: 'Water Discharge to Seawater (m³, L)',\n      key: 'waterDischargeSeawater',\n      type: 'number'\n    }, {\n      label: 'Wastewater Generated (m³, L)',\n      key: 'wastewaterGenerated',\n      type: 'number'\n    }]\n  }, {\n    title: 'Waste',\n    metrics: [{\n      label: 'E-Waste (kg, tons, % recycled)',\n      key: 'eWaste',\n      type: 'number'\n    }, {\n      label: 'Plastic Waste (kg, tons, % recycled)',\n      key: 'plasticWaste',\n      type: 'number'\n    }, {\n      label: 'Metal Waste (kg, tons, % recycled)',\n      key: 'metalWaste',\n      type: 'number'\n    }, {\n      label: 'Glass Waste (kg, tons, % recycled)',\n      key: 'glassWaste',\n      type: 'number'\n    }, {\n      label: 'Batteries and Accumulator Waste (kg, tons, % recycled)',\n      key: 'batteryWaste',\n      type: 'number'\n    }, {\n      label: 'Civil Waste (kg, tons, % recycled)',\n      key: 'civilWaste',\n      type: 'number'\n    }, {\n      label: 'Miscellaneous Waste (kg, tons, % recycled)',\n      key: 'miscWaste',\n      type: 'number'\n    }, {\n      label: 'Biomedical Waste (kg, tons, % recycled)',\n      key: 'biomedicalWaste',\n      type: 'number'\n    }, {\n      label: 'Feed Waste (kg, tons, % recycled)',\n      key: 'feedWaste',\n      type: 'number'\n    }, {\n      label: 'Hazardous Waste Generation (kg, tons)',\n      key: 'hazardousWaste',\n      type: 'number'\n    }]\n  }, {\n    title: 'Emissions',\n    metrics: [{\n      label: 'Greenhouse Gas (GHG) Emissions (tons CO₂e)',\n      key: 'ghgEmissions',\n      type: 'number'\n    }, {\n      label: 'Effluent Discharge (m³, L, ppm)',\n      key: 'effluentDischarge',\n      type: 'number'\n    }]\n  }, {\n    title: 'Other Environmental Factors',\n    metrics: [{\n      label: 'Environmental Incidents (count)',\n      key: 'environmentalIncidents',\n      type: 'number'\n    }, {\n      label: 'Solar Panel Recycling (% recycled, kg, tons)',\n      key: 'solarPanelRecycling',\n      type: 'number'\n    }]\n  }]);\n  const socialSections = [{\n    title: 'Workforce Management',\n    metrics: [{\n      label: 'Number of New Employees )',\n      key: 'employeeDiversity',\n      type: 'number'\n    }, {\n      label: 'Male vs Female )',\n      key: 'employeeDiversity',\n      type: 'number'\n    }, {\n      label: 'Employee Diversity & Inclusion (% female, % minorities, % disabled employees)',\n      key: 'employeeDiversity',\n      type: 'number'\n    }, {\n      label: 'Employee Training & Development (hours per employee, $ spent per employee)',\n      key: 'employeeTraining',\n      type: 'number'\n    }, {\n      label: 'Employee Turnover Rate (%)',\n      key: 'employeeTurnover',\n      type: 'number'\n    }, {\n      label: 'Workplace Safety & Health (injury rate per 100 employees, fatalities count)',\n      key: 'workplaceSafety',\n      type: 'number'\n    }, {\n      label: 'Human Rights & Labor Standards (% compliance, number of reported violations)',\n      key: 'humanRights',\n      type: 'number'\n    }, {\n      label: 'Fair Wages & Compensation (minimum wage compliance %, wage gap %)',\n      key: 'fairWages',\n      type: 'number'\n    }]\n  }, {\n    title: 'Community Engagement',\n    metrics: [{\n      label: 'Corporate Social Responsibility (CSR) Programs (number of programs, $ spent)',\n      key: 'csrPrograms',\n      type: 'number'\n    }, {\n      label: 'Community Investments (total $ invested)',\n      key: 'communityInvestments',\n      type: 'number'\n    }, {\n      label: 'Volunteer Programs (% employee participation, hours volunteered)',\n      key: 'volunteerPrograms',\n      type: 'number'\n    }, {\n      label: 'Philanthropic Activities ($ donated, number of beneficiaries)',\n      key: 'philanthropicActivities',\n      type: 'number'\n    }]\n  }, {\n    title: 'Product Responsibility',\n    metrics: [{\n      label: 'Customer Health & Safety (% compliance with safety standards, number of recalls)',\n      key: 'customerSafety',\n      type: 'number'\n    }, {\n      label: 'Data Privacy & Protection (number of breaches, % compliance with GDPR/CCPA)',\n      key: 'dataPrivacy',\n      type: 'number'\n    }, {\n      label: 'Ethical Marketing & Advertising (% compliance, number of violations)',\n      key: 'ethicalMarketing',\n      type: 'number'\n    }, {\n      label: 'Product Quality & Safety (number of defects per million units, recall count)',\n      key: 'productQuality',\n      type: 'number'\n    }]\n  }, {\n    title: 'Supply Chain Responsibility',\n    metrics: [{\n      label: 'Supplier ESG Compliance (% compliant suppliers, count of audits conducted)',\n      key: 'supplierCompliance',\n      type: 'number'\n    }, {\n      label: 'Fair Trade Practices (% fair-trade certified suppliers)',\n      key: 'fairTrade',\n      type: 'number'\n    }, {\n      label: 'Ethical Sourcing (% responsibly sourced materials)',\n      key: 'ethicalSourcing',\n      type: 'number'\n    }]\n  }];\n  const governanceSections = [{\n    title: 'Corporate Ethics & Compliance',\n    metrics: [{\n      label: 'Anti-Corruption & Bribery Policies (number of violations, % compliance)',\n      key: 'antiCorruption',\n      type: 'number'\n    }, {\n      label: 'Whistleblower Protection (number of cases reported, resolution time in days)',\n      key: 'whistleblowerProtection',\n      type: 'number'\n    }, {\n      label: 'Code of Conduct (% compliance, number of violations)',\n      key: 'codeOfConduct',\n      type: 'number'\n    }]\n  }, {\n    title: 'Board & Leadership',\n    metrics: [{\n      label: 'Board Diversity & Independence (% female board members, % independent directors)',\n      key: 'boardDiversity',\n      type: 'number'\n    }, {\n      label: 'Executive Compensation (CEO pay ratio, total executive compensation in $)',\n      key: 'executiveCompensation',\n      type: 'number'\n    }, {\n      label: 'Shareholder Rights (number of resolutions passed, % participation in voting)',\n      key: 'shareholderRights',\n      type: 'number'\n    }]\n  }, {\n    title: 'Risk Management',\n    metrics: [{\n      label: 'Cybersecurity & Data Protection (number of incidents, % compliance with regulations)',\n      key: 'cybersecurity',\n      type: 'number'\n    }, {\n      label: 'Business Continuity Planning (number of plans in place, % tested annually)',\n      key: 'businessContinuity',\n      type: 'number'\n    }, {\n      label: 'Climate-Related Risks ($ financial impact, % assets at risk)',\n      key: 'climateRisks',\n      type: 'number'\n    }]\n  }, {\n    title: 'Regulatory & Reporting Compliance',\n    metrics: [{\n      label: 'ESG Disclosure & Transparency (% compliance, number of reports published annually)',\n      key: 'esgDisclosure',\n      type: 'number'\n    }, {\n      label: 'Legal & Regulatory Compliance (number of violations, total fines in $)',\n      key: 'legalCompliance',\n      type: 'number'\n    }]\n  }];\n\n  // ✅ Fix: Declare expandedSections properly\n  const [expandedSections, setExpandedSections] = useState({});\n  const [showPopup, setShowPopup] = useState(false);\n  const [newMetric, setNewMetric] = useState({\n    section: '',\n    customSection: '',\n    name: '',\n    type: 'number',\n    unit: ''\n  });\n  const unitOptions = [\"kg\", \"tons\", \"L\", \"m³\", \"MWh\", \"kWh\", \"%\", \"ppm\", \"count\"];\n  const handleAddMetric = () => {\n    if (!newMetric.section || !newMetric.name || !newMetric.unit) {\n      alert(\"Please fill all fields before adding a metric.\");\n      return;\n    }\n    let sectionKey = newMetric.section === \"Other\" ? newMetric.customSection : newMetric.section;\n    if (!sectionKey) {\n      alert(\"Please provide a name for the 'Other' section.\");\n      return;\n    }\n    setEnvironmentalSections(prevSections => {\n      let sectionExists = prevSections.find(sec => sec.title === sectionKey);\n      if (sectionExists) {\n        return prevSections.map(sec => sec.title === sectionKey ? {\n          ...sec,\n          metrics: [...sec.metrics, {\n            label: newMetric.name,\n            type: newMetric.type,\n            unit: newMetric.unit\n          }]\n        } : sec);\n      } else {\n        return [...prevSections, {\n          title: sectionKey,\n          metrics: [{\n            label: newMetric.name,\n            type: newMetric.type,\n            unit: newMetric.unit\n          }]\n        }];\n      }\n    });\n    setShowPopup(false);\n    setNewMetric({\n      section: '',\n      customSection: '',\n      name: '',\n      type: 'number',\n      unit: ''\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.landingPage,\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      style: styles.sidebar,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: GreenTrendz,\n          alt: \"Logo\",\n          width: \"50\",\n          height: \"50\",\n          className: \"d-inline-block align-top me-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          style: styles.logo,\n          children: \"GreenTrendz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: styles.navList,\n        children: menuItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: item.path,\n            style: styles.navItem,\n            onMouseEnter: e => {\n              e.target.style.backgroundColor = '#3b6b5c';\n              e.target.style.transform = 'scale(1.05)';\n            },\n            onMouseLeave: e => {\n              e.target.style.backgroundColor = '';\n              e.target.style.transform = '';\n            },\n            children: [/*#__PURE__*/_jsxDEV(item.icon, {\n              style: styles.navIcon,\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: item.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 29\n          }, this)\n        }, item.path, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 'auto',\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          style: styles.button,\n          onClick: () => setShowLogoutPopup(true),\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.content,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"sectionTitle\",\n            children: \"Upload ESG Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"sectionTitle\",\n            children: \"Annual ESG Metrics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Environmental\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 25\n            }, this), environmentalSections.map((section, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: styles.section,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: styles.sectionHeader,\n                onClick: () => toggleSection(section.title),\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: section.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 553,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: expandedSections[section.title] ? '▲' : '▼'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 554,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 549,\n                columnNumber: 33\n              }, this), expandedSections[section.title] && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: section.metrics.map((metric, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: styles.inputContainer,\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: metric.key,\n                    children: [metric.label, /*#__PURE__*/_jsxDEV(Info, {\n                      style: styles.infoIcon,\n                      onMouseEnter: () => showTooltip(metric.key),\n                      onMouseLeave: () => hideTooltip(metric.key)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 562,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 560,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: metric.key,\n                    type: metric.type,\n                    value: environmentalData[metric.key] || '',\n                    onChange: e => setEnvironmentalData(prev => ({\n                      ...prev,\n                      [metric.key]: e.target.value\n                    })),\n                    style: styles.inputField\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 568,\n                    columnNumber: 49\n                  }, this)]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 559,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 557,\n                columnNumber: 37\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 29\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              style: styles.button,\n              onClick: () => setShowPopup(true),\n              children: \"Add New Environmental Metric\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 13\n            }, this), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: styles.popupTab,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: styles.popupHeader,\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Add New Environmental Metric\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 597,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: styles.closeButton,\n                  onClick: () => setShowPopup(false),\n                  children: \"\\u2716\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 598,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 596,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Section:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 604,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: newMetric.section,\n                onChange: e => setNewMetric(prev => ({\n                  ...prev,\n                  section: e.target.value,\n                  customSection: e.target.value === \"Other\" ? \"\" : prev.customSection\n                })),\n                style: styles.inputField,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Section\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 616,\n                  columnNumber: 25\n                }, this), environmentalSections.map((section, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: section.title,\n                  children: section.title\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 618,\n                  columnNumber: 29\n                }, this)), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Other\",\n                  children: \"Other\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 622,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 605,\n                columnNumber: 21\n              }, this), newMetric.section === \"Other\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Custom Section Name:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 628,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: newMetric.customSection,\n                  onChange: e => setNewMetric(prev => ({\n                    ...prev,\n                    customSection: e.target.value\n                  })),\n                  placeholder: \"Enter custom section name\",\n                  style: styles.inputField\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 629,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 627,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Metric Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 645,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: newMetric.name,\n                onChange: e => setNewMetric(prev => ({\n                  ...prev,\n                  name: e.target.value\n                })),\n                placeholder: \"Enter Metric Name\",\n                style: styles.inputField\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 646,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Unit:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 660,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: newMetric.unit,\n                onChange: e => setNewMetric(prev => ({\n                  ...prev,\n                  unit: e.target.value\n                })),\n                style: styles.inputField,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Unit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 671,\n                  columnNumber: 25\n                }, this), unitOptions.map((unit, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: unit,\n                  children: unit\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 673,\n                  columnNumber: 29\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 661,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: styles.buttonContainer,\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleAddMetric,\n                  style: styles.saveButton,\n                  children: \"Save Metric\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 681,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setShowPopup(false),\n                  style: styles.cancelButton,\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 684,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 680,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 595,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Social\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 694,\n            columnNumber: 25\n          }, this), socialSections.map((section, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.section,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: styles.sectionHeader,\n              onClick: () => toggleSection(section.title),\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: section.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 701,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: expandedSections[section.title] ? '▲' : '▼'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 702,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 697,\n              columnNumber: 33\n            }, this), expandedSections[section.title] && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: section.metrics.map((metric, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: styles.inputContainer,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: metric.key,\n                  children: [metric.label, /*#__PURE__*/_jsxDEV(Info, {\n                    style: styles.infoIcon,\n                    onMouseEnter: () => showTooltip(metric.key),\n                    onMouseLeave: () => hideTooltip(metric.key)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 710,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 708,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: metric.key,\n                  type: metric.type,\n                  value: socialData[metric.key] || '',\n                  onChange: e => setSocialData(prev => ({\n                    ...prev,\n                    [metric.key]: e.target.value\n                  })),\n                  style: styles.inputField\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 716,\n                  columnNumber: 49\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 707,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 705,\n              columnNumber: 37\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 696,\n            columnNumber: 29\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: styles.button,\n            onClick: () => alert('Add New Metric functionality here'),\n            children: \"Add New Social Metric\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 734,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 693,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Governance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 744,\n            columnNumber: 25\n          }, this), governanceSections.map((section, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.section,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: styles.sectionHeader,\n              onClick: () => toggleSection(section.title),\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: section.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 751,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: expandedSections[section.title] ? '▲' : '▼'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 752,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 747,\n              columnNumber: 33\n            }, this), expandedSections[section.title] && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: section.metrics.map((metric, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: styles.inputContainer,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: metric.key,\n                  children: [metric.label, /*#__PURE__*/_jsxDEV(Info, {\n                    style: styles.infoIcon,\n                    onMouseEnter: () => showTooltip(metric.key),\n                    onMouseLeave: () => hideTooltip(metric.key)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 760,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 758,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: metric.key,\n                  type: metric.type,\n                  value: governanceData[metric.key] || '',\n                  onChange: e => setGovernanceData(prev => ({\n                    ...prev,\n                    [metric.key]: e.target.value\n                  })),\n                  style: styles.inputField\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 766,\n                  columnNumber: 49\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 757,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 755,\n              columnNumber: 37\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 746,\n            columnNumber: 29\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: styles.button,\n            onClick: () => alert('Add New Metric functionality here'),\n            children: \"Add New Governance Metric\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 784,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 743,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Data Import\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 799,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date-picker-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inputColumn\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Start Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 803,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: dataImportData.startDate,\n                onChange: e => setDataImportData({\n                  ...dataImportData,\n                  startDate: e.target.value\n                }),\n                className: \"inputField\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 804,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 802,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inputColumn\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"End Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 817,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: dataImportData.endDate,\n                onChange: e => setDataImportData({\n                  ...dataImportData,\n                  endDate: e.target.value\n                }),\n                className: \"inputField\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 818,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 816,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 801,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 798,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Upload CSV\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 837,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-upload-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \".csv\",\n              onChange: handleCsvUpload,\n              className: \"inputField\",\n              id: \"csv-upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 839,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"csv-upload\",\n              className: \"upload-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Click to upload or drag and drop\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 847,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Upload a CSV file (max. 5MB) containing Metric Name, Value, and Timestamp columns\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 848,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 846,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 838,\n            columnNumber: 5\n          }, this), csvFile && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preview\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: csvFile.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 853,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [Math.round(csvFile.size / 1024), \" KB\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 854,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 852,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 836,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Upload Logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 861,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-upload-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"image/*\",\n              onChange: handleLogoUpload,\n              className: \"inputField\",\n              id: \"logo-upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 863,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"logo-upload\",\n              className: \"upload-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Click to upload or drag and drop\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 871,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Upload your company logo (JPEG/PNG/SVG, max. 2MB)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 872,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 870,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 862,\n            columnNumber: 5\n          }, this), logoFile && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preview\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: logoFile,\n              alt: \"Logo\",\n              width: \"100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 877,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 876,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 860,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: handleSubmit,\n          children: \"Submit Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 883,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Submitting data, please wait...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 887,\n            columnNumber: 21\n          }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"success\",\n            children: successMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 888,\n            columnNumber: 28\n          }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 889,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 886,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 496,\n    columnNumber: 9\n  }, this);\n};\n_s(Sidebar, \"XeDTaYttwPaY7HUTwNGfs1tfb9s=\");\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useState","GreenTrendz","Info","Home","LayoutDashboard","FileText","BarChart2","Calculator","Settings","UserCircle","HelpCircle","CloudUpload","jsxDEV","_jsxDEV","styles","landingPage","display","height","backgroundColor","fontFamily","sidebar","width","background","color","padding","boxSizing","flexDirection","alignItems","position","zIndex","boxShadow","transition","logo","fontSize","marginBottom","fontWeight","textAlign","marginTop","logoHover","transform","navList","listStyle","margin","navItem","textDecoration","borderRadius","cursor","fontfamily","navItemHover","navIcon","marginRight","content","flex","overflowY","marginLeft","button","border","infoIcon","lineHeight","justifyContent","tooltip","visibility","opacity","tooltipVisible","popupTab","top","left","popupHeader","closeButton","buttonContainer","saveButton","cancelButton","uploadLabel","preview","success","error","menuItems","icon","label","path","Sidebar","_s","showLogoutPopup","setShowLogoutPopup","setTooltipVisible","showTooltip","key","prev","hideTooltip","toggleSection","section","setExpandedSections","environmentalData","setEnvironmentalData","socialData","setSocialData","governanceData","setGovernanceData","dataImportData","setDataImportData","startDate","endDate","csvFile","setCsvFile","logoFile","setLogoFile","loading","setLoading","successMessage","setSuccessMessage","errorMessage","setErrorMessage","handleCsvUpload","e","file","target","files","type","alert","handleLogoUpload","includes","handleSubmit","formData","FormData","append","JSON","stringify","response","fetch","method","body","ok","result","json","message","errorDetail","text","Error","status","environmentalSections","setEnvironmentalSections","title","metrics","socialSections","governanceSections","expandedSections","showPopup","setShowPopup","newMetric","setNewMetric","customSection","name","unit","unitOptions","handleAddMetric","sectionKey","prevSections","sectionExists","find","sec","map","style","children","src","alt","className","fileName","_jsxFileName","lineNumber","columnNumber","item","href","onMouseEnter","onMouseLeave","size","onClick","idx","sectionHeader","metric","i","inputContainer","htmlFor","id","value","onChange","inputField","placeholder","accept","Math","round","_c","$RefreshReg$"],"sources":["/Users/srushtipatil/Downloads/Greentrendz/final_src/src/components/FileUploads.js"],"sourcesContent":["import React, { useState } from 'react';\nimport GreenTrendz from '../assets/img/logo_1.png';\nimport './style.css';  // If style.css is in the same folder as FileUploads.js\nimport { Info } from 'lucide-react';\n\n\nimport {\n    Home,\n    LayoutDashboard,\n    FileText,\n    BarChart2,\n    Calculator,\n    Settings,\n    UserCircle,\n    HelpCircle,\n    CloudUpload,\n} from 'lucide-react';\n\nconst styles = {\n    landingPage: {\n        display: 'flex',\n        height: '100vh',\n        backgroundColor: '#f4f4f9',\n        fontFamily: 'Arial, sans-serif',\n      },\n      sidebar: {\n        width: '250px',\n        background: 'linear-gradient(to bottom right, #064e3b, #276749)',\n        color: 'white',\n        padding: '20px',\n        boxSizing: 'border-box',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n        position: 'fixed',\n        height: '100vh',\n        zIndex: 10,\n        boxShadow: '2px 0 15px rgba(0, 0, 0, 0.15)',\n        transition: 'width 0.3s ease',\n      },\n      logo: {\n        fontSize: '25px',\n        marginBottom: '30px',\n        fontWeight: 'bold',\n        color: '#fff',\n        textAlign: 'center',\n        marginTop: '20px',\n        transition: 'transform 0.3s ease',\n      },\n      logoHover: {\n        transform: 'scale(1.1)',\n      },\n      navList: {\n        listStyle: 'none',\n        padding: 0,\n        margin: 0,\n        width: '100%',\n      },\n      navItem: {\n        color: 'white',\n        textDecoration: 'none',\n        padding: '15px 20px',\n        display: 'flex',\n        alignItems: 'center',\n        width: '100%',\n        borderRadius: '8px',\n        marginBottom: '12px',\n        transition: 'background-color 0.3s ease, transform 0.3s ease',\n        cursor: 'pointer',\n        fontfamily: \"'Poppins', sans-serif\", // Custom font for links\n            fontWeight: '500', // Optional for bold text\n        },\n          navItemHover: {\n        backgroundColor: '#3b6b5c',\n        transform: 'scale(1.05)',\n      },\n      navIcon: {\n        marginRight: '20px',\n        transition: 'transform 0.3s ease',\n      },\n     \n        content: {\n            flex: 1,\n            padding: '30px',\n            boxSizing: 'border-box',\n            backgroundColor: '#f8f9fa', // Light gray background for a softer look\n            overflowY: 'auto',\n            marginLeft: '250px',\n            transition: 'margin-left 0.3s ease',\n        },\n       \n     \n        \n        \n    button: {\n        backgroundColor: '#ffffff', // Default background color\n        color: 'Black', // Text color\n        border: 'none', // No border\n        padding: '10px 20px', // Padding for a nice clickable area\n        borderRadius: '5px', // Rounded corners\n        fontWeight: 'bold', // Bold text\n        fontSize: '16px', // Font size\n        cursor: 'pointer', // Pointer cursor on hover\n        boxShadow: '0px 4px 6px rgba(0, 0, 0, 0.1)', // Subtle shadow for a 3D effect\n        transition: 'background-color 0.3s ease, transform 0.2s ease', // Smooth transition for hover effects\n      },\n      infoIcon: {\n        marginLeft: '8px',\n        cursor: 'pointer',\n        fontSize: '6px',\n        color: '#666',\n        lineHeight: '1',\n        width: '20px', // Adjust width to control circle size\n    height: '20px', // Adjust height to control circle size\n    display: 'inline-flex', // Ensures proper centering\n    alignItems: 'center', // Vertically centers the icon within the circle\n    justifyContent: 'center', // Horizontally centers the icon within the circle\n    borderRadius: '50%', // Ensures it's a circle\n    padding: '2px', // Adjust padding for inner spacing\n    },\n    tooltip: {\n        position: 'absolute',\n        backgroundColor: '#333',\n        color: '#fff',\n        padding: '5px 10px',\n        borderRadius: '4px',\n        fontSize: '12px',\n        zIndex: '1000',\n        visibility: 'hidden',\n        opacity: 0,\n        transition: 'opacity 0.3s',\n    },\n    tooltipVisible: {\n        visibility: 'visible',\n        opacity: 1,\n    },\n    popupTab: {\n        position: 'fixed',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        backgroundColor: '#fff',\n        padding: '20px',\n        borderRadius: '8px',\n        boxShadow: '0px 4px 15px rgba(0, 0, 0, 0.2)',\n        zIndex: 1000,\n        width: '400px',\n    },\n    popupHeader: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        marginBottom: '20px',\n    },\n    closeButton: {\n        backgroundColor: 'transparent',\n        border: 'none',\n        fontSize: '20px',\n        cursor: 'pointer',\n    },\n    buttonContainer: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        marginTop: '20px',\n    },\n    saveButton: {\n        backgroundColor: '#064e3b',\n        color: '#fff',\n        border: 'none',\n        padding: '10px 20px',\n        borderRadius: '5px',\n        cursor: 'pointer',\n        marginRight: '10px',\n    },\n    cancelButton: {\n        backgroundColor: '#ccc',\n        color: '#000',\n        border: 'none',\n        padding: '10px 20px',\n        borderRadius: '5px',\n        cursor: 'pointer',\n    },\n    uploadLabel: {\n        border: '2px dashed #ccc',\n        padding: '20px',\n        borderRadius: '8px',\n        textAlign: 'center',\n        cursor: 'pointer',\n        marginBottom: '20px',\n    },\n    preview: {\n        marginTop: '10px',\n        textAlign: 'center',\n    },\n    success: {\n        color: 'green',\n        marginTop: '10px',\n    },\n    error: {\n        color: 'red',\n        marginTop: '10px',\n    },\n};\n\nconst menuItems = [\n    { icon: Home, label: 'Home', path: '/land' },\n    { icon: CloudUpload, label: 'Data Upload', path: '/upload' },\n    { icon: LayoutDashboard, label: 'Dashboard', path: '/dashboard' },\n    { icon: FileText, label: 'Reports', path: '/reports' },\n    { icon: BarChart2, label: 'Comparison', path: '/comparison' },\n    { icon: Calculator, label: 'Carbon Calculator', path: '/calculator' },\n    { icon: Settings, label: 'Settings', path: '/settings' },\n    { icon: HelpCircle, label: 'Help & Support', path: '/help' },\n    { icon: UserCircle, label: 'Account', path: '/account' },\n];\n\nconst Sidebar = () => {\n    const [showLogoutPopup, setShowLogoutPopup] = useState(false);\n    const [tooltipVisible, setTooltipVisible] = useState({});\n\n    const showTooltip = (key) => {\n        setTooltipVisible((prev) => ({ ...prev, [key]: true }));\n    };\n\n    const hideTooltip = (key) => {\n        setTooltipVisible((prev) => ({ ...prev, [key]: false }));\n    };\n\n    const toggleSection = (section) => {\n        setExpandedSections((prev) => ({\n            ...prev,\n            [section]: !prev[section],\n        }));\n    };\n\n    const [environmentalData, setEnvironmentalData] = useState({});\n    const [socialData, setSocialData] = useState({});\n    const [governanceData, setGovernanceData] = useState({});\n    const [dataImportData, setDataImportData] = useState({ startDate: '', endDate: '' });\n    const [csvFile, setCsvFile] = useState(null);\n    const [logoFile, setLogoFile] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [successMessage, setSuccessMessage] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const handleCsvUpload = (e) => {\n        const file = e.target.files[0];\n        if (file && file.type !== 'text/csv') {\n            alert('Please upload a valid CSV file.');\n            return;\n        }\n        setCsvFile(file);\n    };\n\n    const handleLogoUpload = (e) => {\n        const file = e.target.files[0];\n        if (file && !['image/png', 'image/jpeg'].includes(file.type)) {\n            alert('Please upload a valid image file (PNG or JPEG).');\n            return;\n        }\n        setLogoFile(file);\n    };\n\n    const handleSubmit = async () => {\n        if (!csvFile || !logoFile) {\n            alert('Please upload both CSV and Logo files.');\n            return;\n        }\n\n        setLoading(true);\n        setSuccessMessage('');\n        setErrorMessage('');\n\n        const formData = new FormData();\n        formData.append('environmentalData', JSON.stringify(environmentalData));\n        formData.append('socialData', JSON.stringify(socialData));\n        formData.append('governanceData', JSON.stringify(governanceData));\n        formData.append('startDate', dataImportData.startDate);\n        formData.append('endDate', dataImportData.endDate);\n        formData.append('csvFile', csvFile);\n        formData.append('logoFile', logoFile);\n\n        try {\n            const response = await fetch('http://localhost:5003/api/save-esg-data', {\n                method: 'POST',\n                body: formData,\n            });\n\n            if (response.ok) {\n                const result = await response.json();\n                setSuccessMessage(result.message || 'Data submitted successfully!');\n            } else {\n                const errorDetail = await response.text();\n                throw new Error(`Error ${response.status}: ${errorDetail}`);\n            }\n        } catch (error) {\n            setErrorMessage('Error submitting data: ' + error.message);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const [environmentalSections, setEnvironmentalSections] = useState([\n        {\n            title: 'Energy',\n            metrics: [\n                { label: 'Coal (tons, GJ)', key: 'coal', type: 'number' },\n                { label: 'Diesel (L, GJ)', key: 'diesel', type: 'number' },\n                { label: 'High-Speed Diesel (HSD) (L, GJ)', key: 'hsd', type: 'number' },\n                { label: 'Petrol (L, GJ)', key: 'petrol', type: 'number' },\n                { label: 'Liquefied Petroleum Gas (LPG) (m³, GJ)', key: 'lpg', type: 'number' },\n                { label: 'Natural Gas (m³, GJ)', key: 'naturalGas', type: 'number' },\n                { label: 'LNG/PNG (m³, GJ)', key: 'lngPng', type: 'number' },\n                { label: 'Solar Energy (MWh, kWh)', key: 'solarEnergy', type: 'number' },\n                { label: 'Wind Energy (MWh, kWh)', key: 'windEnergy', type: 'number' },\n                { label: 'Hydroelectric Energy (MWh, kWh)', key: 'hydroEnergy', type: 'number' },\n                { label: 'Biomass (tons, GJ)', key: 'biomass', type: 'number' },\n                { label: 'Renewable Energy Generated (MWh, %)', key: 'renewableEnergyGenerated', type: 'number' },\n                { label: 'On-site Energy Consumption (MWh, GJ)', key: 'onsiteEnergyConsumption', type: 'number' },\n                { label: 'Biodiesel (L, GJ)', key: 'biodiesel', type: 'number' },\n            ],\n        },\n        {\n            title: 'Water',\n            metrics: [\n                { label: 'Produced Water Withdrawal (m³, L)', key: 'producedWaterWithdrawal', type: 'number' },\n                { label: 'Surface Water Withdrawal (m³, L)', key: 'surfaceWaterWithdrawal', type: 'number' },\n                { label: 'Ground Water Withdrawal (m³, L)', key: 'groundWaterWithdrawal', type: 'number' },\n                { label: 'Seawater Withdrawal (m³, L)', key: 'seawaterWithdrawal', type: 'number' },\n                { label: 'Third-Party Water Withdrawal (m³, L)', key: 'thirdPartyWaterWithdrawal', type: 'number' },\n                { label: 'Water Consumption (m³, L)', key: 'waterConsumption', type: 'number' },\n                { label: 'Water Recycled (m³, %)', key: 'waterRecycled', type: 'number' },\n                { label: 'Water Discharge to Surface Water (m³, L)', key: 'waterDischargeSurface', type: 'number' },\n                { label: 'Water Discharge to Groundwater (m³, L)', key: 'waterDischargeGround', type: 'number' },\n                { label: 'Water Discharge to Third-Party (m³, L)', key: 'waterDischargeThirdParty', type: 'number' },\n                { label: 'Water Discharge to Seawater (m³, L)', key: 'waterDischargeSeawater', type: 'number' },\n                { label: 'Wastewater Generated (m³, L)', key: 'wastewaterGenerated', type: 'number' },\n            ],\n        },\n        {\n            title: 'Waste',\n            metrics: [\n                { label: 'E-Waste (kg, tons, % recycled)', key: 'eWaste', type: 'number' },\n                { label: 'Plastic Waste (kg, tons, % recycled)', key: 'plasticWaste', type: 'number' },\n                { label: 'Metal Waste (kg, tons, % recycled)', key: 'metalWaste', type: 'number' },\n                { label: 'Glass Waste (kg, tons, % recycled)', key: 'glassWaste', type: 'number' },\n                { label: 'Batteries and Accumulator Waste (kg, tons, % recycled)', key: 'batteryWaste', type: 'number' },\n                { label: 'Civil Waste (kg, tons, % recycled)', key: 'civilWaste', type: 'number' },\n                { label: 'Miscellaneous Waste (kg, tons, % recycled)', key: 'miscWaste', type: 'number' },\n                { label: 'Biomedical Waste (kg, tons, % recycled)', key: 'biomedicalWaste', type: 'number' },\n                { label: 'Feed Waste (kg, tons, % recycled)', key: 'feedWaste', type: 'number' },\n                { label: 'Hazardous Waste Generation (kg, tons)', key: 'hazardousWaste', type: 'number' },\n            ],\n        },\n        {\n            title: 'Emissions',\n            metrics: [\n                { label: 'Greenhouse Gas (GHG) Emissions (tons CO₂e)', key: 'ghgEmissions', type: 'number' },\n                { label: 'Effluent Discharge (m³, L, ppm)', key: 'effluentDischarge', type: 'number' },\n            ],\n        },\n        {\n            title: 'Other Environmental Factors',\n            metrics: [\n                { label: 'Environmental Incidents (count)', key: 'environmentalIncidents', type: 'number' },\n                { label: 'Solar Panel Recycling (% recycled, kg, tons)', key: 'solarPanelRecycling', type: 'number' },\n            ],\n        },\n    ]);\n    \n    const socialSections = [\n        {\n            title: 'Workforce Management',\n            metrics: [\n                { label: 'Number of New Employees )', key: 'employeeDiversity', type: 'number' },\n                { label: 'Male vs Female )', key: 'employeeDiversity', type: 'number' },\n                { label: 'Employee Diversity & Inclusion (% female, % minorities, % disabled employees)', key: 'employeeDiversity', type: 'number' },\n                { label: 'Employee Training & Development (hours per employee, $ spent per employee)', key: 'employeeTraining', type: 'number' },\n                { label: 'Employee Turnover Rate (%)', key: 'employeeTurnover', type: 'number' },\n                { label: 'Workplace Safety & Health (injury rate per 100 employees, fatalities count)', key: 'workplaceSafety', type: 'number' },\n                { label: 'Human Rights & Labor Standards (% compliance, number of reported violations)', key: 'humanRights', type: 'number' },\n                { label: 'Fair Wages & Compensation (minimum wage compliance %, wage gap %)', key: 'fairWages', type: 'number' },\n            ],\n        },\n        {\n            title: 'Community Engagement',\n            metrics: [\n                { label: 'Corporate Social Responsibility (CSR) Programs (number of programs, $ spent)', key: 'csrPrograms', type: 'number' },\n                { label: 'Community Investments (total $ invested)', key: 'communityInvestments', type: 'number' },\n                { label: 'Volunteer Programs (% employee participation, hours volunteered)', key: 'volunteerPrograms', type: 'number' },\n                { label: 'Philanthropic Activities ($ donated, number of beneficiaries)', key: 'philanthropicActivities', type: 'number' },\n            ],\n        },\n        {\n            title: 'Product Responsibility',\n            metrics: [\n                { label: 'Customer Health & Safety (% compliance with safety standards, number of recalls)', key: 'customerSafety', type: 'number' },\n                { label: 'Data Privacy & Protection (number of breaches, % compliance with GDPR/CCPA)', key: 'dataPrivacy', type: 'number' },\n                { label: 'Ethical Marketing & Advertising (% compliance, number of violations)', key: 'ethicalMarketing', type: 'number' },\n                { label: 'Product Quality & Safety (number of defects per million units, recall count)', key: 'productQuality', type: 'number' },\n            ],\n        },\n        {\n            title: 'Supply Chain Responsibility',\n            metrics: [\n                { label: 'Supplier ESG Compliance (% compliant suppliers, count of audits conducted)', key: 'supplierCompliance', type: 'number' },\n                { label: 'Fair Trade Practices (% fair-trade certified suppliers)', key: 'fairTrade', type: 'number' },\n                { label: 'Ethical Sourcing (% responsibly sourced materials)', key: 'ethicalSourcing', type: 'number' },\n            ],\n        },\n    ];\n\n    const governanceSections = [\n        {\n            title: 'Corporate Ethics & Compliance',\n            metrics: [\n                { label: 'Anti-Corruption & Bribery Policies (number of violations, % compliance)', key: 'antiCorruption', type: 'number' },\n                { label: 'Whistleblower Protection (number of cases reported, resolution time in days)', key: 'whistleblowerProtection', type: 'number' },\n                { label: 'Code of Conduct (% compliance, number of violations)', key: 'codeOfConduct', type: 'number' },\n            ],\n        },\n        {\n            title: 'Board & Leadership',\n            metrics: [\n                { label: 'Board Diversity & Independence (% female board members, % independent directors)', key: 'boardDiversity', type: 'number' },\n                { label: 'Executive Compensation (CEO pay ratio, total executive compensation in $)', key: 'executiveCompensation', type: 'number' },\n                { label: 'Shareholder Rights (number of resolutions passed, % participation in voting)', key: 'shareholderRights', type: 'number' },\n            ],\n        },\n        {\n            title: 'Risk Management',\n            metrics: [\n                { label: 'Cybersecurity & Data Protection (number of incidents, % compliance with regulations)', key: 'cybersecurity', type: 'number' },\n                { label: 'Business Continuity Planning (number of plans in place, % tested annually)', key: 'businessContinuity', type: 'number' },\n                { label: 'Climate-Related Risks ($ financial impact, % assets at risk)', key: 'climateRisks', type: 'number' },\n            ],\n        },\n        {\n            title: 'Regulatory & Reporting Compliance',\n            metrics: [\n                { label: 'ESG Disclosure & Transparency (% compliance, number of reports published annually)', key: 'esgDisclosure', type: 'number' },\n                { label: 'Legal & Regulatory Compliance (number of violations, total fines in $)', key: 'legalCompliance', type: 'number' },\n            ],\n        },\n    ];\n\n   // ✅ Fix: Declare expandedSections properly\n   const [expandedSections, setExpandedSections] = useState({});\n\n   const [showPopup, setShowPopup] = useState(false);\n   const [newMetric, setNewMetric] = useState({\n       section: '',\n       customSection: '',\n       name: '',\n       type: 'number',\n       unit: '',\n   });\n\n   const unitOptions = [\"kg\", \"tons\", \"L\", \"m³\", \"MWh\", \"kWh\", \"%\", \"ppm\", \"count\"];\n\n   const handleAddMetric = () => {\n       if (!newMetric.section || !newMetric.name || !newMetric.unit) {\n           alert(\"Please fill all fields before adding a metric.\");\n           return;\n       }\n\n       let sectionKey = newMetric.section === \"Other\" ? newMetric.customSection : newMetric.section;\n\n       if (!sectionKey) {\n           alert(\"Please provide a name for the 'Other' section.\");\n           return;\n       }\n\n       setEnvironmentalSections((prevSections) => {\n           let sectionExists = prevSections.find(sec => sec.title === sectionKey);\n\n           if (sectionExists) {\n               return prevSections.map(sec =>\n                   sec.title === sectionKey\n                       ? { ...sec, metrics: [...sec.metrics, { label: newMetric.name, type: newMetric.type, unit: newMetric.unit }] }\n                       : sec\n               );\n           } else {\n               return [...prevSections, {\n                   title: sectionKey,\n                   metrics: [{ label: newMetric.name, type: newMetric.type, unit: newMetric.unit }],\n               }];\n           }\n       });\n\n       setShowPopup(false);\n       setNewMetric({ section: '', customSection: '', name: '', type: 'number', unit: '' });\n   };\n\n    return (\n        <div style={styles.landingPage}>\n            <nav style={styles.sidebar}>\n                <div style={{ display: 'flex', alignItems: 'center' }}>\n                    <img\n                        src={GreenTrendz}\n                        alt=\"Logo\"\n                        width=\"50\"\n                        height=\"50\"\n                        className=\"d-inline-block align-top me-2\"\n                    />\n                    <h5 style={styles.logo}>GreenTrendz</h5>\n                </div>\n                <ul style={styles.navList}>\n                    {menuItems.map((item) => (\n                        <li key={item.path}>\n                            <a\n                                href={item.path}\n                                style={styles.navItem}\n                                onMouseEnter={(e) => {\n                                    e.target.style.backgroundColor = '#3b6b5c';\n                                    e.target.style.transform = 'scale(1.05)';\n                                }}\n                                onMouseLeave={(e) => {\n                                    e.target.style.backgroundColor = '';\n                                    e.target.style.transform = '';\n                                }}\n                            >\n                                <item.icon style={styles.navIcon} size={20} />\n                                <span>{item.label}</span>\n                            </a>\n                        </li>\n                    ))}\n                </ul>\n                <div style={{ marginTop: 'auto', textAlign: 'center' }}>\n                    <button\n                        style={styles.button}\n                        onClick={() => setShowLogoutPopup(true)}\n                    >\n                        Logout\n                    </button>\n                </div>\n            </nav>\n            <div style={styles.content}>\n                <div className=\"container\">\n                    <div className=\"section\">\n                        <h1 className=\"sectionTitle\">Upload ESG Data</h1>\n                        <h2 className=\"sectionTitle\">Annual ESG Metrics</h2>\n\n                          {/* Environmental Section */}\n                    <div className=\"section\">\n                        <h3>Environmental</h3>\n                        {environmentalSections.map((section, idx) => (\n                            <div key={idx} style={styles.section}>\n                                <div\n                                    style={styles.sectionHeader}\n                                    onClick={() => toggleSection(section.title)}\n                                >\n                                    <h4>{section.title}</h4>\n                                    <span>{expandedSections[section.title] ? '▲' : '▼'}</span>\n                                </div>\n                                {expandedSections[section.title] && (\n                                    <div>\n                                        {section.metrics.map((metric, i) => (\n                                            <div key={i} style={styles.inputContainer}>\n                                                <label htmlFor={metric.key}>\n                                                    {metric.label}\n                                                    <Info\n                                                        style={styles.infoIcon}\n                                                        onMouseEnter={() => showTooltip(metric.key)}\n                                                        onMouseLeave={() => hideTooltip(metric.key)}\n                                                    />\n                                                </label>\n                                                <input\n                                                    id={metric.key}\n                                                    type={metric.type}\n                                                    value={environmentalData[metric.key] || ''}\n                                                    onChange={(e) =>\n                                                        setEnvironmentalData((prev) => ({\n                                                            ...prev,\n                                                            [metric.key]: e.target.value,\n                                                        }))\n                                                    }\n                                                    style={styles.inputField}\n                                                />\n                                            </div>\n                                        ))}\n                                    </div>\n                                )}\n                            </div>\n                        ))}\n\n\n                  {/* Button to open popup */}\n            <button style={styles.button} onClick={() => setShowPopup(true)}>\n                Add New Environmental Metric\n            </button>        \n                        \n                        {/* Popup Tab for Adding New Metric */}\n            {showPopup && (\n                <div style={styles.popupTab}>\n                    <div style={styles.popupHeader}>\n                        <h3>Add New Environmental Metric</h3>\n                        <button style={styles.closeButton} onClick={() => setShowPopup(false)}>\n                            ✖\n                        </button>\n                    </div>\n\n                    {/* Section Selection */}\n                    <label>Section:</label>\n                    <select\n                        value={newMetric.section}\n                        onChange={(e) =>\n                            setNewMetric((prev) => ({\n                                ...prev,\n                                section: e.target.value,\n                                customSection: e.target.value === \"Other\" ? \"\" : prev.customSection,\n                            }))\n                        }\n                        style={styles.inputField}\n                    >\n                        <option value=\"\">Select Section</option>\n                        {environmentalSections.map((section, i) => (\n                            <option key={i} value={section.title}>\n                                {section.title}\n                            </option>\n                        ))}\n                        <option value=\"Other\">Other</option>\n                    </select>\n\n                    {/* Custom Section Name */}\n                    {newMetric.section === \"Other\" && (\n                        <div>\n                            <label>Custom Section Name:</label>\n                            <input\n                                type=\"text\"\n                                value={newMetric.customSection}\n                                onChange={(e) =>\n                                    setNewMetric((prev) => ({\n                                        ...prev,\n                                        customSection: e.target.value,\n                                    }))\n                                }\n                                placeholder=\"Enter custom section name\"\n                                style={styles.inputField}\n                            />\n                        </div>\n                    )}\n\n                    {/* Metric Name */}\n                    <label>Metric Name:</label>\n                    <input\n                        type=\"text\"\n                        value={newMetric.name}\n                        onChange={(e) =>\n                            setNewMetric((prev) => ({\n                                ...prev,\n                                name: e.target.value,\n                            }))\n                        }\n                        placeholder=\"Enter Metric Name\"\n                        style={styles.inputField}\n                    />\n\n                    {/* Unit Selection */}\n                    <label>Unit:</label>\n                    <select\n                        value={newMetric.unit}\n                        onChange={(e) =>\n                            setNewMetric((prev) => ({\n                                ...prev,\n                                unit: e.target.value,\n                            }))\n                        }\n                        style={styles.inputField}\n                    >\n                        <option value=\"\">Select Unit</option>\n                        {unitOptions.map((unit, i) => (\n                            <option key={i} value={unit}>\n                                {unit}\n                            </option>\n                        ))}\n                    </select>\n\n                    {/* Action Buttons */}\n                    <div style={styles.buttonContainer}>\n                        <button onClick={handleAddMetric} style={styles.saveButton}>\n                            Save Metric\n                        </button>\n                        <button onClick={() => setShowPopup(false)} style={styles.cancelButton}>\n                            Cancel\n                        </button>\n                    </div>\n                </div>\n            )}\n        </div></div>\n        \n                    {/* Social Section */}\n                    <div className=\"section\">\n                        <h3>Social</h3>\n                        {socialSections.map((section, idx) => (\n                            <div key={idx} style={styles.section}>\n                                <div\n                                    style={styles.sectionHeader}\n                                    onClick={() => toggleSection(section.title)}\n                                >\n                                    <h4>{section.title}</h4>\n                                    <span>{expandedSections[section.title] ? '▲' : '▼'}</span>\n                                </div>\n                                {expandedSections[section.title] && (\n                                    <div>\n                                        {section.metrics.map((metric, i) => (\n                                            <div key={i} style={styles.inputContainer}>\n                                                <label htmlFor={metric.key}>\n                                                    {metric.label}\n                                                    <Info\n                                                        style={styles.infoIcon}\n                                                        onMouseEnter={() => showTooltip(metric.key)}\n                                                        onMouseLeave={() => hideTooltip(metric.key)}\n                                                    />\n                                                </label>\n                                                <input\n                                                    id={metric.key}\n                                                    type={metric.type}\n                                                    value={socialData[metric.key] || ''}\n                                                    onChange={(e) =>\n                                                        setSocialData((prev) => ({\n                                                            ...prev,\n                                                            [metric.key]: e.target.value,\n                                                        }))\n                                                    }\n                                                    style={styles.inputField}\n                                                />\n                                            </div>\n                                        ))}\n                                    </div>\n                                )}\n                            </div>\n                        ))}\n                        <button\n                            style={styles.button}\n                            onClick={() => alert('Add New Metric functionality here')}\n                        >\n                            Add New Social Metric\n                        </button>\n                    </div>\n\n                    {/* Governance Section */}\n                    <div className=\"section\">\n                        <h3>Governance</h3>\n                        {governanceSections.map((section, idx) => (\n                            <div key={idx} style={styles.section}>\n                                <div\n                                    style={styles.sectionHeader}\n                                    onClick={() => toggleSection(section.title)}\n                                >\n                                    <h4>{section.title}</h4>\n                                    <span>{expandedSections[section.title] ? '▲' : '▼'}</span>\n                                </div>\n                                {expandedSections[section.title] && (\n                                    <div>\n                                        {section.metrics.map((metric, i) => (\n                                            <div key={i} style={styles.inputContainer}>\n                                                <label htmlFor={metric.key}>\n                                                    {metric.label}\n                                                    <Info\n                                                        style={styles.infoIcon}\n                                                        onMouseEnter={() => showTooltip(metric.key)}\n                                                        onMouseLeave={() => hideTooltip(metric.key)}\n                                                    />\n                                                </label>\n                                                <input\n                                                    id={metric.key}\n                                                    type={metric.type}\n                                                    value={governanceData[metric.key] || ''}\n                                                    onChange={(e) =>\n                                                        setGovernanceData((prev) => ({\n                                                            ...prev,\n                                                            [metric.key]: e.target.value,\n                                                        }))\n                                                    }\n                                                    style={styles.inputField}\n                                                />\n                                            </div>\n                                        ))}\n                                    </div>\n                                )}\n                            </div>\n                        ))}\n                        <button\n                            style={styles.button}\n                            onClick={() => alert('Add New Metric functionality here')}\n                        >\n                            Add New Governance Metric\n                        </button>\n                    </div>\n\n                     \n\n\n\n\n{/* Data Import Section */}\n<div className=\"section\">\n  <h3>Data Import</h3>\n   \n  <div className=\"date-picker-container\">\n    <div className=\"inputColumn\">\n      <label>Start Date</label>\n      <input\n        type=\"date\"\n        value={dataImportData.startDate}\n        onChange={(e) =>\n          setDataImportData({\n            ...dataImportData,\n            startDate: e.target.value,\n          })\n        }\n        className=\"inputField\"\n      />\n    </div>\n    <div className=\"inputColumn\">\n      <label>End Date</label>\n      <input\n        type=\"date\"\n        value={dataImportData.endDate}\n        onChange={(e) =>\n          setDataImportData({\n            ...dataImportData,\n            endDate: e.target.value,\n          })\n        }\n        className=\"inputField\"\n      />\n    </div>\n  </div>\n</div>\n\n\n\n           {/* File Upload Section */}\n<div className=\"section\">\n    <h3>Upload CSV</h3>\n    <div className=\"file-upload-container\">\n        <input\n            type=\"file\"\n            accept=\".csv\"\n            onChange={handleCsvUpload}\n            className=\"inputField\"\n            id=\"csv-upload\"\n        />\n        <label htmlFor=\"csv-upload\" className=\"upload-label\">\n            <p>Click to upload or drag and drop</p>\n            <p>Upload a CSV file (max. 5MB) containing Metric Name, Value, and Timestamp columns</p>\n        </label>\n    </div>\n    {csvFile && (\n        <div className=\"preview\">\n            <p>{csvFile.name}</p>\n            <p>{Math.round(csvFile.size / 1024)} KB</p>\n        </div>\n    )}\n</div>\n\n{/* Logo Upload Section */}\n<div className=\"section\">\n    <h3>Upload Logo</h3>\n    <div className=\"file-upload-container\">\n        <input\n            type=\"file\"\n            accept=\"image/*\"\n            onChange={handleLogoUpload}\n            className=\"inputField\"\n            id=\"logo-upload\"\n        />\n        <label htmlFor=\"logo-upload\" className=\"upload-label\">\n            <p>Click to upload or drag and drop</p>\n            <p>Upload your company logo (JPEG/PNG/SVG, max. 2MB)</p>\n        </label>\n    </div>\n    {logoFile && (\n        <div className=\"preview\">\n            <img src={logoFile} alt=\"Logo\" width=\"100\" />\n        </div>\n    )}\n</div>\n\n{/* Submit Button */}\n<button className=\"button\" onClick={handleSubmit}>\n    Submit Data\n</button>\n<div>\n        {loading && <p>Submitting data, please wait...</p>}\n        {successMessage && <p className=\"success\">{successMessage}</p>}\n        {errorMessage && <p className=\"error\">{errorMessage}</p>}\n    </div>\n</div>\n    </div>\n       \n    </div>\n    );\n};\n\nexport default Sidebar;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}