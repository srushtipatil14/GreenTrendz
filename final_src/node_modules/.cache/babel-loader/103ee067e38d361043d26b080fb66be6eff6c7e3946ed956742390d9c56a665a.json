{"ast":null,"code":"var _jsxFileName = \"/Users/srushtipatil/Downloads/Greentrendz/final_src/src/components/FileUploads.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport GreenTrendz from '../assets/img/logo_1.png';\nimport './style.css'; // If style.css is in the same folder as FileUploads.js\nimport { Info } from 'lucide-react';\nimport { Home, LayoutDashboard, FileText, BarChart2, Calculator, Settings, UserCircle, HelpCircle, CloudUpload } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  landingPage: {\n    display: 'flex',\n    height: '100vh',\n    backgroundColor: '#f4f4f9',\n    fontFamily: 'Arial, sans-serif'\n  },\n  sidebar: {\n    width: '250px',\n    background: 'linear-gradient(to bottom right, #064e3b, #276749)',\n    color: 'white',\n    padding: '20px',\n    boxSizing: 'border-box',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    position: 'fixed',\n    height: '100vh',\n    zIndex: 10,\n    boxShadow: '2px 0 15px rgba(0, 0, 0, 0.15)',\n    transition: 'width 0.3s ease'\n  },\n  logo: {\n    fontSize: '25px',\n    marginBottom: '30px',\n    fontWeight: 'bold',\n    color: '#fff',\n    textAlign: 'center',\n    marginTop: '20px',\n    transition: 'transform 0.3s ease'\n  },\n  logoHover: {\n    transform: 'scale(1.1)'\n  },\n  navList: {\n    listStyle: 'none',\n    padding: 0,\n    margin: 0,\n    width: '100%'\n  },\n  navItem: {\n    color: 'white',\n    textDecoration: 'none',\n    padding: '15px 20px',\n    display: 'flex',\n    alignItems: 'center',\n    width: '100%',\n    borderRadius: '8px',\n    marginBottom: '12px',\n    transition: 'background-color 0.3s ease, transform 0.3s ease',\n    cursor: 'pointer',\n    fontfamily: \"'Poppins', sans-serif\",\n    // Custom font for links\n    fontWeight: '500' // Optional for bold text\n  },\n  navItemHover: {\n    backgroundColor: '#3b6b5c',\n    transform: 'scale(1.05)'\n  },\n  navIcon: {\n    marginRight: '20px',\n    transition: 'transform 0.3s ease'\n  },\n  content: {\n    flex: 1,\n    padding: '30px',\n    boxSizing: 'border-box',\n    backgroundColor: '#f8f9fa',\n    // Light gray background for a softer look\n    overflowY: 'auto',\n    marginLeft: '250px',\n    transition: 'margin-left 0.3s ease'\n  },\n  button: {\n    backgroundColor: '#ffffff',\n    // Default background color\n    color: 'Black',\n    // Text color\n    border: 'none',\n    // No border\n    padding: '10px 20px',\n    // Padding for a nice clickable area\n    borderRadius: '5px',\n    // Rounded corners\n    fontWeight: 'bold',\n    // Bold text\n    fontSize: '16px',\n    // Font size\n    cursor: 'pointer',\n    // Pointer cursor on hover\n    boxShadow: '0px 4px 6px rgba(0, 0, 0, 0.1)',\n    // Subtle shadow for a 3D effect\n    transition: 'background-color 0.3s ease, transform 0.2s ease' // Smooth transition for hover effects\n  },\n  infoIcon: {\n    marginLeft: '8px',\n    cursor: 'pointer',\n    fontSize: '6px',\n    color: '#666',\n    lineHeight: '1',\n    width: '20px',\n    // Adjust width to control circle size\n    height: '20px',\n    // Adjust height to control circle size\n    display: 'inline-flex',\n    // Ensures proper centering\n    alignItems: 'center',\n    // Vertically centers the icon within the circle\n    justifyContent: 'center',\n    // Horizontally centers the icon within the circle\n    borderRadius: '50%',\n    // Ensures it's a circle\n    padding: '2px' // Adjust padding for inner spacing\n  },\n  tooltip: {\n    position: 'absolute',\n    backgroundColor: '#333',\n    color: '#fff',\n    padding: '5px 10px',\n    borderRadius: '4px',\n    fontSize: '12px',\n    zIndex: '1000',\n    visibility: 'hidden',\n    opacity: 0,\n    transition: 'opacity 0.3s'\n  },\n  tooltipVisible: {\n    visibility: 'visible',\n    opacity: 1\n  },\n  addButton: {\n    marginTop: '20px',\n    padding: '10px 20px',\n    backgroundColor: '#28a745',\n    color: '#fff',\n    border: 'none',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    fontWeight: 'bold'\n  },\n  inputField: {\n    margin: '10px 0',\n    padding: '10px',\n    width: '100%',\n    borderRadius: '4px',\n    border: '1px solid #ccc'\n  }\n};\nconst menuItems = [{\n  icon: Home,\n  label: 'Home',\n  path: '/land'\n}, {\n  icon: CloudUpload,\n  label: 'Data Upload',\n  path: '/upload'\n}, {\n  icon: LayoutDashboard,\n  label: 'Dashboard',\n  path: '/dashboard'\n}, {\n  icon: FileText,\n  label: 'Reports',\n  path: '/reports'\n}, {\n  icon: BarChart2,\n  label: 'Comparison',\n  path: '/comparison'\n}, {\n  icon: Calculator,\n  label: 'Carbon Calculator',\n  path: '/calculator'\n}, {\n  icon: Settings,\n  label: 'Settings',\n  path: '/settings'\n}, {\n  icon: HelpCircle,\n  label: 'Help & Support',\n  path: '/help'\n}, {\n  icon: UserCircle,\n  label: 'Account',\n  path: '/account'\n} // Added Account item\n];\nconst Sidebar = () => {\n  _s();\n  const [showLogoutPopup, setShowLogoutPopup] = useState(false);\n  const [tooltipVisible, setTooltipVisible] = useState({});\n  const showTooltip = key => {\n    setTooltipVisible(prev => ({\n      ...prev,\n      [key]: true\n    }));\n  };\n  const hideTooltip = key => {\n    setTooltipVisible(prev => ({\n      ...prev,\n      [key]: false\n    }));\n  };\n  const [environmentalData, setEnvironmentalData] = useState({\n    renewableEnergyUsage: '',\n    totalEnergyConsumption: '',\n    greenBuildingCertifications: '',\n    ghgEmissionTargets: '',\n    energyEfficientSystems: '',\n    wastewaterReused: '',\n    rainwaterHarvesting: '',\n    recycledWaterUse: '',\n    zeroWasteToLandfill: '',\n    wasteSentToRecyclers: '',\n    nativeLandscaping: '',\n    biodiversityMeasures: ''\n  });\n  const [socialData, setSocialData] = useState({\n    genderDiversity: '',\n    employeeTrainingHours: '',\n    volunteerismHoursPerEmployee: '',\n    workforceSafetyIncidents: '',\n    csrInitiatives: '',\n    communityEngagementHours: '',\n    sustainableCommunityDevelopment: '',\n    humanRightsComplaints: '',\n    wellCertifiedProjects: '',\n    deiPrograms: ''\n  });\n  const [governanceData, setGovernanceData] = useState({\n    independentDirectors: '',\n    boardGovernanceInitiatives: '',\n    regulatoryComplianceStatus: '',\n    nonComplianceCases: '',\n    employeesTrainedOnCodeOfConduct: '',\n    ethicsViolationsReported: '',\n    riskManagementFramework: '',\n    riskAssessmentsConducted: ''\n  });\n  // Add new state for dynamic metrics\n  // States\n  const [dynamicMetrics, setDynamicMetrics] = useState({\n    Environmental: [],\n    Social: [],\n    Governance: []\n  });\n  const [newMetricForm, setNewMetricForm] = useState({\n    section: '',\n    label: '',\n    key: '',\n    type: 'text',\n    options: [] // for dropdown type\n  });\n  const [showNewMetricForm, setShowNewMetricForm] = useState(false);\n  const [modalPosition, setModalPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const handleButtonClick = (e, section) => {\n    const rect = e.target.getBoundingClientRect();\n    const viewportHeight = window.innerHeight;\n    const modalHeight = 400; // Increased for form content\n\n    let yPosition = rect.top + window.scrollY;\n    if (rect.top + modalHeight > viewportHeight) {\n      yPosition = rect.top - modalHeight;\n    }\n    setModalPosition({\n      x: rect.left,\n      y: yPosition\n    });\n    setNewMetricForm(prev => ({\n      ...prev,\n      section\n    }));\n    setShowNewMetricForm(true);\n    setErrorMessage(''); // Clear any previous errors\n  };\n\n  // Handler for adding new metric\n  const handleAddMetric = section => {\n    // Validate required fields\n    if (newMetricForm.label && newMetricForm.key) {\n      if (newMetricForm.type === 'dropdown' && newMetricForm.options.length === 0) {\n        setErrorMessage('Options cannot be empty for dropdown type.');\n        return;\n      }\n      setDynamicMetrics(prev => {\n        const updatedMetrics = {\n          ...prev,\n          [section]: [...prev[section], {\n            label: newMetricForm.label,\n            key: newMetricForm.key,\n            type: newMetricForm.type,\n            options: newMetricForm.type === 'dropdown' ? newMetricForm.options : undefined\n          }]\n        };\n        console.log('Updated Dynamic Metrics:', updatedMetrics);\n        return updatedMetrics;\n      });\n      console.log('New Metric Added:', newMetricForm);\n\n      // Reset form\n      setNewMetricForm({\n        section: '',\n        label: '',\n        key: '',\n        type: 'text',\n        options: []\n      });\n\n      // Close modal\n      setShowNewMetricForm(false);\n      console.log('Modal closed');\n    } else {\n      setErrorMessage('Metric name is required!');\n    }\n  };\n\n  // Handler to open the new metric form modal\n  const openNewMetricForm = section => {\n    setNewMetricForm(prev => ({\n      ...prev,\n      section: section\n    }));\n    setShowNewMetricForm(true);\n  };\n  useEffect(() => {\n    if (showNewMetricForm) {\n      const modalElement = document.getElementById('metric-modal');\n      if (modalElement) {\n        modalElement.scrollIntoView({\n          behavior: 'smooth',\n          block: 'nearest'\n        });\n      }\n    }\n  }, [showNewMetricForm]);\n  const [dataImportData, setDataImportData] = useState({\n    startDate: '',\n    endDate: ''\n  });\n  const [csvFile, setCsvFile] = useState(null);\n  const [logoFile, setLogoFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleCsvUpload = e => {\n    const file = e.target.files[0];\n    if (file && file.type !== 'text/csv') {\n      alert('Please upload a valid CSV file.');\n      return;\n    }\n    setCsvFile(file);\n  };\n  const handleLogoUpload = e => {\n    const file = e.target.files[0];\n    if (file && !['image/png', 'image/jpeg'].includes(file.type)) {\n      alert('Please upload a valid image file (PNG or JPEG).');\n      return;\n    }\n    setLogoFile(file);\n  };\n  const handleSubmit = async () => {\n    // Validation: Check if start and end date are provided when uploading a CSV\n    if (!csvFile && (!dataImportData.startDate || !dataImportData.endDate)) {\n      alert('Please select both start and end dates if uploading a CSV file.');\n      return;\n    }\n    if (!csvFile || !logoFile) {\n      alert('Please upload both CSV and Logo files.');\n      return;\n    }\n    setLoading(true);\n    setSuccessMessage('');\n    setErrorMessage('');\n    const formData = new FormData();\n    formData.append('environmentalData', JSON.stringify(environmentalData));\n    formData.append('socialData', JSON.stringify(socialData));\n    formData.append('governanceData', JSON.stringify(governanceData));\n    formData.append('startDate', dataImportData.startDate);\n    formData.append('endDate', dataImportData.endDate);\n    if (csvFile) formData.append('csvFile', csvFile);\n    if (logoFile) formData.append('logoFile', logoFile);\n    // Debugging: Log form data for inspection\n    console.log('Submitting Form Data:');\n    console.log('Environmental Data:', environmentalData);\n    console.log('Social Data:', socialData);\n    console.log('Governance Data:', governanceData);\n    console.log('Start Date:', dataImportData.startDate);\n    console.log('End Date:', dataImportData.endDate);\n    try {\n      // Handle file uploads first\n      let fileUploadResults = {};\n      if (csvFile || logoFile) {\n        fileUploadResults = await uploadFiles({\n          csvFile,\n          logoFile\n        });\n      }\n\n      // Prepare JSON data\n      const jsonData = {\n        environmentalData: {\n          ...environmentalData,\n          ...Object.fromEntries(dynamicMetrics.Environmental.map(metric => [metric.key, environmentalData[metric.key] || '']))\n        },\n        socialData: {\n          ...socialData,\n          ...Object.fromEntries(dynamicMetrics.Social.map(metric => [metric.key, socialData[metric.key] || '']))\n        },\n        governanceData: {\n          ...governanceData,\n          ...Object.fromEntries(dynamicMetrics.Governance.map(metric => [metric.key, governanceData[metric.key] || '']))\n        },\n        dateRange: {\n          startDate: dataImportData.startDate,\n          endDate: dataImportData.endDate\n        },\n        fileReferences: fileUploadResults,\n        dynamicMetrics: dynamicMetrics\n      };\n      const response = await fetch('http://localhost:5003/api/save-esg-data', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        const result = await response.json();\n        setSuccessMessage(result.message || 'Data submitted successfully!');\n      } else {\n        const errorDetail = await response.text();\n        throw new Error(`Error ${response.status}: ${errorDetail}`);\n      }\n    } catch (error) {\n      setErrorMessage('Error submitting data: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.landingPage,\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      style: styles.sidebar,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: GreenTrendz,\n          alt: \"Logo\",\n          width: \"50\",\n          height: \"50\",\n          className: \"d-inline-block align-top me-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          style: styles.logo,\n          children: \"GreenTrendz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: styles.navList,\n        children: menuItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: item.path,\n            style: styles.navItem,\n            onMouseEnter: e => {\n              e.target.style.backgroundColor = '#3b6b5c';\n              e.target.style.transform = 'scale(1.05)';\n            },\n            onMouseLeave: e => {\n              e.target.style.backgroundColor = '';\n              e.target.style.transform = '';\n            },\n            children: [/*#__PURE__*/_jsxDEV(item.icon, {\n              style: styles.navIcon,\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: item.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 29\n          }, this)\n        }, item.path, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 'auto',\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          style: styles.button,\n          onClick: () => setShowLogoutPopup(true),\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.content,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"sectionTitle\",\n            children: \"Upload ESG Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"sectionTitle\",\n            children: \"Annual ESG Metrics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Environmental\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inputContainer\",\n              children: [{\n                label: 'Renewable Energy Use (%)',\n                key: 'renewableEnergyUse',\n                type: 'number',\n                info: 'Percentage of total energy consumption sourced from renewable energy.'\n              }, {\n                label: 'Total Energy Consumption (GJ)',\n                key: 'totalEnergyConsumption',\n                type: 'number',\n                info: 'Total energy consumed in gigajoules over the reporting period.'\n              }, {\n                label: 'Green Building Certifications (%)',\n                key: 'greenBuildingCertifications',\n                type: 'number',\n                info: 'Percentage of buildings with green building certifications like LEED, BREEAM, etc.'\n              }, {\n                label: 'GHG Emissions Reduction Targets',\n                key: 'ghgEmissionsReductionTargets',\n                type: 'text',\n                info: 'Targets set for reducing greenhouse gas emissions over a specific timeframe.'\n              }, {\n                label: 'Energy-efficient Systems',\n                key: 'energyEfficientSystems',\n                type: 'dropdown',\n                options: ['Renewable', 'Grid', 'Fuel Energy'],\n                info: 'Types of energy systems implemented to improve energy efficiency.'\n              }, {\n                label: 'Wastewater Reused (KL)',\n                key: 'wastewaterReused',\n                type: 'number',\n                info: 'Volume of wastewater reused in kiloliters.'\n              }, {\n                label: 'Rainwater Harvesting',\n                key: 'rainwaterHarvesting',\n                type: 'dropdown',\n                options: ['Yes', 'No'],\n                info: 'Indicates whether rainwater harvesting systems are in place.'\n              }, {\n                label: 'Recycled Water Use (%)',\n                key: 'recycledWaterUse',\n                type: 'number',\n                info: 'Percentage of total water usage sourced from recycled water.'\n              }, {\n                label: 'Zero Waste to Landfill',\n                key: 'zeroWasteToLandfill',\n                type: 'dropdown',\n                options: ['Yes', 'No'],\n                info: 'Indicates if the organization has achieved zero waste to landfill status.'\n              }, {\n                label: 'Waste Sent to Recyclers (MT)',\n                key: 'wasteSentToRecyclers',\n                type: 'number',\n                info: 'Total waste sent to recyclers in metric tons.'\n              }, {\n                label: 'Native Landscaping Implemented',\n                key: 'nativeLandscaping',\n                type: 'dropdown',\n                options: ['Yes', 'No'],\n                info: 'Indicates if native plants and landscaping practices are implemented.'\n              }, {\n                label: 'Biodiversity Enhancement Measures',\n                key: 'biodiversityMeasures',\n                type: 'dropdown',\n                options: ['Yes', 'No'],\n                info: 'Indicates whether measures to enhance biodiversity have been implemented.'\n              }].map(({\n                label,\n                key,\n                type,\n                options,\n                info\n              }, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: styles.inputContainer,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: key,\n                  children: [label, info && /*#__PURE__*/_jsxDEV(Info, {\n                    style: styles.infoIcon,\n                    onMouseEnter: () => showTooltip(key),\n                    onMouseLeave: () => hideTooltip(key),\n                    \"aria-describedby\": `${key}-tooltip`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 522,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 519,\n                  columnNumber: 37\n                }, this), info && /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: `${key}-tooltip`,\n                  role: \"tooltip\",\n                  style: {\n                    ...styles.tooltip,\n                    ...(tooltipVisible[key] && styles.tooltipVisible)\n                  },\n                  children: info\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 531,\n                  columnNumber: 41\n                }, this), type === \"dropdown\" ? /*#__PURE__*/_jsxDEV(\"select\", {\n                  id: key,\n                  value: environmentalData[key],\n                  onChange: e => setEnvironmentalData(prev => ({\n                    ...prev,\n                    [key]: e.target.value\n                  })),\n                  className: \"inputField\",\n                  children: options.map((option, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: option,\n                    children: option\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 555,\n                    columnNumber: 49\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 543,\n                  columnNumber: 41\n                }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: key,\n                  type: type,\n                  value: environmentalData[key],\n                  onChange: e => setEnvironmentalData(prev => ({\n                    ...prev,\n                    [key]: e.target.value\n                  })),\n                  className: \"inputField\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 561,\n                  columnNumber: 41\n                }, this)]\n              }, key, true, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 33\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Social\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inputContainer\",\n              children: [{\n                label: 'Gender Diversity (%)',\n                key: 'genderDiversity',\n                type: 'number',\n                info: 'Percentage of employees who identify as different genders, promoting diversity in the workplace.'\n              }, {\n                label: 'Employee Training Hours (Total)',\n                key: 'employeeTrainingHours',\n                type: 'number',\n                info: 'Total number of hours dedicated to employee training and development.'\n              }, {\n                label: 'Volunteerism Hours per Employee (Avg.)',\n                key: 'volunteerismHours',\n                type: 'number',\n                info: 'Average number of hours employees spend on volunteer activities per year.'\n              }, {\n                label: 'Workforce Safety Incidents',\n                key: 'workforceSafety',\n                type: 'dropdown',\n                options: ['LTIFR', 'Fatalities'],\n                info: 'Metrics related to workforce safety, such as Lost Time Injury Frequency Rate (LTIFR) and fatalities.'\n              }, {\n                label: 'CSR Initiatives Conducted (Count)',\n                key: 'csrInitiatives',\n                type: 'number',\n                info: 'Total number of Corporate Social Responsibility initiatives conducted during the reporting period.'\n              }, {\n                label: 'Hours Spent on Community Engagement (Total)',\n                key: 'communityEngagementHours',\n                type: 'number',\n                info: 'Total hours spent by the organization on community engagement activities.'\n              }, {\n                label: 'Sustainable Community Development',\n                key: 'sustainableCommunity',\n                type: 'dropdown',\n                options: ['Yes', 'No'],\n                info: 'Indicates whether the organization participates in sustainable community development projects.'\n              }, {\n                label: 'Human Rights Complaints',\n                key: 'humanRightsComplaints',\n                type: 'dropdown',\n                options: ['Yes', 'No'],\n                info: 'Indicates whether there have been any formal complaints regarding human rights violations.'\n              }, {\n                label: 'WELL-certified Projects (%)',\n                key: 'wellCertifiedProjects',\n                type: 'number',\n                info: 'Percentage of projects certified under the WELL Building Standard.'\n              }, {\n                label: 'Diversity, Equity, and Inclusion Programs',\n                key: 'deiPrograms',\n                type: 'dropdown',\n                options: ['Yes', 'No'],\n                info: 'Indicates whether the organization has programs focused on diversity, equity, and inclusion.'\n              }].map(({\n                label,\n                key,\n                type,\n                options,\n                info\n              }, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginBottom: \"1rem\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: key,\n                  children: [label, /*#__PURE__*/_jsxDEV(Info, {\n                    style: styles.infoIcon,\n                    onMouseEnter: () => showTooltip(key),\n                    onMouseLeave: () => hideTooltip(key)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 599,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 597,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    ...styles.tooltip,\n                    ...(tooltipVisible[key] && styles.tooltipVisible)\n                  },\n                  children: info\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 605,\n                  columnNumber: 37\n                }, this), type === \"dropdown\" ? /*#__PURE__*/_jsxDEV(\"select\", {\n                  id: key,\n                  value: socialData[key] || \"\",\n                  onChange: e => setSocialData(prev => ({\n                    ...prev,\n                    [key]: e.target.value\n                  })),\n                  className: \"inputField\",\n                  style: styles.inputField,\n                  children: options.map((option, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: option,\n                    children: option\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 627,\n                    columnNumber: 49\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 614,\n                  columnNumber: 41\n                }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: key,\n                  type: type,\n                  value: socialData[key] || \"\",\n                  onChange: e => setSocialData(prev => ({\n                    ...prev,\n                    [key]: e.target.value\n                  })),\n                  className: \"inputField\",\n                  style: styles.inputField\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 633,\n                  columnNumber: 41\n                }, this)]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 596,\n                columnNumber: 33\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 583,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Governance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 653,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inputContainer\",\n              children: [{\n                label: 'Independent Directors (%)',\n                key: 'independentDirectors',\n                type: 'number',\n                info: 'Percentage of directors on the board who are independent, ensuring unbiased governance.'\n              }, {\n                label: 'Board-level Governance Initiatives',\n                key: 'boardGovernance',\n                type: 'dropdown',\n                options: ['Yes', 'No'],\n                info: 'Indicates whether the board has implemented governance initiatives to improve oversight and accountability.'\n              }, {\n                label: 'Regulatory Compliance Status',\n                key: 'regulatoryCompliance',\n                type: 'dropdown',\n                options: ['Yes', 'No'],\n                info: 'Indicates if the organization is compliant with all relevant regulations and standards.'\n              }, {\n                label: 'Non-compliance Cases (Count)',\n                key: 'nonComplianceCases',\n                type: 'number',\n                info: 'Number of instances where the organization failed to comply with regulations or standards.'\n              }, {\n                label: 'Employees Trained on Code of Conduct (%)',\n                key: 'codeOfConductTraining',\n                type: 'number',\n                info: 'Percentage of employees who have received training on the organization’s code of conduct.'\n              }, {\n                label: 'Ethics Violations Reported (Count)',\n                key: 'ethicsViolations',\n                type: 'number',\n                info: 'Number of ethics violations reported within the organization during the reporting period.'\n              }, {\n                label: 'Risk Management Framework Alignment',\n                key: 'riskManagementFramework',\n                type: 'dropdown',\n                options: ['ISO 31000', 'Others'],\n                info: 'Indicates the risk management framework the organization aligns with, such as ISO 31000.'\n              }, {\n                label: 'Regular Risk Assessments Conducted',\n                key: 'riskAssessments',\n                type: 'dropdown',\n                options: ['Monthly', 'Quarterly', 'Annually'],\n                info: 'Frequency at which regular risk assessments are conducted to identify and mitigate risks.'\n              }].map(({\n                label,\n                key,\n                type,\n                options,\n                info\n              }, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginBottom: \"1rem\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: key,\n                  children: [label, /*#__PURE__*/_jsxDEV(Info, {\n                    style: styles.infoIcon,\n                    onMouseEnter: () => showTooltip(key),\n                    onMouseLeave: () => hideTooltip(key)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 668,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 666,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    ...styles.tooltip,\n                    ...(tooltipVisible[key] && styles.tooltipVisible)\n                  },\n                  children: info\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 674,\n                  columnNumber: 37\n                }, this), type === \"dropdown\" ? /*#__PURE__*/_jsxDEV(\"select\", {\n                  id: key,\n                  value: governanceData[key] || \"\",\n                  onChange: e => setGovernanceData(prev => ({\n                    ...prev,\n                    [key]: e.target.value\n                  })),\n                  className: \"inputField\",\n                  style: styles.inputField,\n                  children: options.map((option, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: option,\n                    children: option\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 696,\n                    columnNumber: 49\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 683,\n                  columnNumber: 41\n                }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: key,\n                  type: type,\n                  value: governanceData[key] || \"\",\n                  onChange: e => setGovernanceData(prev => ({\n                    ...prev,\n                    [key]: e.target.value\n                  })),\n                  className: \"inputField\",\n                  style: styles.inputField\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 702,\n                  columnNumber: 41\n                }, this)]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 665,\n                columnNumber: 33\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 654,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 652,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Data Import\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 724,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"date-picker-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"inputColumn\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Start Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 728,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  value: dataImportData.startDate,\n                  onChange: e => setDataImportData({\n                    ...dataImportData,\n                    startDate: e.target.value\n                  }),\n                  className: \"inputField\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 729,\n                  columnNumber: 7\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 727,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"inputColumn\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"End Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 742,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  value: dataImportData.endDate,\n                  onChange: e => setDataImportData({\n                    ...dataImportData,\n                    endDate: e.target.value\n                  }),\n                  className: \"inputField\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 743,\n                  columnNumber: 7\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 741,\n                columnNumber: 5\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 726,\n              columnNumber: 3\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 723,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Upload CSV\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 762,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-upload-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                accept: \".csv\",\n                onChange: handleCsvUpload,\n                className: \"inputField\",\n                id: \"csv-upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 764,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"csv-upload\",\n                className: \"upload-label\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Click to upload or drag and drop\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 772,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Upload a CSV file (max. 5MB) containing Metric Name, Value, and Timestamp columns\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 773,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 771,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 763,\n              columnNumber: 5\n            }, this), csvFile && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"preview\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: csvFile.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 778,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [Math.round(csvFile.size / 1024), \" KB\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 779,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 777,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 761,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Upload Logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 786,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-upload-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                accept: \"image/*\",\n                onChange: handleLogoUpload,\n                className: \"inputField\",\n                id: \"logo-upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 788,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"logo-upload\",\n                className: \"upload-label\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Click to upload or drag and drop\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 796,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Upload your company logo (JPEG/PNG/SVG, max. 2MB)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 797,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 795,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 787,\n              columnNumber: 5\n            }, this), logoFile && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"preview\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: logoFile,\n                alt: \"Logo\",\n                width: \"100\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 802,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 801,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 785,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: handleSubmit,\n            children: \"Submit Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 808,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Submitting data, please wait...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 812,\n              columnNumber: 21\n            }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"success\",\n              children: successMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 813,\n              columnNumber: 28\n            }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error\",\n              children: errorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 814,\n              columnNumber: 26\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 811,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 452,\n    columnNumber: 9\n  }, this);\n};\n_s(Sidebar, \"i24H/VLKmoXcAwbyXKKqHx3nsSA=\");\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useState","GreenTrendz","Info","Home","LayoutDashboard","FileText","BarChart2","Calculator","Settings","UserCircle","HelpCircle","CloudUpload","jsxDEV","_jsxDEV","styles","landingPage","display","height","backgroundColor","fontFamily","sidebar","width","background","color","padding","boxSizing","flexDirection","alignItems","position","zIndex","boxShadow","transition","logo","fontSize","marginBottom","fontWeight","textAlign","marginTop","logoHover","transform","navList","listStyle","margin","navItem","textDecoration","borderRadius","cursor","fontfamily","navItemHover","navIcon","marginRight","content","flex","overflowY","marginLeft","button","border","infoIcon","lineHeight","justifyContent","tooltip","visibility","opacity","tooltipVisible","addButton","inputField","menuItems","icon","label","path","Sidebar","_s","showLogoutPopup","setShowLogoutPopup","setTooltipVisible","showTooltip","key","prev","hideTooltip","environmentalData","setEnvironmentalData","renewableEnergyUsage","totalEnergyConsumption","greenBuildingCertifications","ghgEmissionTargets","energyEfficientSystems","wastewaterReused","rainwaterHarvesting","recycledWaterUse","zeroWasteToLandfill","wasteSentToRecyclers","nativeLandscaping","biodiversityMeasures","socialData","setSocialData","genderDiversity","employeeTrainingHours","volunteerismHoursPerEmployee","workforceSafetyIncidents","csrInitiatives","communityEngagementHours","sustainableCommunityDevelopment","humanRightsComplaints","wellCertifiedProjects","deiPrograms","governanceData","setGovernanceData","independentDirectors","boardGovernanceInitiatives","regulatoryComplianceStatus","nonComplianceCases","employeesTrainedOnCodeOfConduct","ethicsViolationsReported","riskManagementFramework","riskAssessmentsConducted","dynamicMetrics","setDynamicMetrics","Environmental","Social","Governance","newMetricForm","setNewMetricForm","section","type","options","showNewMetricForm","setShowNewMetricForm","modalPosition","setModalPosition","x","y","handleButtonClick","e","rect","target","getBoundingClientRect","viewportHeight","window","innerHeight","modalHeight","yPosition","top","scrollY","left","setErrorMessage","handleAddMetric","length","updatedMetrics","undefined","console","log","openNewMetricForm","useEffect","modalElement","document","getElementById","scrollIntoView","behavior","block","dataImportData","setDataImportData","startDate","endDate","csvFile","setCsvFile","logoFile","setLogoFile","loading","setLoading","successMessage","setSuccessMessage","errorMessage","handleCsvUpload","file","files","alert","handleLogoUpload","includes","handleSubmit","formData","FormData","append","JSON","stringify","fileUploadResults","uploadFiles","jsonData","Object","fromEntries","map","metric","dateRange","fileReferences","response","fetch","method","body","ok","result","json","message","errorDetail","text","Error","status","error","style","children","src","alt","className","fileName","_jsxFileName","lineNumber","columnNumber","item","href","onMouseEnter","onMouseLeave","size","onClick","info","idx","inputContainer","htmlFor","id","role","value","onChange","option","i","accept","name","Math","round","_c","$RefreshReg$"],"sources":["/Users/srushtipatil/Downloads/Greentrendz/final_src/src/components/FileUploads.js"],"sourcesContent":["import React, { useState } from 'react';\nimport GreenTrendz from '../assets/img/logo_1.png';\nimport './style.css';  // If style.css is in the same folder as FileUploads.js\nimport { Info } from 'lucide-react';\n\n\nimport {\n    Home,\n    LayoutDashboard,\n    FileText,\n    BarChart2,\n    Calculator,\n    Settings,\n    UserCircle,\n    HelpCircle,\n    CloudUpload,\n} from 'lucide-react';\n\nconst styles = {\n    landingPage: {\n        display: 'flex',\n        height: '100vh',\n        backgroundColor: '#f4f4f9',\n        fontFamily: 'Arial, sans-serif',\n      },\n      sidebar: {\n        width: '250px',\n        background: 'linear-gradient(to bottom right, #064e3b, #276749)',\n        color: 'white',\n        padding: '20px',\n        boxSizing: 'border-box',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n        position: 'fixed',\n        height: '100vh',\n        zIndex: 10,\n        boxShadow: '2px 0 15px rgba(0, 0, 0, 0.15)',\n        transition: 'width 0.3s ease',\n      },\n      logo: {\n        fontSize: '25px',\n        marginBottom: '30px',\n        fontWeight: 'bold',\n        color: '#fff',\n        textAlign: 'center',\n        marginTop: '20px',\n        transition: 'transform 0.3s ease',\n      },\n      logoHover: {\n        transform: 'scale(1.1)',\n      },\n      navList: {\n        listStyle: 'none',\n        padding: 0,\n        margin: 0,\n        width: '100%',\n      },\n      navItem: {\n        color: 'white',\n        textDecoration: 'none',\n        padding: '15px 20px',\n        display: 'flex',\n        alignItems: 'center',\n        width: '100%',\n        borderRadius: '8px',\n        marginBottom: '12px',\n        transition: 'background-color 0.3s ease, transform 0.3s ease',\n        cursor: 'pointer',\n        fontfamily: \"'Poppins', sans-serif\", // Custom font for links\n            fontWeight: '500', // Optional for bold text\n        },\n          navItemHover: {\n        backgroundColor: '#3b6b5c',\n        transform: 'scale(1.05)',\n      },\n      navIcon: {\n        marginRight: '20px',\n        transition: 'transform 0.3s ease',\n      },\n     \n        content: {\n            flex: 1,\n            padding: '30px',\n            boxSizing: 'border-box',\n            backgroundColor: '#f8f9fa', // Light gray background for a softer look\n            overflowY: 'auto',\n            marginLeft: '250px',\n            transition: 'margin-left 0.3s ease',\n        },\n       \n        \n        \n        \n        \n    button: {\n        backgroundColor: '#ffffff', // Default background color\n        color: 'Black', // Text color\n        border: 'none', // No border\n        padding: '10px 20px', // Padding for a nice clickable area\n        borderRadius: '5px', // Rounded corners\n        fontWeight: 'bold', // Bold text\n        fontSize: '16px', // Font size\n        cursor: 'pointer', // Pointer cursor on hover\n        boxShadow: '0px 4px 6px rgba(0, 0, 0, 0.1)', // Subtle shadow for a 3D effect\n        transition: 'background-color 0.3s ease, transform 0.2s ease', // Smooth transition for hover effects\n      },\n      infoIcon: {\n        marginLeft: '8px',\n        cursor: 'pointer',\n        fontSize: '6px',\n        color: '#666',\n        lineHeight: '1',\n        width: '20px', // Adjust width to control circle size\n    height: '20px', // Adjust height to control circle size\n    display: 'inline-flex', // Ensures proper centering\n    alignItems: 'center', // Vertically centers the icon within the circle\n    justifyContent: 'center', // Horizontally centers the icon within the circle\n    borderRadius: '50%', // Ensures it's a circle\n    padding: '2px', // Adjust padding for inner spacing\n    },\n    tooltip: {\n        position: 'absolute',\n        backgroundColor: '#333',\n        color: '#fff',\n        padding: '5px 10px',\n        borderRadius: '4px',\n        fontSize: '12px',\n        zIndex: '1000',\n        visibility: 'hidden',\n        opacity: 0,\n        transition: 'opacity 0.3s',\n    },\n    tooltipVisible: {\n        visibility: 'visible',\n        opacity: 1,\n    },\n    addButton: {\n        marginTop: '20px',\n        padding: '10px 20px',\n        backgroundColor: '#28a745',\n        color: '#fff',\n        border: 'none',\n        borderRadius: '5px',\n        cursor: 'pointer',\n        fontWeight: 'bold',\n    },\n    inputField: {\n        margin: '10px 0',\n        padding: '10px',\n        width: '100%',\n        borderRadius: '4px',\n        border: '1px solid #ccc',\n    },\n    \n};\n\nconst menuItems = [\n    { icon: Home, label: 'Home', path: '/land' },\n    { icon: CloudUpload, label: 'Data Upload', path: '/upload' },\n    { icon: LayoutDashboard, label: 'Dashboard', path: '/dashboard' },\n    { icon: FileText, label: 'Reports', path: '/reports' },\n    { icon: BarChart2, label: 'Comparison', path: '/comparison' },\n    { icon: Calculator, label: 'Carbon Calculator', path: '/calculator' },\n    { icon: Settings, label: 'Settings', path: '/settings' },\n    { icon: HelpCircle, label: 'Help & Support', path: '/help' },\n    { icon: UserCircle, label: 'Account', path: '/account' }, // Added Account item\n\n];\n\nconst Sidebar = () => {\n    const [showLogoutPopup, setShowLogoutPopup] = useState(false);\n\n    const [tooltipVisible, setTooltipVisible] = useState({});\n\n    const showTooltip = (key) => {\n        setTooltipVisible((prev) => ({ ...prev, [key]: true }));\n    };\n\n    const hideTooltip = (key) => {\n        setTooltipVisible((prev) => ({ ...prev, [key]: false }));\n    };\n    const [environmentalData, setEnvironmentalData] = useState({\n        renewableEnergyUsage: '',\n        totalEnergyConsumption: '',\n        greenBuildingCertifications: '',\n        ghgEmissionTargets: '',\n        energyEfficientSystems: '',\n\n        wastewaterReused: '',\n        rainwaterHarvesting: '',\n        recycledWaterUse: '',\n\n        zeroWasteToLandfill: '',\n        wasteSentToRecyclers: '',\n\n        nativeLandscaping: '',\n        biodiversityMeasures: '',\n    });\n\n    const [socialData, setSocialData] = useState({\n        genderDiversity: '',\n        employeeTrainingHours: '',\n        volunteerismHoursPerEmployee: '',\n        workforceSafetyIncidents: '',\n        csrInitiatives: '',\n        communityEngagementHours: '',\n        sustainableCommunityDevelopment: '',\n        humanRightsComplaints: '',\n        wellCertifiedProjects: '',\n        deiPrograms: '',\n    });\n\n    const [governanceData, setGovernanceData] = useState({\n        independentDirectors: '',\n        boardGovernanceInitiatives: '',\n        regulatoryComplianceStatus: '',\n        nonComplianceCases: '',\n        employeesTrainedOnCodeOfConduct: '',\n        ethicsViolationsReported: '',\n        riskManagementFramework: '',\n        riskAssessmentsConducted: '',\n    });\n// Add new state for dynamic metrics\n     // States\n     const [dynamicMetrics, setDynamicMetrics] = useState({\n        Environmental: [],\n        Social: [],\n        Governance: []\n    });\n\n    const [newMetricForm, setNewMetricForm] = useState({\n        section: '',\n        label: '',\n        key: '',\n        type: 'text',\n        options: [] // for dropdown type\n    });\n\n    const [showNewMetricForm, setShowNewMetricForm] = useState(false);\n    const [modalPosition, setModalPosition] = useState({ x: 0, y: 0 });\n\n    const handleButtonClick = (e, section) => {\n        const rect = e.target.getBoundingClientRect();\n        const viewportHeight = window.innerHeight;\n        const modalHeight = 400; // Increased for form content\n        \n        let yPosition = rect.top + window.scrollY;\n        if (rect.top + modalHeight > viewportHeight) {\n            yPosition = rect.top - modalHeight;\n        }\n        \n        setModalPosition({\n            x: rect.left,\n            y: yPosition\n        });\n        setNewMetricForm(prev => ({ ...prev, section }));\n        setShowNewMetricForm(true);\n        setErrorMessage(''); // Clear any previous errors\n    };\n    \n    // Handler for adding new metric\n    const handleAddMetric = (section) => {\n        // Validate required fields\n        if (newMetricForm.label && newMetricForm.key) {\n            if (newMetricForm.type === 'dropdown' && newMetricForm.options.length === 0) {\n                setErrorMessage('Options cannot be empty for dropdown type.');\n                return;\n            }\n\n            setDynamicMetrics(prev => {\n                const updatedMetrics = {\n                    ...prev,\n                    [section]: [...prev[section], {\n                        label: newMetricForm.label,\n                        key: newMetricForm.key,\n                        type: newMetricForm.type,\n                        options: newMetricForm.type === 'dropdown' ? newMetricForm.options : undefined\n                    }]\n                };\n\n                console.log('Updated Dynamic Metrics:', updatedMetrics);\n                return updatedMetrics;\n            });\n\n            console.log('New Metric Added:', newMetricForm);\n\n            // Reset form\n            setNewMetricForm({\n                section: '',\n                label: '',\n                key: '',\n                type: 'text',\n                options: []\n            });\n\n            // Close modal\n            setShowNewMetricForm(false);\n            console.log('Modal closed');\n        } else {\n            setErrorMessage('Metric name is required!');\n        }\n    };\n\n    // Handler to open the new metric form modal\n    const openNewMetricForm = (section) => {\n        setNewMetricForm(prev => ({\n            ...prev,\n            section: section\n        }));\n        setShowNewMetricForm(true);\n    };\n\n    useEffect(() => {\n    if (showNewMetricForm) {\n        const modalElement = document.getElementById('metric-modal');\n        if (modalElement) {\n            modalElement.scrollIntoView({ behavior: 'smooth', block: 'nearest' });\n        }\n    }\n}, [showNewMetricForm]);\n     \n\n    const [dataImportData, setDataImportData] = useState({\n        startDate: '',\n        endDate: ''\n    });\n\n    const [csvFile, setCsvFile] = useState(null);\n    const [logoFile, setLogoFile] = useState(null);\n\n    const [loading, setLoading] = useState(false);\n    const [successMessage, setSuccessMessage] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const handleCsvUpload = (e) => {\n        const file = e.target.files[0];\n        if (file && file.type !== 'text/csv') {\n            alert('Please upload a valid CSV file.');\n            return;\n        }\n        setCsvFile(file);\n    };\n\n    const handleLogoUpload = (e) => {\n        const file = e.target.files[0];\n        if (file && !['image/png', 'image/jpeg'].includes(file.type)) {\n            alert('Please upload a valid image file (PNG or JPEG).');\n            return;\n        }\n        setLogoFile(file);\n    };\n\n    const handleSubmit = async () => {\n        // Validation: Check if start and end date are provided when uploading a CSV\n        if (!csvFile && (!dataImportData.startDate || !dataImportData.endDate)) {\n            alert('Please select both start and end dates if uploading a CSV file.');\n            return;\n        }\n\n        if (!csvFile || !logoFile) {\n            alert('Please upload both CSV and Logo files.');\n            return;\n        }\n\n        setLoading(true);\n        setSuccessMessage('');\n        setErrorMessage('');\n\n        const formData = new FormData();\n        formData.append('environmentalData', JSON.stringify(environmentalData));\n        formData.append('socialData', JSON.stringify(socialData));\n        formData.append('governanceData', JSON.stringify(governanceData));\n        formData.append('startDate', dataImportData.startDate);\n        formData.append('endDate', dataImportData.endDate);\n\n        if (csvFile) formData.append('csvFile', csvFile);\n        if (logoFile) formData.append('logoFile', logoFile);\n   // Debugging: Log form data for inspection\n   console.log('Submitting Form Data:');\n   console.log('Environmental Data:', environmentalData);\n   console.log('Social Data:', socialData);\n   console.log('Governance Data:', governanceData);\n   console.log('Start Date:', dataImportData.startDate);\n   console.log('End Date:', dataImportData.endDate);\n\n        try {\n\n            // Handle file uploads first\n            let fileUploadResults = {};\n            if (csvFile || logoFile) {\n                fileUploadResults = await uploadFiles({\n                    csvFile,\n                    logoFile\n                });\n            }\n            \n        // Prepare JSON data\n        const jsonData = {\n            environmentalData: {\n                ...environmentalData,\n                ...Object.fromEntries(\n                    dynamicMetrics.Environmental.map(metric => \n                        [metric.key, environmentalData[metric.key] || ''])\n                )\n            },\n            socialData: {\n                ...socialData,\n                ...Object.fromEntries(\n                    dynamicMetrics.Social.map(metric => \n                        [metric.key, socialData[metric.key] || ''])\n                )\n            },\n            governanceData: {\n                ...governanceData,\n                ...Object.fromEntries(\n                    dynamicMetrics.Governance.map(metric => \n                        [metric.key, governanceData[metric.key] || ''])\n                )\n            },\n            dateRange: {\n                startDate: dataImportData.startDate,\n                endDate: dataImportData.endDate\n            },\n            fileReferences: fileUploadResults,\n            dynamicMetrics: dynamicMetrics\n        };\n\n\n\n            const response = await fetch('http://localhost:5003/api/save-esg-data', {\n                method: 'POST',\n                body: formData,\n                \n            });\n\n            if (response.ok) {\n                const result = await response.json();\n                setSuccessMessage(result.message || 'Data submitted successfully!');\n            } else {\n                const errorDetail = await response.text();\n                throw new Error(`Error ${response.status}: ${errorDetail}`);\n            }\n        } catch (error) {\n            setErrorMessage('Error submitting data: ' + error.message);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div style={styles.landingPage}>\n            <nav style={styles.sidebar}>\n                <div style={{ display: 'flex', alignItems: 'center' }}>\n                    <img\n                        src={GreenTrendz}\n                        alt=\"Logo\"\n                        width=\"50\"\n                        height=\"50\"\n                        className=\"d-inline-block align-top me-2\"\n                    />\n                    <h5 style={styles.logo}>GreenTrendz</h5>\n                </div>\n                <ul style={styles.navList}>\n                    {menuItems.map((item) => (\n                        <li key={item.path}>\n                            <a\n                                href={item.path}\n                                style={styles.navItem}\n                                onMouseEnter={(e) => {\n                                    e.target.style.backgroundColor = '#3b6b5c';\n                                    e.target.style.transform = 'scale(1.05)';\n                                }}\n                                onMouseLeave={(e) => {\n                                    e.target.style.backgroundColor = '';\n                                    e.target.style.transform = '';\n                                }}\n                            >\n                                <item.icon style={styles.navIcon} size={20} />\n                                <span>{item.label}</span>\n                            </a>\n                        </li>\n                    ))}\n                </ul>\n                <div style={{ marginTop: 'auto', textAlign: 'center' }}>\n                    <button\n                        style={styles.button}\n                        onClick={() => setShowLogoutPopup(true)}\n                    >\n                        Logout\n                    </button>\n                </div>\n            </nav>\n            <div style={styles.content}>\n                <div className=\"container\">\n                    <div className=\"section\">\n                        <h1 className=\"sectionTitle\">Upload ESG Data</h1>\n                        <h2 className=\"sectionTitle\">Annual ESG Metrics</h2>\n\n                        {/* Environmental Section */}\n                        <div className=\"section\">\n                            <h3>Environmental</h3>\n                            <div className=\"inputContainer\">\n                            {[\n                                { label: 'Renewable Energy Use (%)', key: 'renewableEnergyUse', type: 'number',info: 'Percentage of total energy consumption sourced from renewable energy.' },\n                                { label: 'Total Energy Consumption (GJ)', key: 'totalEnergyConsumption', type: 'number',info: 'Total energy consumed in gigajoules over the reporting period.' },\n                                { label: 'Green Building Certifications (%)', key: 'greenBuildingCertifications', type: 'number',info: 'Percentage of buildings with green building certifications like LEED, BREEAM, etc.' },\n                                { label: 'GHG Emissions Reduction Targets', key: 'ghgEmissionsReductionTargets', type: 'text', info: 'Targets set for reducing greenhouse gas emissions over a specific timeframe.' },\n                                { label: 'Energy-efficient Systems', key: 'energyEfficientSystems', type: 'dropdown', options: ['Renewable', 'Grid', 'Fuel Energy'],info: 'Types of energy systems implemented to improve energy efficiency.' },\n                                { label: 'Wastewater Reused (KL)', key: 'wastewaterReused', type: 'number',info: 'Volume of wastewater reused in kiloliters.' },\n                                { label: 'Rainwater Harvesting', key: 'rainwaterHarvesting', type: 'dropdown', options: ['Yes', 'No'],info: 'Indicates whether rainwater harvesting systems are in place.' },\n                                { label: 'Recycled Water Use (%)', key: 'recycledWaterUse', type: 'number',info: 'Percentage of total water usage sourced from recycled water.' },\n                                { label: 'Zero Waste to Landfill', key: 'zeroWasteToLandfill', type: 'dropdown', options: ['Yes', 'No'],info: 'Indicates if the organization has achieved zero waste to landfill status.' },\n                                { label: 'Waste Sent to Recyclers (MT)', key: 'wasteSentToRecyclers', type: 'number',info: 'Total waste sent to recyclers in metric tons.' },\n                                { label: 'Native Landscaping Implemented', key: 'nativeLandscaping', type: 'dropdown', options: ['Yes', 'No'], info: 'Indicates if native plants and landscaping practices are implemented.' },\n                                { label: 'Biodiversity Enhancement Measures', key: 'biodiversityMeasures', type: 'dropdown', options: ['Yes', 'No'], info: 'Indicates whether measures to enhance biodiversity have been implemented.' },\n                            ].map(({ label, key, type, options, info }, idx) => (\n                                <div key={key} style={styles.inputContainer}>\n                                    <label htmlFor={key}>\n                                        {label}\n                                        {info && (\n                                            <Info\n                                                style={styles.infoIcon}\n                                                onMouseEnter={() => showTooltip(key)}\n                                                onMouseLeave={() => hideTooltip(key)}\n                                                aria-describedby={`${key}-tooltip`}\n                                            />\n                                        )}\n                                    </label>\n                                    {info && (\n                                        <div\n                                            id={`${key}-tooltip`}\n                                            role=\"tooltip\"\n                                            style={{\n                                                ...styles.tooltip,\n                                                ...(tooltipVisible[key] && styles.tooltipVisible),\n                                            }}\n                                        >\n                                            {info}\n                                        </div>\n                                    )}\n                                    {type === \"dropdown\" ? (\n                                        <select\n                                            id={key}\n                                            value={environmentalData[key]}\n                                            onChange={(e) =>\n                                                setEnvironmentalData((prev) => ({\n                                                    ...prev,\n                                                    [key]: e.target.value,\n                                                }))\n                                            }\n                                            className=\"inputField\"\n                                        >\n                                            {options.map((option, i) => (\n                                                <option key={i} value={option}>\n                                                    {option}\n                                                </option>\n                                            ))}\n                                        </select>\n                                    ) : (\n                                        <input\n                                            id={key}\n                                            type={type}\n                                            value={environmentalData[key]}\n                                            onChange={(e) =>\n                                                setEnvironmentalData((prev) => ({\n                                                    ...prev,\n                                                    [key]: e.target.value,\n                                                }))\n                                            }\n                                            className=\"inputField\"\n                                        />\n                                    )}\n                                </div>\n                            ))}\n                            \n                        </div>\n                    </div>\n\n                        {/* Social Section */}\n                        <div className=\"section\">\n                            <h3>Social</h3>\n                            <div className=\"inputContainer\">\n                            {[\n                                { label: 'Gender Diversity (%)', key: 'genderDiversity', type: 'number',info: 'Percentage of employees who identify as different genders, promoting diversity in the workplace.' },\n                                { label: 'Employee Training Hours (Total)', key: 'employeeTrainingHours', type: 'number',info: 'Total number of hours dedicated to employee training and development.' },\n                                { label: 'Volunteerism Hours per Employee (Avg.)', key: 'volunteerismHours', type: 'number',info: 'Average number of hours employees spend on volunteer activities per year.' },\n                                { label: 'Workforce Safety Incidents', key: 'workforceSafety', type: 'dropdown', options: ['LTIFR', 'Fatalities'],info: 'Metrics related to workforce safety, such as Lost Time Injury Frequency Rate (LTIFR) and fatalities.'},\n                                { label: 'CSR Initiatives Conducted (Count)', key: 'csrInitiatives', type: 'number',info: 'Total number of Corporate Social Responsibility initiatives conducted during the reporting period.' },\n                                { label: 'Hours Spent on Community Engagement (Total)', key: 'communityEngagementHours', type: 'number',info: 'Total hours spent by the organization on community engagement activities.' },\n                                { label: 'Sustainable Community Development', key: 'sustainableCommunity', type: 'dropdown', options: ['Yes', 'No'],info: 'Indicates whether the organization participates in sustainable community development projects.' },\n                                { label: 'Human Rights Complaints', key: 'humanRightsComplaints', type: 'dropdown', options: ['Yes', 'No'],info: 'Indicates whether there have been any formal complaints regarding human rights violations.' },\n                                { label: 'WELL-certified Projects (%)', key: 'wellCertifiedProjects', type: 'number',info: 'Percentage of projects certified under the WELL Building Standard.' },\n                                { label: 'Diversity, Equity, and Inclusion Programs', key: 'deiPrograms', type: 'dropdown', options: ['Yes', 'No'],info: 'Indicates whether the organization has programs focused on diversity, equity, and inclusion.' },\n                            ].map(({ label, key, type, options, info }, idx) => (\n                                <div key={idx} style={{ marginBottom: \"1rem\" }}>\n                                    <label htmlFor={key}>\n                                        {label}\n                                        <Info \n                                            style={styles.infoIcon}\n                                            onMouseEnter={() => showTooltip(key)}\n                                            onMouseLeave={() => hideTooltip(key)}\n                                        />\n                                    </label>\n                                    <div\n                                        style={{\n                                            ...styles.tooltip,\n                                            ...(tooltipVisible[key] && styles.tooltipVisible),\n                                        }}\n                                    >\n                                        {info}\n                                    </div>\n                                    {type === \"dropdown\" ? (\n                                        <select\n                                            id={key}\n                                            value={socialData[key] || \"\"}\n                                            onChange={(e) =>\n                                                setSocialData((prev) => ({\n                                                    ...prev,\n                                                    [key]: e.target.value,\n                                                }))\n                                            }\n                                            className=\"inputField\"\n                                            style={styles.inputField}\n                                        >\n                                            {options.map((option, i) => (\n                                                <option key={i} value={option}>\n                                                    {option}\n                                                </option>\n                                            ))}\n                                        </select>\n                                    ) : (\n                                        <input\n                                            id={key}\n                                            type={type}\n                                            value={socialData[key] || \"\"}\n                                            onChange={(e) =>\n                                                setSocialData((prev) => ({\n                                                    ...prev,\n                                                    [key]: e.target.value,\n                                                }))\n                                            }\n                                            className=\"inputField\"\n                                            style={styles.inputField}\n                                        />\n                                    )}\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                        {/* Governance Section */}\n                        <div className=\"section\">\n                            <h3>Governance</h3>\n                            <div className=\"inputContainer\">\n                            {[\n                                { label: 'Independent Directors (%)', key: 'independentDirectors', type: 'number',info: 'Percentage of directors on the board who are independent, ensuring unbiased governance.' },\n                                { label: 'Board-level Governance Initiatives', key: 'boardGovernance', type: 'dropdown', options: ['Yes', 'No'],info: 'Indicates whether the board has implemented governance initiatives to improve oversight and accountability.' },\n                                { label: 'Regulatory Compliance Status', key: 'regulatoryCompliance', type: 'dropdown', options: ['Yes', 'No'],info: 'Indicates if the organization is compliant with all relevant regulations and standards.' },\n                                { label: 'Non-compliance Cases (Count)', key: 'nonComplianceCases', type: 'number',info: 'Number of instances where the organization failed to comply with regulations or standards.' },\n                                { label: 'Employees Trained on Code of Conduct (%)', key: 'codeOfConductTraining', type: 'number',info: 'Percentage of employees who have received training on the organization’s code of conduct.' },\n                                { label: 'Ethics Violations Reported (Count)', key: 'ethicsViolations', type: 'number',info: 'Number of ethics violations reported within the organization during the reporting period.' },\n                                { label: 'Risk Management Framework Alignment', key: 'riskManagementFramework', type: 'dropdown', options: ['ISO 31000', 'Others'],info: 'Indicates the risk management framework the organization aligns with, such as ISO 31000.' },\n                                { label: 'Regular Risk Assessments Conducted', key: 'riskAssessments', type: 'dropdown', options: ['Monthly', 'Quarterly', 'Annually'],info: 'Frequency at which regular risk assessments are conducted to identify and mitigate risks.' },\n                            ].map(({ label, key, type, options, info }, idx) => (\n                                <div key={idx} style={{ marginBottom: \"1rem\" }}>\n                                    <label htmlFor={key}>\n                                        {label}\n                                        <Info\n                                            style={styles.infoIcon}\n                                            onMouseEnter={() => showTooltip(key)}\n                                            onMouseLeave={() => hideTooltip(key)}\n                                        />\n                                    </label>\n                                    <div\n                                        style={{\n                                            ...styles.tooltip,\n                                            ...(tooltipVisible[key] && styles.tooltipVisible),\n                                        }}\n                                    >\n                                        {info}\n                                    </div>\n                                    {type === \"dropdown\" ? (\n                                        <select\n                                            id={key}\n                                            value={governanceData[key] || \"\"}\n                                            onChange={(e) =>\n                                                setGovernanceData((prev) => ({\n                                                    ...prev,\n                                                    [key]: e.target.value,\n                                                }))\n                                            }\n                                            className=\"inputField\"\n                                            style={styles.inputField}\n                                        >\n                                            {options.map((option, i) => (\n                                                <option key={i} value={option}>\n                                                    {option}\n                                                </option>\n                                            ))}\n                                        </select>\n                                    ) : (\n                                        <input\n                                            id={key}\n                                            type={type}\n                                            value={governanceData[key] || \"\"}\n                                            onChange={(e) =>\n                                                setGovernanceData((prev) => ({\n                                                    ...prev,\n                                                    [key]: e.target.value,\n                                                }))\n                                            }\n                                            className=\"inputField\"\n                                            style={styles.inputField}\n                                        />\n                                    )}\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n\n\n{/* Data Import Section */}\n<div className=\"section\">\n  <h3>Data Import</h3>\n   \n  <div className=\"date-picker-container\">\n    <div className=\"inputColumn\">\n      <label>Start Date</label>\n      <input\n        type=\"date\"\n        value={dataImportData.startDate}\n        onChange={(e) =>\n          setDataImportData({\n            ...dataImportData,\n            startDate: e.target.value,\n          })\n        }\n        className=\"inputField\"\n      />\n    </div>\n    <div className=\"inputColumn\">\n      <label>End Date</label>\n      <input\n        type=\"date\"\n        value={dataImportData.endDate}\n        onChange={(e) =>\n          setDataImportData({\n            ...dataImportData,\n            endDate: e.target.value,\n          })\n        }\n        className=\"inputField\"\n      />\n    </div>\n  </div>\n</div>\n\n\n\n           {/* File Upload Section */}\n<div className=\"section\">\n    <h3>Upload CSV</h3>\n    <div className=\"file-upload-container\">\n        <input\n            type=\"file\"\n            accept=\".csv\"\n            onChange={handleCsvUpload}\n            className=\"inputField\"\n            id=\"csv-upload\"\n        />\n        <label htmlFor=\"csv-upload\" className=\"upload-label\">\n            <p>Click to upload or drag and drop</p>\n            <p>Upload a CSV file (max. 5MB) containing Metric Name, Value, and Timestamp columns</p>\n        </label>\n    </div>\n    {csvFile && (\n        <div className=\"preview\">\n            <p>{csvFile.name}</p>\n            <p>{Math.round(csvFile.size / 1024)} KB</p>\n        </div>\n    )}\n</div>\n\n{/* Logo Upload Section */}\n<div className=\"section\">\n    <h3>Upload Logo</h3>\n    <div className=\"file-upload-container\">\n        <input\n            type=\"file\"\n            accept=\"image/*\"\n            onChange={handleLogoUpload}\n            className=\"inputField\"\n            id=\"logo-upload\"\n        />\n        <label htmlFor=\"logo-upload\" className=\"upload-label\">\n            <p>Click to upload or drag and drop</p>\n            <p>Upload your company logo (JPEG/PNG/SVG, max. 2MB)</p>\n        </label>\n    </div>\n    {logoFile && (\n        <div className=\"preview\">\n            <img src={logoFile} alt=\"Logo\" width=\"100\" />\n        </div>\n    )}\n</div>\n\n{/* Submit Button */}\n<button className=\"button\" onClick={handleSubmit}>\n    Submit Data\n</button>\n<div>\n        {loading && <p>Submitting data, please wait...</p>}\n        {successMessage && <p className=\"success\">{successMessage}</p>}\n        {errorMessage && <p className=\"error\">{errorMessage}</p>}\n    </div>\n</div>\n    </div>\n</div>\n\n</div>\n    );\n};\n\nexport default Sidebar;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}