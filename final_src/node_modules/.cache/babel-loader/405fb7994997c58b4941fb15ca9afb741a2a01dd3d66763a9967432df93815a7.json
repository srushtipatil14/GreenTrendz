{"ast":null,"code":"var _jsxFileName = \"/Users/srushtipatil/Downloads/Greentrendz/final_src/src/components/FileUploads.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport GreenTrendz from '../assets/img/logo_1.png';\nimport './style.css'; // If style.css is in the same folder as FileUploads.js\nimport { Info } from 'lucide-react';\nimport { Home, LayoutDashboard, FileText, BarChart2, Calculator, Settings, UserCircle, HelpCircle, CloudUpload } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  landingPage: {\n    display: 'flex',\n    height: '100vh',\n    backgroundColor: '#f4f4f9',\n    fontFamily: 'Arial, sans-serif'\n  },\n  sidebar: {\n    width: '250px',\n    background: 'linear-gradient(to bottom right, #064e3b, #276749)',\n    color: 'white',\n    padding: '20px',\n    boxSizing: 'border-box',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    position: 'fixed',\n    height: '100vh',\n    zIndex: 10,\n    boxShadow: '2px 0 15px rgba(0, 0, 0, 0.15)',\n    transition: 'width 0.3s ease'\n  },\n  logo: {\n    fontSize: '25px',\n    marginBottom: '30px',\n    fontWeight: 'bold',\n    color: '#fff',\n    textAlign: 'center',\n    marginTop: '20px',\n    transition: 'transform 0.3s ease'\n  },\n  logoHover: {\n    transform: 'scale(1.1)'\n  },\n  navList: {\n    listStyle: 'none',\n    padding: 0,\n    margin: 0,\n    width: '100%'\n  },\n  navItem: {\n    color: 'white',\n    textDecoration: 'none',\n    padding: '15px 20px',\n    display: 'flex',\n    alignItems: 'center',\n    width: '100%',\n    borderRadius: '8px',\n    marginBottom: '12px',\n    transition: 'background-color 0.3s ease, transform 0.3s ease',\n    cursor: 'pointer',\n    fontfamily: \"'Poppins', sans-serif\",\n    // Custom font for links\n    fontWeight: '500' // Optional for bold text\n  },\n  navItemHover: {\n    backgroundColor: '#3b6b5c',\n    transform: 'scale(1.05)'\n  },\n  navIcon: {\n    marginRight: '20px',\n    transition: 'transform 0.3s ease'\n  },\n  content: {\n    flex: 1,\n    padding: '30px',\n    boxSizing: 'border-box',\n    backgroundColor: '#f8f9fa',\n    // Light gray background for a softer look\n    overflowY: 'auto',\n    marginLeft: '250px',\n    transition: 'margin-left 0.3s ease'\n  },\n  section: {\n    marginBottom: '20px',\n    border: '1px solid #ddd',\n    borderRadius: '8px',\n    padding: '10px',\n    backgroundColor: '#f9f9f9'\n  },\n  sectionHeader: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    cursor: 'pointer',\n    padding: '10px',\n    backgroundColor: '#e9e9e9',\n    borderRadius: '8px'\n  },\n  inputContainer: {\n    marginBottom: '15px'\n  },\n  label: {\n    display: 'block',\n    marginBottom: '5px',\n    fontWeight: 'bold'\n  },\n  inputField: {\n    width: '100%',\n    padding: '8px',\n    borderRadius: '4px',\n    border: '1px solid #ccc'\n  },\n  tooltip: {\n    position: 'absolute',\n    backgroundColor: '#333',\n    color: '#fff',\n    padding: '5px',\n    borderRadius: '4px',\n    fontSize: '12px',\n    display: 'none'\n  },\n  tooltipVisible: {\n    display: 'block'\n  },\n  infoIcon: {\n    marginLeft: '5px',\n    cursor: 'pointer'\n  },\n  button: {\n    padding: '10px 20px',\n    backgroundColor: '#007bff',\n    color: '#fff',\n    border: 'none',\n    borderRadius: '4px',\n    cursor: 'pointer'\n  },\n  button: {\n    backgroundColor: '#ffffff',\n    // Default background color\n    color: 'Black',\n    // Text color\n    border: 'none',\n    // No border\n    padding: '10px 20px',\n    // Padding for a nice clickable area\n    borderRadius: '5px',\n    // Rounded corners\n    fontWeight: 'bold',\n    // Bold text\n    fontSize: '16px',\n    // Font size\n    cursor: 'pointer',\n    // Pointer cursor on hover\n    boxShadow: '0px 4px 6px rgba(0, 0, 0, 0.1)',\n    // Subtle shadow for a 3D effect\n    transition: 'background-color 0.3s ease, transform 0.2s ease' // Smooth transition for hover effects\n  },\n  infoIcon: {\n    marginLeft: '8px',\n    cursor: 'pointer',\n    fontSize: '6px',\n    color: '#666',\n    lineHeight: '1',\n    width: '20px',\n    // Adjust width to control circle size\n    height: '20px',\n    // Adjust height to control circle size\n    display: 'inline-flex',\n    // Ensures proper centering\n    alignItems: 'center',\n    // Vertically centers the icon within the circle\n    justifyContent: 'center',\n    // Horizontally centers the icon within the circle\n    borderRadius: '50%',\n    // Ensures it's a circle\n    padding: '2px' // Adjust padding for inner spacing\n  },\n  tooltip: {\n    position: 'absolute',\n    backgroundColor: '#333',\n    color: '#fff',\n    padding: '5px 10px',\n    borderRadius: '4px',\n    fontSize: '12px',\n    zIndex: '1000',\n    visibility: 'hidden',\n    opacity: 0,\n    transition: 'opacity 0.3s'\n  },\n  tooltipVisible: {\n    visibility: 'visible',\n    opacity: 1\n  }\n};\nconst menuItems = [{\n  icon: Home,\n  label: 'Home',\n  path: '/land'\n}, {\n  icon: CloudUpload,\n  label: 'Data Upload',\n  path: '/upload'\n}, {\n  icon: LayoutDashboard,\n  label: 'Dashboard',\n  path: '/dashboard'\n}, {\n  icon: FileText,\n  label: 'Reports',\n  path: '/reports'\n}, {\n  icon: BarChart2,\n  label: 'Comparison',\n  path: '/comparison'\n}, {\n  icon: Calculator,\n  label: 'Carbon Calculator',\n  path: '/calculator'\n}, {\n  icon: Settings,\n  label: 'Settings',\n  path: '/settings'\n}, {\n  icon: HelpCircle,\n  label: 'Help & Support',\n  path: '/help'\n}, {\n  icon: UserCircle,\n  label: 'Account',\n  path: '/account'\n} // Added Account item\n];\nconst Sidebar = () => {\n  _s();\n  const [showLogoutPopup, setShowLogoutPopup] = useState(false);\n  const [tooltipVisible, setTooltipVisible] = useState({});\n  const showTooltip = key => {\n    setTooltipVisible(prev => ({\n      ...prev,\n      [key]: true\n    }));\n  };\n  const hideTooltip = key => {\n    setTooltipVisible(prev => ({\n      ...prev,\n      [key]: false\n    }));\n  };\n  const sections = [{\n    title: 'Energy',\n    metrics: [{\n      label: 'Coal (tons, GJ)',\n      key: 'coal',\n      type: 'number'\n    }, {\n      label: 'Diesel (L, GJ)',\n      key: 'diesel',\n      type: 'number'\n    }, {\n      label: 'High-Speed Diesel (HSD) (L, GJ)',\n      key: 'hsd',\n      type: 'number'\n    }, {\n      label: 'Petrol (L, GJ)',\n      key: 'petrol',\n      type: 'number'\n    }, {\n      label: 'Liquefied Petroleum Gas (LPG) (m³, GJ)',\n      key: 'lpg',\n      type: 'number'\n    }, {\n      label: 'Natural Gas (m³, GJ)',\n      key: 'naturalGas',\n      type: 'number'\n    }, {\n      label: 'LNG/PNG (m³, GJ)',\n      key: 'lngPng',\n      type: 'number'\n    }, {\n      label: 'Solar Energy (MWh, kWh)',\n      key: 'solarEnergy',\n      type: 'number'\n    }, {\n      label: 'Wind Energy (MWh, kWh)',\n      key: 'windEnergy',\n      type: 'number'\n    }, {\n      label: 'Hydroelectric Energy (MWh, kWh)',\n      key: 'hydroEnergy',\n      type: 'number'\n    }, {\n      label: 'Biomass (tons, GJ)',\n      key: 'biomass',\n      type: 'number'\n    }, {\n      label: 'Renewable Energy Generated (MWh, %)',\n      key: 'renewableEnergyGenerated',\n      type: 'number'\n    }, {\n      label: 'On-site Energy Consumption (MWh, GJ)',\n      key: 'onsiteEnergyConsumption',\n      type: 'number'\n    }, {\n      label: 'Biodiesel (L, GJ)',\n      key: 'biodiesel',\n      type: 'number'\n    }]\n  }, {\n    title: 'Water',\n    metrics: [{\n      label: 'Produced Water Withdrawal (m³, L)',\n      key: 'producedWaterWithdrawal',\n      type: 'number'\n    }, {\n      label: 'Surface Water Withdrawal (m³, L)',\n      key: 'surfaceWaterWithdrawal',\n      type: 'number'\n    }, {\n      label: 'Ground Water Withdrawal (m³, L)',\n      key: 'groundWaterWithdrawal',\n      type: 'number'\n    }, {\n      label: 'Seawater Withdrawal (m³, L)',\n      key: 'seawaterWithdrawal',\n      type: 'number'\n    }, {\n      label: 'Third-Party Water Withdrawal (m³, L)',\n      key: 'thirdPartyWaterWithdrawal',\n      type: 'number'\n    }, {\n      label: 'Water Consumption (m³, L)',\n      key: 'waterConsumption',\n      type: 'number'\n    }, {\n      label: 'Water Recycled (m³, %)',\n      key: 'waterRecycled',\n      type: 'number'\n    }, {\n      label: 'Water Discharge to Surface Water (m³, L)',\n      key: 'waterDischargeSurface',\n      type: 'number'\n    }, {\n      label: 'Water Discharge to Groundwater (m³, L)',\n      key: 'waterDischargeGround',\n      type: 'number'\n    }, {\n      label: 'Water Discharge to Third-Party (m³, L)',\n      key: 'waterDischargeThirdParty',\n      type: 'number'\n    }, {\n      label: 'Water Discharge to Seawater (m³, L)',\n      key: 'waterDischargeSeawater',\n      type: 'number'\n    }, {\n      label: 'Wastewater Generated (m³, L)',\n      key: 'wastewaterGenerated',\n      type: 'number'\n    }]\n  }, {\n    title: 'Waste',\n    metrics: [{\n      label: 'E-Waste (kg, tons, % recycled)',\n      key: 'eWaste',\n      type: 'number'\n    }, {\n      label: 'Plastic Waste (kg, tons, % recycled)',\n      key: 'plasticWaste',\n      type: 'number'\n    }, {\n      label: 'Metal Waste (kg, tons, % recycled)',\n      key: 'metalWaste',\n      type: 'number'\n    }, {\n      label: 'Glass Waste (kg, tons, % recycled)',\n      key: 'glassWaste',\n      type: 'number'\n    }, {\n      label: 'Batteries and Accumulator Waste (kg, tons, % recycled)',\n      key: 'batteryWaste',\n      type: 'number'\n    }, {\n      label: 'Civil Waste (kg, tons, % recycled)',\n      key: 'civilWaste',\n      type: 'number'\n    }, {\n      label: 'Miscellaneous Waste (kg, tons, % recycled)',\n      key: 'miscWaste',\n      type: 'number'\n    }, {\n      label: 'Biomedical Waste (kg, tons, % recycled)',\n      key: 'biomedicalWaste',\n      type: 'number'\n    }, {\n      label: 'Feed Waste (kg, tons, % recycled)',\n      key: 'feedWaste',\n      type: 'number'\n    }, {\n      label: 'Hazardous Waste Generation (kg, tons)',\n      key: 'hazardousWaste',\n      type: 'number'\n    }]\n  }, {\n    title: 'Emissions',\n    metrics: [{\n      label: 'Greenhouse Gas (GHG) Emissions (tons CO₂e)',\n      key: 'ghgEmissions',\n      type: 'number'\n    }, {\n      label: 'Effluent Discharge (m³, L, ppm)',\n      key: 'effluentDischarge',\n      type: 'number'\n    }]\n  }, {\n    title: 'Other Environmental Factors',\n    metrics: [{\n      label: 'Environmental Incidents (count)',\n      key: 'environmentalIncidents',\n      type: 'number'\n    }, {\n      label: 'Solar Panel Recycling (% recycled, kg, tons)',\n      key: 'solarPanelRecycling',\n      type: 'number'\n    }]\n  }];\n  const [socialData, setSocialData] = useState({\n    genderDiversity: '',\n    employeeTrainingHours: '',\n    volunteerismHoursPerEmployee: '',\n    workforceSafetyIncidents: '',\n    csrInitiatives: '',\n    communityEngagementHours: '',\n    sustainableCommunityDevelopment: '',\n    humanRightsComplaints: '',\n    wellCertifiedProjects: '',\n    deiPrograms: ''\n  });\n  const [governanceData, setGovernanceData] = useState({\n    independentDirectors: '',\n    boardGovernanceInitiatives: '',\n    regulatoryComplianceStatus: '',\n    nonComplianceCases: '',\n    employeesTrainedOnCodeOfConduct: '',\n    ethicsViolationsReported: '',\n    riskManagementFramework: '',\n    riskAssessmentsConducted: ''\n  });\n  const [dataImportData, setDataImportData] = useState({\n    startDate: '',\n    endDate: ''\n  });\n  const [csvFile, setCsvFile] = useState(null);\n  const [logoFile, setLogoFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleCsvUpload = e => {\n    const file = e.target.files[0];\n    if (file && file.type !== 'text/csv') {\n      alert('Please upload a valid CSV file.');\n      return;\n    }\n    setCsvFile(file);\n\n    // Parse the CSV file\n    const reader = new FileReader();\n    reader.onload = event => {\n      const text = event.target.result;\n      const rows = text.split('\\n').map(row => row.split(',')); // Split CSV into rows and columns\n      const headers = rows[0]; // First row is headers\n      const data = rows.slice(1); // Rest are data rows\n\n      // Map CSV data to state\n      const mappedData = {};\n      data.forEach(row => {\n        const metric = row[0].trim(); // Metric name\n        const value = row[1].trim(); // Metric value\n        mappedData[metric] = value;\n      });\n\n      // Update state with mapped data\n      setEnvironmentalData(prev => ({\n        ...prev,\n        ...mappedData\n      }));\n      setSocialData(prev => ({\n        ...prev,\n        ...mappedData\n      }));\n      setGovernanceData(prev => ({\n        ...prev,\n        ...mappedData\n      }));\n    };\n    reader.readAsText(file);\n  };\n  const handleLogoUpload = e => {\n    const file = e.target.files[0];\n    if (file && !['image/png', 'image/jpeg'].includes(file.type)) {\n      alert('Please upload a valid image file (PNG or JPEG).');\n      return;\n    }\n    setLogoFile(file);\n  };\n  const handleSubmit = async () => {\n    // Validation: Check if start and end date are provided when uploading a CSV\n    if (!csvFile && (!dataImportData.startDate || !dataImportData.endDate)) {\n      alert('Please select both start and end dates if uploading a CSV file.');\n      return;\n    }\n    if (!csvFile || !logoFile) {\n      alert('Please upload both CSV and Logo files.');\n      return;\n    }\n    setLoading(true);\n    setSuccessMessage('');\n    setErrorMessage('');\n    const userId = localStorage.getItem('userId'); // Assuming userId is stored in localStorage after login\n\n    if (!userId) {\n      alert('User not authenticated. Please log in.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('userId', userId);\n    formData.append('environmentalData', JSON.stringify(environmentalData));\n    formData.append('socialData', JSON.stringify(socialData));\n    formData.append('governanceData', JSON.stringify(governanceData));\n    formData.append('startDate', dataImportData.startDate);\n    formData.append('endDate', dataImportData.endDate);\n    if (csvFile) formData.append('csvFile', csvFile);\n    if (logoFile) formData.append('logoFile', logoFile);\n    // Debugging: Log form data for inspection\n    console.log('Submitting Form Data:');\n    console.log('Environmental Data:', environmentalData);\n    console.log('Social Data:', socialData);\n    console.log('Governance Data:', governanceData);\n    console.log('Start Date:', dataImportData.startDate);\n    console.log('End Date:', dataImportData.endDate);\n    try {\n      const response = await fetch('http://localhost:5003/api/save-esg-data', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        const result = await response.json();\n        setSuccessMessage(result.message || 'Data submitted successfully!');\n      } else {\n        const errorDetail = await response.text();\n        throw new Error(`Error ${response.status}: ${errorDetail}`);\n      }\n    } catch (error) {\n      setErrorMessage('Error submitting data: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.landingPage,\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      style: styles.sidebar,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: GreenTrendz,\n          alt: \"Logo\",\n          width: \"50\",\n          height: \"50\",\n          className: \"d-inline-block align-top me-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          style: styles.logo,\n          children: \"GreenTrendz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: styles.navList,\n        children: menuItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: item.path,\n            style: styles.navItem,\n            onMouseEnter: e => {\n              e.target.style.backgroundColor = '#3b6b5c';\n              e.target.style.transform = 'scale(1.05)';\n            },\n            onMouseLeave: e => {\n              e.target.style.backgroundColor = '';\n              e.target.style.transform = '';\n            },\n            children: [/*#__PURE__*/_jsxDEV(item.icon, {\n              style: styles.navIcon,\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: item.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 29\n          }, this)\n        }, item.path, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 'auto',\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          style: styles.button,\n          onClick: () => setShowLogoutPopup(true),\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.content,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"sectionTitle\",\n            children: \"Upload ESG Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"sectionTitle\",\n            children: \"Annual ESG Metrics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"environmentalForm\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Environmental\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 13\n            }, this), sections.map((section, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: styles.section,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: styles.sectionHeader,\n                onClick: () => toggleSection(section.title),\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: section.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 481,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: expandedSections[section.title] ? '▲' : '▼'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 482,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 21\n              }, this), expandedSections[section.title] && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: section.metrics.map((metric, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: styles.inputContainer,\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    style: styles.label,\n                    htmlFor: metric.key,\n                    children: metric.label\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 488,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: metric.key,\n                    type: metric.type,\n                    value: environmentalData[metric.key] || '',\n                    onChange: e => setEnvironmentalData(prev => ({\n                      ...prev,\n                      [metric.key]: e.target.value\n                    })),\n                    style: styles.inputField\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 491,\n                    columnNumber: 37\n                  }, this)]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 487,\n                  columnNumber: 33\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 25\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              style: styles.button,\n              onClick: () => alert('Add New Metric functionality here'),\n              children: \"Add New Environmental Metric\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Social\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inputContainer\",\n              children: [[{\n                label: 'Gender Diversity (%)',\n                key: 'genderDiversity',\n                type: 'number',\n                info: 'Percentage of employees who identify as different genders, promoting diversity in the workplace.'\n              }, {\n                label: 'Employee Training Hours (Total)',\n                key: 'employeeTrainingHours',\n                type: 'number',\n                info: 'Total number of hours dedicated to employee training and development.'\n              }, {\n                label: 'Volunteerism Hours per Employee (Avg.)',\n                key: 'volunteerismHours',\n                type: 'number',\n                info: 'Average number of hours employees spend on volunteer activities per year.'\n              }, {\n                label: 'Workforce Safety Incidents',\n                key: 'workforceSafety',\n                type: 'dropdown',\n                options: ['LTIFR', 'Fatalities'],\n                info: 'Metrics related to workforce safety, such as Lost Time Injury Frequency Rate (LTIFR) and fatalities.'\n              }, {\n                label: 'CSR Initiatives Conducted (Count)',\n                key: 'csrInitiatives',\n                type: 'number',\n                info: 'Total number of Corporate Social Responsibility initiatives conducted during the reporting period.'\n              }, {\n                label: 'Hours Spent on Community Engagement (Total)',\n                key: 'communityEngagementHours',\n                type: 'number',\n                info: 'Total hours spent by the organization on community engagement activities.'\n              }, {\n                label: 'Sustainable Community Development',\n                key: 'sustainableCommunity',\n                type: 'dropdown',\n                options: ['Yes', 'No'],\n                info: 'Indicates whether the organization participates in sustainable community development projects.'\n              }, {\n                label: 'Human Rights Complaints',\n                key: 'humanRightsComplaints',\n                type: 'dropdown',\n                options: ['Yes', 'No'],\n                info: 'Indicates whether there have been any formal complaints regarding human rights violations.'\n              }, {\n                label: 'WELL-certified Projects (%)',\n                key: 'wellCertifiedProjects',\n                type: 'number',\n                info: 'Percentage of projects certified under the WELL Building Standard.'\n              }, {\n                label: 'Diversity, Equity, and Inclusion Programs',\n                key: 'deiPrograms',\n                type: 'dropdown',\n                options: ['Yes', 'No'],\n                info: 'Indicates whether the organization has programs focused on diversity, equity, and inclusion.'\n              }].map(({\n                label,\n                key,\n                type,\n                options,\n                info\n              }, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginBottom: \"1rem\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: key,\n                  children: [label, /*#__PURE__*/_jsxDEV(Info, {\n                    style: styles.infoIcon,\n                    onMouseEnter: () => showTooltip(key),\n                    onMouseLeave: () => hideTooltip(key)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 537,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 535,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    ...styles.tooltip,\n                    ...(tooltipVisible[key] && styles.tooltipVisible)\n                  },\n                  children: info\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 543,\n                  columnNumber: 37\n                }, this), type === \"dropdown\" ? /*#__PURE__*/_jsxDEV(\"select\", {\n                  id: key,\n                  value: socialData[key] || \"\",\n                  onChange: e => setSocialData(prev => ({\n                    ...prev,\n                    [key]: e.target.value\n                  })),\n                  className: \"inputField\",\n                  style: styles.inputField,\n                  children: options.map((option, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: option,\n                    children: option\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 565,\n                    columnNumber: 49\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 552,\n                  columnNumber: 41\n                }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: key,\n                  type: type,\n                  value: socialData[key] || \"\",\n                  onChange: e => setSocialData(prev => ({\n                    ...prev,\n                    [key]: e.target.value\n                  })),\n                  className: \"inputField\",\n                  style: styles.inputField\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 571,\n                  columnNumber: 41\n                }, this)]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 534,\n                columnNumber: 33\n              }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button\",\n                onClick: e => {\n                  const rect = e.target.getBoundingClientRect();\n                  setModalPosition({\n                    x: rect.left,\n                    y: rect.top + window.scrollY\n                  });\n                  setNewMetricForm(prev => ({\n                    ...prev,\n                    section: 'Social'\n                  }));\n                  setShowNewMetricForm(true);\n                },\n                children: \"Add New Social Metric\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 587,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Governance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 605,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inputContainer\",\n              children: [[{\n                label: 'Independent Directors (%)',\n                key: 'independentDirectors',\n                type: 'number',\n                info: 'Percentage of directors on the board who are independent, ensuring unbiased governance.'\n              }, {\n                label: 'Board-level Governance Initiatives',\n                key: 'boardGovernance',\n                type: 'dropdown',\n                options: ['Yes', 'No'],\n                info: 'Indicates whether the board has implemented governance initiatives to improve oversight and accountability.'\n              }, {\n                label: 'Regulatory Compliance Status',\n                key: 'regulatoryCompliance',\n                type: 'dropdown',\n                options: ['Yes', 'No'],\n                info: 'Indicates if the organization is compliant with all relevant regulations and standards.'\n              }, {\n                label: 'Non-compliance Cases (Count)',\n                key: 'nonComplianceCases',\n                type: 'number',\n                info: 'Number of instances where the organization failed to comply with regulations or standards.'\n              }, {\n                label: 'Employees Trained on Code of Conduct (%)',\n                key: 'codeOfConductTraining',\n                type: 'number',\n                info: 'Percentage of employees who have received training on the organization’s code of conduct.'\n              }, {\n                label: 'Ethics Violations Reported (Count)',\n                key: 'ethicsViolations',\n                type: 'number',\n                info: 'Number of ethics violations reported within the organization during the reporting period.'\n              }, {\n                label: 'Risk Management Framework Alignment',\n                key: 'riskManagementFramework',\n                type: 'dropdown',\n                options: ['ISO 31000', 'Others'],\n                info: 'Indicates the risk management framework the organization aligns with, such as ISO 31000.'\n              }, {\n                label: 'Regular Risk Assessments Conducted',\n                key: 'riskAssessments',\n                type: 'dropdown',\n                options: ['Monthly', 'Quarterly', 'Annually'],\n                info: 'Frequency at which regular risk assessments are conducted to identify and mitigate risks.'\n              }].map(({\n                label,\n                key,\n                type,\n                options,\n                info\n              }, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginBottom: \"1rem\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: key,\n                  children: [label, /*#__PURE__*/_jsxDEV(Info, {\n                    style: styles.infoIcon,\n                    onMouseEnter: () => showTooltip(key),\n                    onMouseLeave: () => hideTooltip(key)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 620,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 618,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    ...styles.tooltip,\n                    ...(tooltipVisible[key] && styles.tooltipVisible)\n                  },\n                  children: info\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 626,\n                  columnNumber: 37\n                }, this), type === \"dropdown\" ? /*#__PURE__*/_jsxDEV(\"select\", {\n                  id: key,\n                  value: governanceData[key] || \"\",\n                  onChange: e => setGovernanceData(prev => ({\n                    ...prev,\n                    [key]: e.target.value\n                  })),\n                  className: \"inputField\",\n                  style: styles.inputField,\n                  children: options.map((option, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: option,\n                    children: option\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 648,\n                    columnNumber: 49\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 635,\n                  columnNumber: 41\n                }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: key,\n                  type: type,\n                  value: governanceData[key] || \"\",\n                  onChange: e => setGovernanceData(prev => ({\n                    ...prev,\n                    [key]: e.target.value\n                  })),\n                  className: \"inputField\",\n                  style: styles.inputField\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 654,\n                  columnNumber: 41\n                }, this)]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 617,\n                columnNumber: 33\n              }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button\",\n                onClick: e => {\n                  const rect = e.target.getBoundingClientRect();\n                  setModalPosition({\n                    x: rect.left,\n                    y: rect.top + window.scrollY\n                  });\n                  setNewMetricForm(prev => ({\n                    ...prev,\n                    section: 'Governance'\n                  }));\n                  setShowNewMetricForm(true);\n                },\n                children: \"Add New Governance Metric\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 670,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Data Import\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 692,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"date-picker-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"inputColumn\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Start Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 696,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  value: dataImportData.startDate,\n                  onChange: e => setDataImportData({\n                    ...dataImportData,\n                    startDate: e.target.value\n                  }),\n                  className: \"inputField\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 697,\n                  columnNumber: 7\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 695,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"inputColumn\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"End Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 710,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  value: dataImportData.endDate,\n                  onChange: e => setDataImportData({\n                    ...dataImportData,\n                    endDate: e.target.value\n                  }),\n                  className: \"inputField\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 711,\n                  columnNumber: 7\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 709,\n                columnNumber: 5\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 694,\n              columnNumber: 3\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 691,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Upload CSV\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 730,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-upload-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                accept: \".csv\",\n                onChange: handleCsvUpload,\n                className: \"inputField\",\n                id: \"csv-upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 732,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"csv-upload\",\n                className: \"upload-label\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Click to upload or drag and drop\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 740,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Upload a CSV file (max. 5MB) containing Metric Name, Value, and Timestamp columns\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 741,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 739,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 731,\n              columnNumber: 5\n            }, this), csvFile && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"preview\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: csvFile.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 746,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [Math.round(csvFile.size / 1024), \" KB\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 747,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 745,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 729,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Upload Logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 754,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-upload-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                accept: \"image/*\",\n                onChange: handleLogoUpload,\n                className: \"inputField\",\n                id: \"logo-upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 756,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"logo-upload\",\n                className: \"upload-label\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Click to upload or drag and drop\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 764,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Upload your company logo (JPEG/PNG/SVG, max. 2MB)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 765,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 763,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 755,\n              columnNumber: 5\n            }, this), logoFile && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"preview\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: logoFile,\n                alt: \"Logo\",\n                width: \"100\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 770,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 769,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 753,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: handleSubmit,\n            children: \"Submit Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 776,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Submitting data, please wait...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 780,\n              columnNumber: 21\n            }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"success\",\n              children: successMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 781,\n              columnNumber: 28\n            }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error\",\n              children: errorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 782,\n              columnNumber: 26\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 779,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 424,\n    columnNumber: 9\n  }, this);\n};\n_s(Sidebar, \"00R92YHejm2IsZaJKtOpQ0dJKS4=\");\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useState","GreenTrendz","Info","Home","LayoutDashboard","FileText","BarChart2","Calculator","Settings","UserCircle","HelpCircle","CloudUpload","jsxDEV","_jsxDEV","styles","landingPage","display","height","backgroundColor","fontFamily","sidebar","width","background","color","padding","boxSizing","flexDirection","alignItems","position","zIndex","boxShadow","transition","logo","fontSize","marginBottom","fontWeight","textAlign","marginTop","logoHover","transform","navList","listStyle","margin","navItem","textDecoration","borderRadius","cursor","fontfamily","navItemHover","navIcon","marginRight","content","flex","overflowY","marginLeft","section","border","sectionHeader","justifyContent","inputContainer","label","inputField","tooltip","tooltipVisible","infoIcon","button","lineHeight","visibility","opacity","menuItems","icon","path","Sidebar","_s","showLogoutPopup","setShowLogoutPopup","setTooltipVisible","showTooltip","key","prev","hideTooltip","sections","title","metrics","type","socialData","setSocialData","genderDiversity","employeeTrainingHours","volunteerismHoursPerEmployee","workforceSafetyIncidents","csrInitiatives","communityEngagementHours","sustainableCommunityDevelopment","humanRightsComplaints","wellCertifiedProjects","deiPrograms","governanceData","setGovernanceData","independentDirectors","boardGovernanceInitiatives","regulatoryComplianceStatus","nonComplianceCases","employeesTrainedOnCodeOfConduct","ethicsViolationsReported","riskManagementFramework","riskAssessmentsConducted","dataImportData","setDataImportData","startDate","endDate","csvFile","setCsvFile","logoFile","setLogoFile","loading","setLoading","successMessage","setSuccessMessage","errorMessage","setErrorMessage","handleCsvUpload","e","file","target","files","alert","reader","FileReader","onload","event","text","result","rows","split","map","row","headers","data","slice","mappedData","forEach","metric","trim","value","setEnvironmentalData","readAsText","handleLogoUpload","includes","handleSubmit","userId","localStorage","getItem","formData","FormData","append","JSON","stringify","environmentalData","console","log","response","fetch","method","body","ok","json","message","errorDetail","Error","status","error","style","children","src","alt","className","fileName","_jsxFileName","lineNumber","columnNumber","item","href","onMouseEnter","onMouseLeave","size","onClick","idx","toggleSection","expandedSections","i","htmlFor","id","onChange","info","options","option","rect","getBoundingClientRect","setModalPosition","x","left","y","top","window","scrollY","setNewMetricForm","setShowNewMetricForm","accept","name","Math","round","_c","$RefreshReg$"],"sources":["/Users/srushtipatil/Downloads/Greentrendz/final_src/src/components/FileUploads.js"],"sourcesContent":["import React, { useState } from 'react';\nimport GreenTrendz from '../assets/img/logo_1.png';\nimport './style.css';  // If style.css is in the same folder as FileUploads.js\nimport { Info } from 'lucide-react';\n\n\nimport {\n    Home,\n    LayoutDashboard,\n    FileText,\n    BarChart2,\n    Calculator,\n    Settings,\n    UserCircle,\n    HelpCircle,\n    CloudUpload,\n} from 'lucide-react';\n\nconst styles = {\n    landingPage: {\n        display: 'flex',\n        height: '100vh',\n        backgroundColor: '#f4f4f9',\n        fontFamily: 'Arial, sans-serif',\n      },\n      sidebar: {\n        width: '250px',\n        background: 'linear-gradient(to bottom right, #064e3b, #276749)',\n        color: 'white',\n        padding: '20px',\n        boxSizing: 'border-box',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n        position: 'fixed',\n        height: '100vh',\n        zIndex: 10,\n        boxShadow: '2px 0 15px rgba(0, 0, 0, 0.15)',\n        transition: 'width 0.3s ease',\n      },\n      logo: {\n        fontSize: '25px',\n        marginBottom: '30px',\n        fontWeight: 'bold',\n        color: '#fff',\n        textAlign: 'center',\n        marginTop: '20px',\n        transition: 'transform 0.3s ease',\n      },\n      logoHover: {\n        transform: 'scale(1.1)',\n      },\n      navList: {\n        listStyle: 'none',\n        padding: 0,\n        margin: 0,\n        width: '100%',\n      },\n      navItem: {\n        color: 'white',\n        textDecoration: 'none',\n        padding: '15px 20px',\n        display: 'flex',\n        alignItems: 'center',\n        width: '100%',\n        borderRadius: '8px',\n        marginBottom: '12px',\n        transition: 'background-color 0.3s ease, transform 0.3s ease',\n        cursor: 'pointer',\n        fontfamily: \"'Poppins', sans-serif\", // Custom font for links\n            fontWeight: '500', // Optional for bold text\n        },\n          navItemHover: {\n        backgroundColor: '#3b6b5c',\n        transform: 'scale(1.05)',\n      },\n      navIcon: {\n        marginRight: '20px',\n        transition: 'transform 0.3s ease',\n      },\n     \n        content: {\n            flex: 1,\n            padding: '30px',\n            boxSizing: 'border-box',\n            backgroundColor: '#f8f9fa', // Light gray background for a softer look\n            overflowY: 'auto',\n            marginLeft: '250px',\n            transition: 'margin-left 0.3s ease',\n        },\n       \n        \n        section: {\n            marginBottom: '20px',\n            border: '1px solid #ddd',\n            borderRadius: '8px',\n            padding: '10px',\n            backgroundColor: '#f9f9f9',\n        },\n        sectionHeader: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            cursor: 'pointer',\n            padding: '10px',\n            backgroundColor: '#e9e9e9',\n            borderRadius: '8px',\n        },\n        inputContainer: {\n            marginBottom: '15px',\n        },\n        label: {\n            display: 'block',\n            marginBottom: '5px',\n            fontWeight: 'bold',\n        },\n        inputField: {\n            width: '100%',\n            padding: '8px',\n            borderRadius: '4px',\n            border: '1px solid #ccc',\n        },\n        tooltip: {\n            position: 'absolute',\n            backgroundColor: '#333',\n            color: '#fff',\n            padding: '5px',\n            borderRadius: '4px',\n            fontSize: '12px',\n            display: 'none',\n        },\n        tooltipVisible: {\n            display: 'block',\n        },\n        infoIcon: {\n            marginLeft: '5px',\n            cursor: 'pointer',\n        },\n        button: {\n            padding: '10px 20px',\n            backgroundColor: '#007bff',\n            color: '#fff',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer',\n        },\n    \n        \n        \n    button: {\n        backgroundColor: '#ffffff', // Default background color\n        color: 'Black', // Text color\n        border: 'none', // No border\n        padding: '10px 20px', // Padding for a nice clickable area\n        borderRadius: '5px', // Rounded corners\n        fontWeight: 'bold', // Bold text\n        fontSize: '16px', // Font size\n        cursor: 'pointer', // Pointer cursor on hover\n        boxShadow: '0px 4px 6px rgba(0, 0, 0, 0.1)', // Subtle shadow for a 3D effect\n        transition: 'background-color 0.3s ease, transform 0.2s ease', // Smooth transition for hover effects\n      },\n      infoIcon: {\n        marginLeft: '8px',\n        cursor: 'pointer',\n        fontSize: '6px',\n        color: '#666',\n        lineHeight: '1',\n        width: '20px', // Adjust width to control circle size\n    height: '20px', // Adjust height to control circle size\n    display: 'inline-flex', // Ensures proper centering\n    alignItems: 'center', // Vertically centers the icon within the circle\n    justifyContent: 'center', // Horizontally centers the icon within the circle\n    borderRadius: '50%', // Ensures it's a circle\n    padding: '2px', // Adjust padding for inner spacing\n    },\n    tooltip: {\n        position: 'absolute',\n        backgroundColor: '#333',\n        color: '#fff',\n        padding: '5px 10px',\n        borderRadius: '4px',\n        fontSize: '12px',\n        zIndex: '1000',\n        visibility: 'hidden',\n        opacity: 0,\n        transition: 'opacity 0.3s',\n    },\n    tooltipVisible: {\n        visibility: 'visible',\n        opacity: 1,\n    },\n};\n\nconst menuItems = [\n    { icon: Home, label: 'Home', path: '/land' },\n    { icon: CloudUpload, label: 'Data Upload', path: '/upload' },\n    { icon: LayoutDashboard, label: 'Dashboard', path: '/dashboard' },\n    { icon: FileText, label: 'Reports', path: '/reports' },\n    { icon: BarChart2, label: 'Comparison', path: '/comparison' },\n    { icon: Calculator, label: 'Carbon Calculator', path: '/calculator' },\n    { icon: Settings, label: 'Settings', path: '/settings' },\n    { icon: HelpCircle, label: 'Help & Support', path: '/help' },\n    { icon: UserCircle, label: 'Account', path: '/account' }, // Added Account item\n\n];\n\nconst Sidebar = () => {\n    const [showLogoutPopup, setShowLogoutPopup] = useState(false);\n\n    const [tooltipVisible, setTooltipVisible] = useState({});\n\n    const showTooltip = (key) => {\n        setTooltipVisible((prev) => ({ ...prev, [key]: true }));\n    };\n\n    const hideTooltip = (key) => {\n        setTooltipVisible((prev) => ({ ...prev, [key]: false }));\n    };\n    const sections = [\n        {\n            title: 'Energy',\n            metrics: [\n                { label: 'Coal (tons, GJ)', key: 'coal', type: 'number' },\n                { label: 'Diesel (L, GJ)', key: 'diesel', type: 'number' },\n                { label: 'High-Speed Diesel (HSD) (L, GJ)', key: 'hsd', type: 'number' },\n                { label: 'Petrol (L, GJ)', key: 'petrol', type: 'number' },\n                { label: 'Liquefied Petroleum Gas (LPG) (m³, GJ)', key: 'lpg', type: 'number' },\n                { label: 'Natural Gas (m³, GJ)', key: 'naturalGas', type: 'number' },\n                { label: 'LNG/PNG (m³, GJ)', key: 'lngPng', type: 'number' },\n                { label: 'Solar Energy (MWh, kWh)', key: 'solarEnergy', type: 'number' },\n                { label: 'Wind Energy (MWh, kWh)', key: 'windEnergy', type: 'number' },\n                { label: 'Hydroelectric Energy (MWh, kWh)', key: 'hydroEnergy', type: 'number' },\n                { label: 'Biomass (tons, GJ)', key: 'biomass', type: 'number' },\n                { label: 'Renewable Energy Generated (MWh, %)', key: 'renewableEnergyGenerated', type: 'number' },\n                { label: 'On-site Energy Consumption (MWh, GJ)', key: 'onsiteEnergyConsumption', type: 'number' },\n                { label: 'Biodiesel (L, GJ)', key: 'biodiesel', type: 'number' },\n            ],\n        },\n        {\n            title: 'Water',\n            metrics: [\n                { label: 'Produced Water Withdrawal (m³, L)', key: 'producedWaterWithdrawal', type: 'number' },\n                { label: 'Surface Water Withdrawal (m³, L)', key: 'surfaceWaterWithdrawal', type: 'number' },\n                { label: 'Ground Water Withdrawal (m³, L)', key: 'groundWaterWithdrawal', type: 'number' },\n                { label: 'Seawater Withdrawal (m³, L)', key: 'seawaterWithdrawal', type: 'number' },\n                { label: 'Third-Party Water Withdrawal (m³, L)', key: 'thirdPartyWaterWithdrawal', type: 'number' },\n                { label: 'Water Consumption (m³, L)', key: 'waterConsumption', type: 'number' },\n                { label: 'Water Recycled (m³, %)', key: 'waterRecycled', type: 'number' },\n                { label: 'Water Discharge to Surface Water (m³, L)', key: 'waterDischargeSurface', type: 'number' },\n                { label: 'Water Discharge to Groundwater (m³, L)', key: 'waterDischargeGround', type: 'number' },\n                { label: 'Water Discharge to Third-Party (m³, L)', key: 'waterDischargeThirdParty', type: 'number' },\n                { label: 'Water Discharge to Seawater (m³, L)', key: 'waterDischargeSeawater', type: 'number' },\n                { label: 'Wastewater Generated (m³, L)', key: 'wastewaterGenerated', type: 'number' },\n            ],\n        },\n        {\n            title: 'Waste',\n            metrics: [\n                { label: 'E-Waste (kg, tons, % recycled)', key: 'eWaste', type: 'number' },\n                { label: 'Plastic Waste (kg, tons, % recycled)', key: 'plasticWaste', type: 'number' },\n                { label: 'Metal Waste (kg, tons, % recycled)', key: 'metalWaste', type: 'number' },\n                { label: 'Glass Waste (kg, tons, % recycled)', key: 'glassWaste', type: 'number' },\n                { label: 'Batteries and Accumulator Waste (kg, tons, % recycled)', key: 'batteryWaste', type: 'number' },\n                { label: 'Civil Waste (kg, tons, % recycled)', key: 'civilWaste', type: 'number' },\n                { label: 'Miscellaneous Waste (kg, tons, % recycled)', key: 'miscWaste', type: 'number' },\n                { label: 'Biomedical Waste (kg, tons, % recycled)', key: 'biomedicalWaste', type: 'number' },\n                { label: 'Feed Waste (kg, tons, % recycled)', key: 'feedWaste', type: 'number' },\n                { label: 'Hazardous Waste Generation (kg, tons)', key: 'hazardousWaste', type: 'number' },\n            ],\n        },\n        {\n            title: 'Emissions',\n            metrics: [\n                { label: 'Greenhouse Gas (GHG) Emissions (tons CO₂e)', key: 'ghgEmissions', type: 'number' },\n                { label: 'Effluent Discharge (m³, L, ppm)', key: 'effluentDischarge', type: 'number' },\n            ],\n        },\n        {\n            title: 'Other Environmental Factors',\n            metrics: [\n                { label: 'Environmental Incidents (count)', key: 'environmentalIncidents', type: 'number' },\n                { label: 'Solar Panel Recycling (% recycled, kg, tons)', key: 'solarPanelRecycling', type: 'number' },\n            ],\n        },\n    ];\n    const [socialData, setSocialData] = useState({\n        genderDiversity: '',\n        employeeTrainingHours: '',\n        volunteerismHoursPerEmployee: '',\n        workforceSafetyIncidents: '',\n        csrInitiatives: '',\n        communityEngagementHours: '',\n        sustainableCommunityDevelopment: '',\n        humanRightsComplaints: '',\n        wellCertifiedProjects: '',\n        deiPrograms: '',\n    });\n\n    const [governanceData, setGovernanceData] = useState({\n        independentDirectors: '',\n        boardGovernanceInitiatives: '',\n        regulatoryComplianceStatus: '',\n        nonComplianceCases: '',\n        employeesTrainedOnCodeOfConduct: '',\n        ethicsViolationsReported: '',\n        riskManagementFramework: '',\n        riskAssessmentsConducted: '',\n    });\n\n    const [dataImportData, setDataImportData] = useState({\n        startDate: '',\n        endDate: ''\n    });\n\n    const [csvFile, setCsvFile] = useState(null);\n    const [logoFile, setLogoFile] = useState(null);\n\n    const [loading, setLoading] = useState(false);\n    const [successMessage, setSuccessMessage] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const handleCsvUpload = (e) => {\n        const file = e.target.files[0];\n        if (file && file.type !== 'text/csv') {\n            alert('Please upload a valid CSV file.');\n            return;\n        }\n        setCsvFile(file);\n    \n        // Parse the CSV file\n        const reader = new FileReader();\n        reader.onload = (event) => {\n            const text = event.target.result;\n            const rows = text.split('\\n').map(row => row.split(',')); // Split CSV into rows and columns\n            const headers = rows[0]; // First row is headers\n            const data = rows.slice(1); // Rest are data rows\n    \n            // Map CSV data to state\n            const mappedData = {};\n            data.forEach(row => {\n                const metric = row[0].trim(); // Metric name\n                const value = row[1].trim(); // Metric value\n                mappedData[metric] = value;\n            });\n    \n            // Update state with mapped data\n            setEnvironmentalData((prev) => ({ ...prev, ...mappedData }));\n            setSocialData((prev) => ({ ...prev, ...mappedData }));\n            setGovernanceData((prev) => ({ ...prev, ...mappedData }));\n        };\n        reader.readAsText(file);\n    };\n\n    const handleLogoUpload = (e) => {\n        const file = e.target.files[0];\n        if (file && !['image/png', 'image/jpeg'].includes(file.type)) {\n            alert('Please upload a valid image file (PNG or JPEG).');\n            return;\n        }\n        setLogoFile(file);\n    };\n\n    const handleSubmit = async () => {\n        // Validation: Check if start and end date are provided when uploading a CSV\n        if (!csvFile && (!dataImportData.startDate || !dataImportData.endDate)) {\n            alert('Please select both start and end dates if uploading a CSV file.');\n            return;\n        }\n\n        if (!csvFile || !logoFile) {\n            alert('Please upload both CSV and Logo files.');\n            return;\n        }\n\n        setLoading(true);\n        setSuccessMessage('');\n        setErrorMessage('');\n        \n        const userId = localStorage.getItem('userId'); // Assuming userId is stored in localStorage after login\n\n        if (!userId) {\n            alert('User not authenticated. Please log in.');\n            return;\n        }\n        const formData = new FormData();\n        formData.append('userId', userId);\n        formData.append('environmentalData', JSON.stringify(environmentalData));\n        formData.append('socialData', JSON.stringify(socialData));\n        formData.append('governanceData', JSON.stringify(governanceData));\n        formData.append('startDate', dataImportData.startDate);\n        formData.append('endDate', dataImportData.endDate);\n\n        if (csvFile) formData.append('csvFile', csvFile);\n        if (logoFile) formData.append('logoFile', logoFile);\n   // Debugging: Log form data for inspection\n   console.log('Submitting Form Data:');\n   console.log('Environmental Data:', environmentalData);\n   console.log('Social Data:', socialData);\n   console.log('Governance Data:', governanceData);\n   console.log('Start Date:', dataImportData.startDate);\n   console.log('End Date:', dataImportData.endDate);\n\n        try {\n            const response = await fetch('http://localhost:5003/api/save-esg-data', {\n                method: 'POST',\n                body: formData,\n            });\n\n            if (response.ok) {\n                const result = await response.json();\n                setSuccessMessage(result.message || 'Data submitted successfully!');\n            } else {\n                const errorDetail = await response.text();\n                throw new Error(`Error ${response.status}: ${errorDetail}`);\n            }\n        } catch (error) {\n            setErrorMessage('Error submitting data: ' + error.message);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div style={styles.landingPage}>\n            <nav style={styles.sidebar}>\n                <div style={{ display: 'flex', alignItems: 'center' }}>\n                    <img\n                        src={GreenTrendz}\n                        alt=\"Logo\"\n                        width=\"50\"\n                        height=\"50\"\n                        className=\"d-inline-block align-top me-2\"\n                    />\n                    <h5 style={styles.logo}>GreenTrendz</h5>\n                </div>\n                <ul style={styles.navList}>\n                    {menuItems.map((item) => (\n                        <li key={item.path}>\n                            <a\n                                href={item.path}\n                                style={styles.navItem}\n                                onMouseEnter={(e) => {\n                                    e.target.style.backgroundColor = '#3b6b5c';\n                                    e.target.style.transform = 'scale(1.05)';\n                                }}\n                                onMouseLeave={(e) => {\n                                    e.target.style.backgroundColor = '';\n                                    e.target.style.transform = '';\n                                }}\n                            >\n                                <item.icon style={styles.navIcon} size={20} />\n                                <span>{item.label}</span>\n                            </a>\n                        </li>\n                    ))}\n                </ul>\n                <div style={{ marginTop: 'auto', textAlign: 'center' }}>\n                    <button\n                        style={styles.button}\n                        onClick={() => setShowLogoutPopup(true)}\n                    >\n                        Logout\n                    </button>\n                </div>\n            </nav>\n            <div style={styles.content}>\n                <div className=\"container\">\n                    <div className=\"section\">\n                        <h1 className=\"sectionTitle\">Upload ESG Data</h1>\n                        <h2 className=\"sectionTitle\">Annual ESG Metrics</h2>\n\n                        {/* Environmental Section */}\n                        <div className=\"environmentalForm\">\n            <h2>Environmental</h2>\n            {sections.map((section, idx) => (\n                <div key={idx} style={styles.section}>\n                    <div\n                        style={styles.sectionHeader}\n                        onClick={() => toggleSection(section.title)}\n                    >\n                        <h3>{section.title}</h3>\n                        <span>{expandedSections[section.title] ? '▲' : '▼'}</span>\n                    </div>\n                    {expandedSections[section.title] && (\n                        <div>\n                            {section.metrics.map((metric, i) => (\n                                <div key={i} style={styles.inputContainer}>\n                                    <label style={styles.label} htmlFor={metric.key}>\n                                        {metric.label}\n                                    </label>\n                                    <input\n                                        id={metric.key}\n                                        type={metric.type}\n                                        value={environmentalData[metric.key] || ''}\n                                        onChange={(e) =>\n                                            setEnvironmentalData((prev) => ({\n                                                ...prev,\n                                                [metric.key]: e.target.value,\n                                            }))\n                                        }\n                                        style={styles.inputField}\n                                    />\n                                </div>\n                            ))}\n                        </div>\n                    )}\n                </div>\n            ))}\n            <button\n                style={styles.button}\n                onClick={() => alert('Add New Metric functionality here')}\n            >\n                Add New Environmental Metric\n            </button>\n        </div>\n\n\n                        {/* Social Section */}\n                        <div className=\"section\">\n                            <h3>Social</h3>\n                            <div className=\"inputContainer\">\n                            {[\n                                { label: 'Gender Diversity (%)', key: 'genderDiversity', type: 'number',info: 'Percentage of employees who identify as different genders, promoting diversity in the workplace.' },\n                                { label: 'Employee Training Hours (Total)', key: 'employeeTrainingHours', type: 'number',info: 'Total number of hours dedicated to employee training and development.' },\n                                { label: 'Volunteerism Hours per Employee (Avg.)', key: 'volunteerismHours', type: 'number',info: 'Average number of hours employees spend on volunteer activities per year.' },\n                                { label: 'Workforce Safety Incidents', key: 'workforceSafety', type: 'dropdown', options: ['LTIFR', 'Fatalities'],info: 'Metrics related to workforce safety, such as Lost Time Injury Frequency Rate (LTIFR) and fatalities.'},\n                                { label: 'CSR Initiatives Conducted (Count)', key: 'csrInitiatives', type: 'number',info: 'Total number of Corporate Social Responsibility initiatives conducted during the reporting period.' },\n                                { label: 'Hours Spent on Community Engagement (Total)', key: 'communityEngagementHours', type: 'number',info: 'Total hours spent by the organization on community engagement activities.' },\n                                { label: 'Sustainable Community Development', key: 'sustainableCommunity', type: 'dropdown', options: ['Yes', 'No'],info: 'Indicates whether the organization participates in sustainable community development projects.' },\n                                { label: 'Human Rights Complaints', key: 'humanRightsComplaints', type: 'dropdown', options: ['Yes', 'No'],info: 'Indicates whether there have been any formal complaints regarding human rights violations.' },\n                                { label: 'WELL-certified Projects (%)', key: 'wellCertifiedProjects', type: 'number',info: 'Percentage of projects certified under the WELL Building Standard.' },\n                                { label: 'Diversity, Equity, and Inclusion Programs', key: 'deiPrograms', type: 'dropdown', options: ['Yes', 'No'],info: 'Indicates whether the organization has programs focused on diversity, equity, and inclusion.' },\n                            ].map(({ label, key, type, options, info }, idx) => (\n                                <div key={idx} style={{ marginBottom: \"1rem\" }}>\n                                    <label htmlFor={key}>\n                                        {label}\n                                        <Info \n                                            style={styles.infoIcon}\n                                            onMouseEnter={() => showTooltip(key)}\n                                            onMouseLeave={() => hideTooltip(key)}\n                                        />\n                                    </label>\n                                    <div\n                                        style={{\n                                            ...styles.tooltip,\n                                            ...(tooltipVisible[key] && styles.tooltipVisible),\n                                        }}\n                                    >\n                                        {info}\n                                    </div>\n                                    {type === \"dropdown\" ? (\n                                        <select\n                                            id={key}\n                                            value={socialData[key] || \"\"}\n                                            onChange={(e) =>\n                                                setSocialData((prev) => ({\n                                                    ...prev,\n                                                    [key]: e.target.value,\n                                                }))\n                                            }\n                                            className=\"inputField\"\n                                            style={styles.inputField}\n                                        >\n                                            {options.map((option, i) => (\n                                                <option key={i} value={option}>\n                                                    {option}\n                                                </option>\n                                            ))}\n                                        </select>\n                                    ) : (\n                                        <input\n                                            id={key}\n                                            type={type}\n                                            value={socialData[key] || \"\"}\n                                            onChange={(e) =>\n                                                setSocialData((prev) => ({\n                                                    ...prev,\n                                                    [key]: e.target.value,\n                                                }))\n                                            }\n                                            className=\"inputField\"\n                                            style={styles.inputField}\n                                        />\n                                    )}\n                                </div>\n                            ))}\n                            <button \n                    className=\"button\"\n                    onClick={(e) => {\n                        const rect = e.target.getBoundingClientRect();\n                        setModalPosition({\n                            x: rect.left,\n                            y: rect.top + window.scrollY\n                        });\n                        setNewMetricForm(prev => ({ ...prev, section: 'Social' }));\n                        setShowNewMetricForm(true);\n                    }}\n                            >\n                                Add New Social Metric\n                            </button>\n                        </div>\n                    </div>\n                        {/* Governance Section */}\n                        <div className=\"section\">\n                            <h3>Governance</h3>\n                            <div className=\"inputContainer\">\n                            {[\n                                { label: 'Independent Directors (%)', key: 'independentDirectors', type: 'number',info: 'Percentage of directors on the board who are independent, ensuring unbiased governance.' },\n                                { label: 'Board-level Governance Initiatives', key: 'boardGovernance', type: 'dropdown', options: ['Yes', 'No'],info: 'Indicates whether the board has implemented governance initiatives to improve oversight and accountability.' },\n                                { label: 'Regulatory Compliance Status', key: 'regulatoryCompliance', type: 'dropdown', options: ['Yes', 'No'],info: 'Indicates if the organization is compliant with all relevant regulations and standards.' },\n                                { label: 'Non-compliance Cases (Count)', key: 'nonComplianceCases', type: 'number',info: 'Number of instances where the organization failed to comply with regulations or standards.' },\n                                { label: 'Employees Trained on Code of Conduct (%)', key: 'codeOfConductTraining', type: 'number',info: 'Percentage of employees who have received training on the organization’s code of conduct.' },\n                                { label: 'Ethics Violations Reported (Count)', key: 'ethicsViolations', type: 'number',info: 'Number of ethics violations reported within the organization during the reporting period.' },\n                                { label: 'Risk Management Framework Alignment', key: 'riskManagementFramework', type: 'dropdown', options: ['ISO 31000', 'Others'],info: 'Indicates the risk management framework the organization aligns with, such as ISO 31000.' },\n                                { label: 'Regular Risk Assessments Conducted', key: 'riskAssessments', type: 'dropdown', options: ['Monthly', 'Quarterly', 'Annually'],info: 'Frequency at which regular risk assessments are conducted to identify and mitigate risks.' },\n                            ].map(({ label, key, type, options, info }, idx) => (\n                                <div key={idx} style={{ marginBottom: \"1rem\" }}>\n                                    <label htmlFor={key}>\n                                        {label}\n                                        <Info\n                                            style={styles.infoIcon}\n                                            onMouseEnter={() => showTooltip(key)}\n                                            onMouseLeave={() => hideTooltip(key)}\n                                        />\n                                    </label>\n                                    <div\n                                        style={{\n                                            ...styles.tooltip,\n                                            ...(tooltipVisible[key] && styles.tooltipVisible),\n                                        }}\n                                    >\n                                        {info}\n                                    </div>\n                                    {type === \"dropdown\" ? (\n                                        <select\n                                            id={key}\n                                            value={governanceData[key] || \"\"}\n                                            onChange={(e) =>\n                                                setGovernanceData((prev) => ({\n                                                    ...prev,\n                                                    [key]: e.target.value,\n                                                }))\n                                            }\n                                            className=\"inputField\"\n                                            style={styles.inputField}\n                                        >\n                                            {options.map((option, i) => (\n                                                <option key={i} value={option}>\n                                                    {option}\n                                                </option>\n                                            ))}\n                                        </select>\n                                    ) : (\n                                        <input\n                                            id={key}\n                                            type={type}\n                                            value={governanceData[key] || \"\"}\n                                            onChange={(e) =>\n                                                setGovernanceData((prev) => ({\n                                                    ...prev,\n                                                    [key]: e.target.value,\n                                                }))\n                                            }\n                                            className=\"inputField\"\n                                            style={styles.inputField}\n                                        />\n                                    )}\n                                </div>\n                            ))}\n                            <button \n                            className=\"button\"\n                            onClick={(e) => {\n                                const rect = e.target.getBoundingClientRect();\n                                setModalPosition({\n                                    x: rect.left,\n                                    y: rect.top + window.scrollY\n                                });\n                                setNewMetricForm(prev => ({ ...prev, section: 'Governance' }));\n                                setShowNewMetricForm(true);\n                            }}\n                                    >\n                                        Add New Governance Metric\n                                    </button>\n                        </div>\n                    </div>\n\n\n\n\n{/* Data Import Section */}\n<div className=\"section\">\n  <h3>Data Import</h3>\n   \n  <div className=\"date-picker-container\">\n    <div className=\"inputColumn\">\n      <label>Start Date</label>\n      <input\n        type=\"date\"\n        value={dataImportData.startDate}\n        onChange={(e) =>\n          setDataImportData({\n            ...dataImportData,\n            startDate: e.target.value,\n          })\n        }\n        className=\"inputField\"\n      />\n    </div>\n    <div className=\"inputColumn\">\n      <label>End Date</label>\n      <input\n        type=\"date\"\n        value={dataImportData.endDate}\n        onChange={(e) =>\n          setDataImportData({\n            ...dataImportData,\n            endDate: e.target.value,\n          })\n        }\n        className=\"inputField\"\n      />\n    </div>\n  </div>\n</div>\n\n\n\n           {/* File Upload Section */}\n<div className=\"section\">\n    <h3>Upload CSV</h3>\n    <div className=\"file-upload-container\">\n        <input\n            type=\"file\"\n            accept=\".csv\"\n            onChange={handleCsvUpload}\n            className=\"inputField\"\n            id=\"csv-upload\"\n        />\n        <label htmlFor=\"csv-upload\" className=\"upload-label\">\n            <p>Click to upload or drag and drop</p>\n            <p>Upload a CSV file (max. 5MB) containing Metric Name, Value, and Timestamp columns</p>\n        </label>\n    </div>\n    {csvFile && (\n        <div className=\"preview\">\n            <p>{csvFile.name}</p>\n            <p>{Math.round(csvFile.size / 1024)} KB</p>\n        </div>\n    )}\n</div>\n\n{/* Logo Upload Section */}\n<div className=\"section\">\n    <h3>Upload Logo</h3>\n    <div className=\"file-upload-container\">\n        <input\n            type=\"file\"\n            accept=\"image/*\"\n            onChange={handleLogoUpload}\n            className=\"inputField\"\n            id=\"logo-upload\"\n        />\n        <label htmlFor=\"logo-upload\" className=\"upload-label\">\n            <p>Click to upload or drag and drop</p>\n            <p>Upload your company logo (JPEG/PNG/SVG, max. 2MB)</p>\n        </label>\n    </div>\n    {logoFile && (\n        <div className=\"preview\">\n            <img src={logoFile} alt=\"Logo\" width=\"100\" />\n        </div>\n    )}\n</div>\n\n{/* Submit Button */}\n<button className=\"button\" onClick={handleSubmit}>\n    Submit Data\n</button>\n<div>\n        {loading && <p>Submitting data, please wait...</p>}\n        {successMessage && <p className=\"success\">{successMessage}</p>}\n        {errorMessage && <p className=\"error\">{errorMessage}</p>}\n    </div>\n</div>\n    </div>\n</div>\n\n</div>\n    );\n};\n\nexport default Sidebar;\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAO,aAAa,CAAC,CAAE;AACvB,SAASC,IAAI,QAAQ,cAAc;AAGnC,SACIC,IAAI,EACJC,eAAe,EACfC,QAAQ,EACRC,SAAS,EACTC,UAAU,EACVC,QAAQ,EACRC,UAAU,EACVC,UAAU,EACVC,WAAW,QACR,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,MAAM,GAAG;EACXC,WAAW,EAAE;IACTC,OAAO,EAAE,MAAM;IACfC,MAAM,EAAE,OAAO;IACfC,eAAe,EAAE,SAAS;IAC1BC,UAAU,EAAE;EACd,CAAC;EACDC,OAAO,EAAE;IACPC,KAAK,EAAE,OAAO;IACdC,UAAU,EAAE,oDAAoD;IAChEC,KAAK,EAAE,OAAO;IACdC,OAAO,EAAE,MAAM;IACfC,SAAS,EAAE,YAAY;IACvBT,OAAO,EAAE,MAAM;IACfU,aAAa,EAAE,QAAQ;IACvBC,UAAU,EAAE,YAAY;IACxBC,QAAQ,EAAE,OAAO;IACjBX,MAAM,EAAE,OAAO;IACfY,MAAM,EAAE,EAAE;IACVC,SAAS,EAAE,gCAAgC;IAC3CC,UAAU,EAAE;EACd,CAAC;EACDC,IAAI,EAAE;IACJC,QAAQ,EAAE,MAAM;IAChBC,YAAY,EAAE,MAAM;IACpBC,UAAU,EAAE,MAAM;IAClBZ,KAAK,EAAE,MAAM;IACba,SAAS,EAAE,QAAQ;IACnBC,SAAS,EAAE,MAAM;IACjBN,UAAU,EAAE;EACd,CAAC;EACDO,SAAS,EAAE;IACTC,SAAS,EAAE;EACb,CAAC;EACDC,OAAO,EAAE;IACPC,SAAS,EAAE,MAAM;IACjBjB,OAAO,EAAE,CAAC;IACVkB,MAAM,EAAE,CAAC;IACTrB,KAAK,EAAE;EACT,CAAC;EACDsB,OAAO,EAAE;IACPpB,KAAK,EAAE,OAAO;IACdqB,cAAc,EAAE,MAAM;IACtBpB,OAAO,EAAE,WAAW;IACpBR,OAAO,EAAE,MAAM;IACfW,UAAU,EAAE,QAAQ;IACpBN,KAAK,EAAE,MAAM;IACbwB,YAAY,EAAE,KAAK;IACnBX,YAAY,EAAE,MAAM;IACpBH,UAAU,EAAE,iDAAiD;IAC7De,MAAM,EAAE,SAAS;IACjBC,UAAU,EAAE,uBAAuB;IAAE;IACjCZ,UAAU,EAAE,KAAK,CAAE;EACvB,CAAC;EACCa,YAAY,EAAE;IAChB9B,eAAe,EAAE,SAAS;IAC1BqB,SAAS,EAAE;EACb,CAAC;EACDU,OAAO,EAAE;IACPC,WAAW,EAAE,MAAM;IACnBnB,UAAU,EAAE;EACd,CAAC;EAECoB,OAAO,EAAE;IACLC,IAAI,EAAE,CAAC;IACP5B,OAAO,EAAE,MAAM;IACfC,SAAS,EAAE,YAAY;IACvBP,eAAe,EAAE,SAAS;IAAE;IAC5BmC,SAAS,EAAE,MAAM;IACjBC,UAAU,EAAE,OAAO;IACnBvB,UAAU,EAAE;EAChB,CAAC;EAGDwB,OAAO,EAAE;IACLrB,YAAY,EAAE,MAAM;IACpBsB,MAAM,EAAE,gBAAgB;IACxBX,YAAY,EAAE,KAAK;IACnBrB,OAAO,EAAE,MAAM;IACfN,eAAe,EAAE;EACrB,CAAC;EACDuC,aAAa,EAAE;IACXzC,OAAO,EAAE,MAAM;IACf0C,cAAc,EAAE,eAAe;IAC/B/B,UAAU,EAAE,QAAQ;IACpBmB,MAAM,EAAE,SAAS;IACjBtB,OAAO,EAAE,MAAM;IACfN,eAAe,EAAE,SAAS;IAC1B2B,YAAY,EAAE;EAClB,CAAC;EACDc,cAAc,EAAE;IACZzB,YAAY,EAAE;EAClB,CAAC;EACD0B,KAAK,EAAE;IACH5C,OAAO,EAAE,OAAO;IAChBkB,YAAY,EAAE,KAAK;IACnBC,UAAU,EAAE;EAChB,CAAC;EACD0B,UAAU,EAAE;IACRxC,KAAK,EAAE,MAAM;IACbG,OAAO,EAAE,KAAK;IACdqB,YAAY,EAAE,KAAK;IACnBW,MAAM,EAAE;EACZ,CAAC;EACDM,OAAO,EAAE;IACLlC,QAAQ,EAAE,UAAU;IACpBV,eAAe,EAAE,MAAM;IACvBK,KAAK,EAAE,MAAM;IACbC,OAAO,EAAE,KAAK;IACdqB,YAAY,EAAE,KAAK;IACnBZ,QAAQ,EAAE,MAAM;IAChBjB,OAAO,EAAE;EACb,CAAC;EACD+C,cAAc,EAAE;IACZ/C,OAAO,EAAE;EACb,CAAC;EACDgD,QAAQ,EAAE;IACNV,UAAU,EAAE,KAAK;IACjBR,MAAM,EAAE;EACZ,CAAC;EACDmB,MAAM,EAAE;IACJzC,OAAO,EAAE,WAAW;IACpBN,eAAe,EAAE,SAAS;IAC1BK,KAAK,EAAE,MAAM;IACbiC,MAAM,EAAE,MAAM;IACdX,YAAY,EAAE,KAAK;IACnBC,MAAM,EAAE;EACZ,CAAC;EAILmB,MAAM,EAAE;IACJ/C,eAAe,EAAE,SAAS;IAAE;IAC5BK,KAAK,EAAE,OAAO;IAAE;IAChBiC,MAAM,EAAE,MAAM;IAAE;IAChBhC,OAAO,EAAE,WAAW;IAAE;IACtBqB,YAAY,EAAE,KAAK;IAAE;IACrBV,UAAU,EAAE,MAAM;IAAE;IACpBF,QAAQ,EAAE,MAAM;IAAE;IAClBa,MAAM,EAAE,SAAS;IAAE;IACnBhB,SAAS,EAAE,gCAAgC;IAAE;IAC7CC,UAAU,EAAE,iDAAiD,CAAE;EACjE,CAAC;EACDiC,QAAQ,EAAE;IACRV,UAAU,EAAE,KAAK;IACjBR,MAAM,EAAE,SAAS;IACjBb,QAAQ,EAAE,KAAK;IACfV,KAAK,EAAE,MAAM;IACb2C,UAAU,EAAE,GAAG;IACf7C,KAAK,EAAE,MAAM;IAAE;IACnBJ,MAAM,EAAE,MAAM;IAAE;IAChBD,OAAO,EAAE,aAAa;IAAE;IACxBW,UAAU,EAAE,QAAQ;IAAE;IACtB+B,cAAc,EAAE,QAAQ;IAAE;IAC1Bb,YAAY,EAAE,KAAK;IAAE;IACrBrB,OAAO,EAAE,KAAK,CAAE;EAChB,CAAC;EACDsC,OAAO,EAAE;IACLlC,QAAQ,EAAE,UAAU;IACpBV,eAAe,EAAE,MAAM;IACvBK,KAAK,EAAE,MAAM;IACbC,OAAO,EAAE,UAAU;IACnBqB,YAAY,EAAE,KAAK;IACnBZ,QAAQ,EAAE,MAAM;IAChBJ,MAAM,EAAE,MAAM;IACdsC,UAAU,EAAE,QAAQ;IACpBC,OAAO,EAAE,CAAC;IACVrC,UAAU,EAAE;EAChB,CAAC;EACDgC,cAAc,EAAE;IACZI,UAAU,EAAE,SAAS;IACrBC,OAAO,EAAE;EACb;AACJ,CAAC;AAED,MAAMC,SAAS,GAAG,CACd;EAAEC,IAAI,EAAEnE,IAAI;EAAEyD,KAAK,EAAE,MAAM;EAAEW,IAAI,EAAE;AAAQ,CAAC,EAC5C;EAAED,IAAI,EAAE3D,WAAW;EAAEiD,KAAK,EAAE,aAAa;EAAEW,IAAI,EAAE;AAAU,CAAC,EAC5D;EAAED,IAAI,EAAElE,eAAe;EAAEwD,KAAK,EAAE,WAAW;EAAEW,IAAI,EAAE;AAAa,CAAC,EACjE;EAAED,IAAI,EAAEjE,QAAQ;EAAEuD,KAAK,EAAE,SAAS;EAAEW,IAAI,EAAE;AAAW,CAAC,EACtD;EAAED,IAAI,EAAEhE,SAAS;EAAEsD,KAAK,EAAE,YAAY;EAAEW,IAAI,EAAE;AAAc,CAAC,EAC7D;EAAED,IAAI,EAAE/D,UAAU;EAAEqD,KAAK,EAAE,mBAAmB;EAAEW,IAAI,EAAE;AAAc,CAAC,EACrE;EAAED,IAAI,EAAE9D,QAAQ;EAAEoD,KAAK,EAAE,UAAU;EAAEW,IAAI,EAAE;AAAY,CAAC,EACxD;EAAED,IAAI,EAAE5D,UAAU;EAAEkD,KAAK,EAAE,gBAAgB;EAAEW,IAAI,EAAE;AAAQ,CAAC,EAC5D;EAAED,IAAI,EAAE7D,UAAU;EAAEmD,KAAK,EAAE,SAAS;EAAEW,IAAI,EAAE;AAAW,CAAC,CAAE;AAAA,CAE7D;AAED,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAG3E,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAM,CAAC+D,cAAc,EAAEa,iBAAiB,CAAC,GAAG5E,QAAQ,CAAC,CAAC,CAAC,CAAC;EAExD,MAAM6E,WAAW,GAAIC,GAAG,IAAK;IACzBF,iBAAiB,CAAEG,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACD,GAAG,GAAG;IAAK,CAAC,CAAC,CAAC;EAC3D,CAAC;EAED,MAAME,WAAW,GAAIF,GAAG,IAAK;IACzBF,iBAAiB,CAAEG,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACD,GAAG,GAAG;IAAM,CAAC,CAAC,CAAC;EAC5D,CAAC;EACD,MAAMG,QAAQ,GAAG,CACb;IACIC,KAAK,EAAE,QAAQ;IACfC,OAAO,EAAE,CACL;MAAEvB,KAAK,EAAE,iBAAiB;MAAEkB,GAAG,EAAE,MAAM;MAAEM,IAAI,EAAE;IAAS,CAAC,EACzD;MAAExB,KAAK,EAAE,gBAAgB;MAAEkB,GAAG,EAAE,QAAQ;MAAEM,IAAI,EAAE;IAAS,CAAC,EAC1D;MAAExB,KAAK,EAAE,iCAAiC;MAAEkB,GAAG,EAAE,KAAK;MAAEM,IAAI,EAAE;IAAS,CAAC,EACxE;MAAExB,KAAK,EAAE,gBAAgB;MAAEkB,GAAG,EAAE,QAAQ;MAAEM,IAAI,EAAE;IAAS,CAAC,EAC1D;MAAExB,KAAK,EAAE,wCAAwC;MAAEkB,GAAG,EAAE,KAAK;MAAEM,IAAI,EAAE;IAAS,CAAC,EAC/E;MAAExB,KAAK,EAAE,sBAAsB;MAAEkB,GAAG,EAAE,YAAY;MAAEM,IAAI,EAAE;IAAS,CAAC,EACpE;MAAExB,KAAK,EAAE,kBAAkB;MAAEkB,GAAG,EAAE,QAAQ;MAAEM,IAAI,EAAE;IAAS,CAAC,EAC5D;MAAExB,KAAK,EAAE,yBAAyB;MAAEkB,GAAG,EAAE,aAAa;MAAEM,IAAI,EAAE;IAAS,CAAC,EACxE;MAAExB,KAAK,EAAE,wBAAwB;MAAEkB,GAAG,EAAE,YAAY;MAAEM,IAAI,EAAE;IAAS,CAAC,EACtE;MAAExB,KAAK,EAAE,iCAAiC;MAAEkB,GAAG,EAAE,aAAa;MAAEM,IAAI,EAAE;IAAS,CAAC,EAChF;MAAExB,KAAK,EAAE,oBAAoB;MAAEkB,GAAG,EAAE,SAAS;MAAEM,IAAI,EAAE;IAAS,CAAC,EAC/D;MAAExB,KAAK,EAAE,qCAAqC;MAAEkB,GAAG,EAAE,0BAA0B;MAAEM,IAAI,EAAE;IAAS,CAAC,EACjG;MAAExB,KAAK,EAAE,sCAAsC;MAAEkB,GAAG,EAAE,yBAAyB;MAAEM,IAAI,EAAE;IAAS,CAAC,EACjG;MAAExB,KAAK,EAAE,mBAAmB;MAAEkB,GAAG,EAAE,WAAW;MAAEM,IAAI,EAAE;IAAS,CAAC;EAExE,CAAC,EACD;IACIF,KAAK,EAAE,OAAO;IACdC,OAAO,EAAE,CACL;MAAEvB,KAAK,EAAE,mCAAmC;MAAEkB,GAAG,EAAE,yBAAyB;MAAEM,IAAI,EAAE;IAAS,CAAC,EAC9F;MAAExB,KAAK,EAAE,kCAAkC;MAAEkB,GAAG,EAAE,wBAAwB;MAAEM,IAAI,EAAE;IAAS,CAAC,EAC5F;MAAExB,KAAK,EAAE,iCAAiC;MAAEkB,GAAG,EAAE,uBAAuB;MAAEM,IAAI,EAAE;IAAS,CAAC,EAC1F;MAAExB,KAAK,EAAE,6BAA6B;MAAEkB,GAAG,EAAE,oBAAoB;MAAEM,IAAI,EAAE;IAAS,CAAC,EACnF;MAAExB,KAAK,EAAE,sCAAsC;MAAEkB,GAAG,EAAE,2BAA2B;MAAEM,IAAI,EAAE;IAAS,CAAC,EACnG;MAAExB,KAAK,EAAE,2BAA2B;MAAEkB,GAAG,EAAE,kBAAkB;MAAEM,IAAI,EAAE;IAAS,CAAC,EAC/E;MAAExB,KAAK,EAAE,wBAAwB;MAAEkB,GAAG,EAAE,eAAe;MAAEM,IAAI,EAAE;IAAS,CAAC,EACzE;MAAExB,KAAK,EAAE,0CAA0C;MAAEkB,GAAG,EAAE,uBAAuB;MAAEM,IAAI,EAAE;IAAS,CAAC,EACnG;MAAExB,KAAK,EAAE,wCAAwC;MAAEkB,GAAG,EAAE,sBAAsB;MAAEM,IAAI,EAAE;IAAS,CAAC,EAChG;MAAExB,KAAK,EAAE,wCAAwC;MAAEkB,GAAG,EAAE,0BAA0B;MAAEM,IAAI,EAAE;IAAS,CAAC,EACpG;MAAExB,KAAK,EAAE,qCAAqC;MAAEkB,GAAG,EAAE,wBAAwB;MAAEM,IAAI,EAAE;IAAS,CAAC,EAC/F;MAAExB,KAAK,EAAE,8BAA8B;MAAEkB,GAAG,EAAE,qBAAqB;MAAEM,IAAI,EAAE;IAAS,CAAC;EAE7F,CAAC,EACD;IACIF,KAAK,EAAE,OAAO;IACdC,OAAO,EAAE,CACL;MAAEvB,KAAK,EAAE,gCAAgC;MAAEkB,GAAG,EAAE,QAAQ;MAAEM,IAAI,EAAE;IAAS,CAAC,EAC1E;MAAExB,KAAK,EAAE,sCAAsC;MAAEkB,GAAG,EAAE,cAAc;MAAEM,IAAI,EAAE;IAAS,CAAC,EACtF;MAAExB,KAAK,EAAE,oCAAoC;MAAEkB,GAAG,EAAE,YAAY;MAAEM,IAAI,EAAE;IAAS,CAAC,EAClF;MAAExB,KAAK,EAAE,oCAAoC;MAAEkB,GAAG,EAAE,YAAY;MAAEM,IAAI,EAAE;IAAS,CAAC,EAClF;MAAExB,KAAK,EAAE,wDAAwD;MAAEkB,GAAG,EAAE,cAAc;MAAEM,IAAI,EAAE;IAAS,CAAC,EACxG;MAAExB,KAAK,EAAE,oCAAoC;MAAEkB,GAAG,EAAE,YAAY;MAAEM,IAAI,EAAE;IAAS,CAAC,EAClF;MAAExB,KAAK,EAAE,4CAA4C;MAAEkB,GAAG,EAAE,WAAW;MAAEM,IAAI,EAAE;IAAS,CAAC,EACzF;MAAExB,KAAK,EAAE,yCAAyC;MAAEkB,GAAG,EAAE,iBAAiB;MAAEM,IAAI,EAAE;IAAS,CAAC,EAC5F;MAAExB,KAAK,EAAE,mCAAmC;MAAEkB,GAAG,EAAE,WAAW;MAAEM,IAAI,EAAE;IAAS,CAAC,EAChF;MAAExB,KAAK,EAAE,uCAAuC;MAAEkB,GAAG,EAAE,gBAAgB;MAAEM,IAAI,EAAE;IAAS,CAAC;EAEjG,CAAC,EACD;IACIF,KAAK,EAAE,WAAW;IAClBC,OAAO,EAAE,CACL;MAAEvB,KAAK,EAAE,4CAA4C;MAAEkB,GAAG,EAAE,cAAc;MAAEM,IAAI,EAAE;IAAS,CAAC,EAC5F;MAAExB,KAAK,EAAE,iCAAiC;MAAEkB,GAAG,EAAE,mBAAmB;MAAEM,IAAI,EAAE;IAAS,CAAC;EAE9F,CAAC,EACD;IACIF,KAAK,EAAE,6BAA6B;IACpCC,OAAO,EAAE,CACL;MAAEvB,KAAK,EAAE,iCAAiC;MAAEkB,GAAG,EAAE,wBAAwB;MAAEM,IAAI,EAAE;IAAS,CAAC,EAC3F;MAAExB,KAAK,EAAE,8CAA8C;MAAEkB,GAAG,EAAE,qBAAqB;MAAEM,IAAI,EAAE;IAAS,CAAC;EAE7G,CAAC,CACJ;EACD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGtF,QAAQ,CAAC;IACzCuF,eAAe,EAAE,EAAE;IACnBC,qBAAqB,EAAE,EAAE;IACzBC,4BAA4B,EAAE,EAAE;IAChCC,wBAAwB,EAAE,EAAE;IAC5BC,cAAc,EAAE,EAAE;IAClBC,wBAAwB,EAAE,EAAE;IAC5BC,+BAA+B,EAAE,EAAE;IACnCC,qBAAqB,EAAE,EAAE;IACzBC,qBAAqB,EAAE,EAAE;IACzBC,WAAW,EAAE;EACjB,CAAC,CAAC;EAEF,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGlG,QAAQ,CAAC;IACjDmG,oBAAoB,EAAE,EAAE;IACxBC,0BAA0B,EAAE,EAAE;IAC9BC,0BAA0B,EAAE,EAAE;IAC9BC,kBAAkB,EAAE,EAAE;IACtBC,+BAA+B,EAAE,EAAE;IACnCC,wBAAwB,EAAE,EAAE;IAC5BC,uBAAuB,EAAE,EAAE;IAC3BC,wBAAwB,EAAE;EAC9B,CAAC,CAAC;EAEF,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAG5G,QAAQ,CAAC;IACjD6G,SAAS,EAAE,EAAE;IACbC,OAAO,EAAE;EACb,CAAC,CAAC;EAEF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGhH,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACiH,QAAQ,EAAEC,WAAW,CAAC,GAAGlH,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAM,CAACmH,OAAO,EAAEC,UAAU,CAAC,GAAGpH,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACqH,cAAc,EAAEC,iBAAiB,CAAC,GAAGtH,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACuH,YAAY,EAAEC,eAAe,CAAC,GAAGxH,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMyH,eAAe,GAAIC,CAAC,IAAK;IAC3B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9B,IAAIF,IAAI,IAAIA,IAAI,CAACvC,IAAI,KAAK,UAAU,EAAE;MAClC0C,KAAK,CAAC,iCAAiC,CAAC;MACxC;IACJ;IACAd,UAAU,CAACW,IAAI,CAAC;;IAEhB;IACA,MAAMI,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC/BD,MAAM,CAACE,MAAM,GAAIC,KAAK,IAAK;MACvB,MAAMC,IAAI,GAAGD,KAAK,CAACN,MAAM,CAACQ,MAAM;MAChC,MAAMC,IAAI,GAAGF,IAAI,CAACG,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACF,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAC1D,MAAMG,OAAO,GAAGJ,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;MACzB,MAAMK,IAAI,GAAGL,IAAI,CAACM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;;MAE5B;MACA,MAAMC,UAAU,GAAG,CAAC,CAAC;MACrBF,IAAI,CAACG,OAAO,CAACL,GAAG,IAAI;QAChB,MAAMM,MAAM,GAAGN,GAAG,CAAC,CAAC,CAAC,CAACO,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9B,MAAMC,KAAK,GAAGR,GAAG,CAAC,CAAC,CAAC,CAACO,IAAI,CAAC,CAAC,CAAC,CAAC;QAC7BH,UAAU,CAACE,MAAM,CAAC,GAAGE,KAAK;MAC9B,CAAC,CAAC;;MAEF;MACAC,oBAAoB,CAAElE,IAAI,KAAM;QAAE,GAAGA,IAAI;QAAE,GAAG6D;MAAW,CAAC,CAAC,CAAC;MAC5DtD,aAAa,CAAEP,IAAI,KAAM;QAAE,GAAGA,IAAI;QAAE,GAAG6D;MAAW,CAAC,CAAC,CAAC;MACrD1C,iBAAiB,CAAEnB,IAAI,KAAM;QAAE,GAAGA,IAAI;QAAE,GAAG6D;MAAW,CAAC,CAAC,CAAC;IAC7D,CAAC;IACDb,MAAM,CAACmB,UAAU,CAACvB,IAAI,CAAC;EAC3B,CAAC;EAED,MAAMwB,gBAAgB,GAAIzB,CAAC,IAAK;IAC5B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9B,IAAIF,IAAI,IAAI,CAAC,CAAC,WAAW,EAAE,YAAY,CAAC,CAACyB,QAAQ,CAACzB,IAAI,CAACvC,IAAI,CAAC,EAAE;MAC1D0C,KAAK,CAAC,iDAAiD,CAAC;MACxD;IACJ;IACAZ,WAAW,CAACS,IAAI,CAAC;EACrB,CAAC;EAED,MAAM0B,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B;IACA,IAAI,CAACtC,OAAO,KAAK,CAACJ,cAAc,CAACE,SAAS,IAAI,CAACF,cAAc,CAACG,OAAO,CAAC,EAAE;MACpEgB,KAAK,CAAC,iEAAiE,CAAC;MACxE;IACJ;IAEA,IAAI,CAACf,OAAO,IAAI,CAACE,QAAQ,EAAE;MACvBa,KAAK,CAAC,wCAAwC,CAAC;MAC/C;IACJ;IAEAV,UAAU,CAAC,IAAI,CAAC;IAChBE,iBAAiB,CAAC,EAAE,CAAC;IACrBE,eAAe,CAAC,EAAE,CAAC;IAEnB,MAAM8B,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;;IAE/C,IAAI,CAACF,MAAM,EAAE;MACTxB,KAAK,CAAC,wCAAwC,CAAC;MAC/C;IACJ;IACA,MAAM2B,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEL,MAAM,CAAC;IACjCG,QAAQ,CAACE,MAAM,CAAC,mBAAmB,EAAEC,IAAI,CAACC,SAAS,CAACC,iBAAiB,CAAC,CAAC;IACvEL,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAEC,IAAI,CAACC,SAAS,CAACxE,UAAU,CAAC,CAAC;IACzDoE,QAAQ,CAACE,MAAM,CAAC,gBAAgB,EAAEC,IAAI,CAACC,SAAS,CAAC5D,cAAc,CAAC,CAAC;IACjEwD,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAEhD,cAAc,CAACE,SAAS,CAAC;IACtD4C,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEhD,cAAc,CAACG,OAAO,CAAC;IAElD,IAAIC,OAAO,EAAE0C,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAE5C,OAAO,CAAC;IAChD,IAAIE,QAAQ,EAAEwC,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAE1C,QAAQ,CAAC;IACxD;IACA8C,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACpCD,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,iBAAiB,CAAC;IACrDC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE3E,UAAU,CAAC;IACvC0E,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE/D,cAAc,CAAC;IAC/C8D,OAAO,CAACC,GAAG,CAAC,aAAa,EAAErD,cAAc,CAACE,SAAS,CAAC;IACpDkD,OAAO,CAACC,GAAG,CAAC,WAAW,EAAErD,cAAc,CAACG,OAAO,CAAC;IAE3C,IAAI;MACA,MAAMmD,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;QACpEC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEX;MACV,CAAC,CAAC;MAEF,IAAIQ,QAAQ,CAACI,EAAE,EAAE;QACb,MAAMjC,MAAM,GAAG,MAAM6B,QAAQ,CAACK,IAAI,CAAC,CAAC;QACpChD,iBAAiB,CAACc,MAAM,CAACmC,OAAO,IAAI,8BAA8B,CAAC;MACvE,CAAC,MAAM;QACH,MAAMC,WAAW,GAAG,MAAMP,QAAQ,CAAC9B,IAAI,CAAC,CAAC;QACzC,MAAM,IAAIsC,KAAK,CAAC,SAASR,QAAQ,CAACS,MAAM,KAAKF,WAAW,EAAE,CAAC;MAC/D;IACJ,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZnD,eAAe,CAAC,yBAAyB,GAAGmD,KAAK,CAACJ,OAAO,CAAC;IAC9D,CAAC,SAAS;MACNnD,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,oBACIvG,OAAA;IAAK+J,KAAK,EAAE9J,MAAM,CAACC,WAAY;IAAA8J,QAAA,gBAC3BhK,OAAA;MAAK+J,KAAK,EAAE9J,MAAM,CAACM,OAAQ;MAAAyJ,QAAA,gBACvBhK,OAAA;QAAK+J,KAAK,EAAE;UAAE5J,OAAO,EAAE,MAAM;UAAEW,UAAU,EAAE;QAAS,CAAE;QAAAkJ,QAAA,gBAClDhK,OAAA;UACIiK,GAAG,EAAE7K,WAAY;UACjB8K,GAAG,EAAC,MAAM;UACV1J,KAAK,EAAC,IAAI;UACVJ,MAAM,EAAC,IAAI;UACX+J,SAAS,EAAC;QAA+B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC,eACFvK,OAAA;UAAI+J,KAAK,EAAE9J,MAAM,CAACkB,IAAK;UAAA6I,QAAA,EAAC;QAAW;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC,eACNvK,OAAA;QAAI+J,KAAK,EAAE9J,MAAM,CAAC0B,OAAQ;QAAAqI,QAAA,EACrBxG,SAAS,CAACkE,GAAG,CAAE8C,IAAI,iBAChBxK,OAAA;UAAAgK,QAAA,eACIhK,OAAA;YACIyK,IAAI,EAAED,IAAI,CAAC9G,IAAK;YAChBqG,KAAK,EAAE9J,MAAM,CAAC6B,OAAQ;YACtB4I,YAAY,EAAG7D,CAAC,IAAK;cACjBA,CAAC,CAACE,MAAM,CAACgD,KAAK,CAAC1J,eAAe,GAAG,SAAS;cAC1CwG,CAAC,CAACE,MAAM,CAACgD,KAAK,CAACrI,SAAS,GAAG,aAAa;YAC5C,CAAE;YACFiJ,YAAY,EAAG9D,CAAC,IAAK;cACjBA,CAAC,CAACE,MAAM,CAACgD,KAAK,CAAC1J,eAAe,GAAG,EAAE;cACnCwG,CAAC,CAACE,MAAM,CAACgD,KAAK,CAACrI,SAAS,GAAG,EAAE;YACjC,CAAE;YAAAsI,QAAA,gBAEFhK,OAAA,CAACwK,IAAI,CAAC/G,IAAI;cAACsG,KAAK,EAAE9J,MAAM,CAACmC,OAAQ;cAACwI,IAAI,EAAE;YAAG;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC9CvK,OAAA;cAAAgK,QAAA,EAAOQ,IAAI,CAACzH;YAAK;cAAAqH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1B;QAAC,GAfCC,IAAI,CAAC9G,IAAI;UAAA0G,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAgBd,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACLvK,OAAA;QAAK+J,KAAK,EAAE;UAAEvI,SAAS,EAAE,MAAM;UAAED,SAAS,EAAE;QAAS,CAAE;QAAAyI,QAAA,eACnDhK,OAAA;UACI+J,KAAK,EAAE9J,MAAM,CAACmD,MAAO;UACrByH,OAAO,EAAEA,CAAA,KAAM/G,kBAAkB,CAAC,IAAI,CAAE;UAAAkG,QAAA,EAC3C;QAED;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACNvK,OAAA;MAAK+J,KAAK,EAAE9J,MAAM,CAACqC,OAAQ;MAAA0H,QAAA,eACvBhK,OAAA;QAAKmK,SAAS,EAAC,WAAW;QAAAH,QAAA,eACtBhK,OAAA;UAAKmK,SAAS,EAAC,SAAS;UAAAH,QAAA,gBACpBhK,OAAA;YAAImK,SAAS,EAAC,cAAc;YAAAH,QAAA,EAAC;UAAe;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjDvK,OAAA;YAAImK,SAAS,EAAC,cAAc;YAAAH,QAAA,EAAC;UAAkB;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAGpDvK,OAAA;YAAKmK,SAAS,EAAC,mBAAmB;YAAAH,QAAA,gBAC9ChK,OAAA;cAAAgK,QAAA,EAAI;YAAa;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EACrBnG,QAAQ,CAACsD,GAAG,CAAC,CAAChF,OAAO,EAAEoI,GAAG,kBACvB9K,OAAA;cAAe+J,KAAK,EAAE9J,MAAM,CAACyC,OAAQ;cAAAsH,QAAA,gBACjChK,OAAA;gBACI+J,KAAK,EAAE9J,MAAM,CAAC2C,aAAc;gBAC5BiI,OAAO,EAAEA,CAAA,KAAME,aAAa,CAACrI,OAAO,CAAC2B,KAAK,CAAE;gBAAA2F,QAAA,gBAE5ChK,OAAA;kBAAAgK,QAAA,EAAKtH,OAAO,CAAC2B;gBAAK;kBAAA+F,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACxBvK,OAAA;kBAAAgK,QAAA,EAAOgB,gBAAgB,CAACtI,OAAO,CAAC2B,KAAK,CAAC,GAAG,GAAG,GAAG;gBAAG;kBAAA+F,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACzD,CAAC,EACLS,gBAAgB,CAACtI,OAAO,CAAC2B,KAAK,CAAC,iBAC5BrE,OAAA;gBAAAgK,QAAA,EACKtH,OAAO,CAAC4B,OAAO,CAACoD,GAAG,CAAC,CAACO,MAAM,EAAEgD,CAAC,kBAC3BjL,OAAA;kBAAa+J,KAAK,EAAE9J,MAAM,CAAC6C,cAAe;kBAAAkH,QAAA,gBACtChK,OAAA;oBAAO+J,KAAK,EAAE9J,MAAM,CAAC8C,KAAM;oBAACmI,OAAO,EAAEjD,MAAM,CAAChE,GAAI;oBAAA+F,QAAA,EAC3C/B,MAAM,CAAClF;kBAAK;oBAAAqH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACV,CAAC,eACRvK,OAAA;oBACImL,EAAE,EAAElD,MAAM,CAAChE,GAAI;oBACfM,IAAI,EAAE0D,MAAM,CAAC1D,IAAK;oBAClB4D,KAAK,EAAEc,iBAAiB,CAAChB,MAAM,CAAChE,GAAG,CAAC,IAAI,EAAG;oBAC3CmH,QAAQ,EAAGvE,CAAC,IACRuB,oBAAoB,CAAElE,IAAI,KAAM;sBAC5B,GAAGA,IAAI;sBACP,CAAC+D,MAAM,CAAChE,GAAG,GAAG4C,CAAC,CAACE,MAAM,CAACoB;oBAC3B,CAAC,CAAC,CACL;oBACD4B,KAAK,EAAE9J,MAAM,CAAC+C;kBAAW;oBAAAoH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC5B,CAAC;gBAAA,GAfIU,CAAC;kBAAAb,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAgBN,CACR;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACD,CACR;YAAA,GA9BKO,GAAG;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OA+BR,CACR,CAAC,eACFvK,OAAA;cACI+J,KAAK,EAAE9J,MAAM,CAACmD,MAAO;cACrByH,OAAO,EAAEA,CAAA,KAAM5D,KAAK,CAAC,mCAAmC,CAAE;cAAA+C,QAAA,EAC7D;YAED;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR,CAAC,eAIUvK,OAAA;YAAKmK,SAAS,EAAC,SAAS;YAAAH,QAAA,gBACpBhK,OAAA;cAAAgK,QAAA,EAAI;YAAM;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACfvK,OAAA;cAAKmK,SAAS,EAAC,gBAAgB;cAAAH,QAAA,GAC9B,CACG;gBAAEjH,KAAK,EAAE,sBAAsB;gBAAEkB,GAAG,EAAE,iBAAiB;gBAAEM,IAAI,EAAE,QAAQ;gBAAC8G,IAAI,EAAE;cAAmG,CAAC,EAClL;gBAAEtI,KAAK,EAAE,iCAAiC;gBAAEkB,GAAG,EAAE,uBAAuB;gBAAEM,IAAI,EAAE,QAAQ;gBAAC8G,IAAI,EAAE;cAAwE,CAAC,EACxK;gBAAEtI,KAAK,EAAE,wCAAwC;gBAAEkB,GAAG,EAAE,mBAAmB;gBAAEM,IAAI,EAAE,QAAQ;gBAAC8G,IAAI,EAAE;cAA4E,CAAC,EAC/K;gBAAEtI,KAAK,EAAE,4BAA4B;gBAAEkB,GAAG,EAAE,iBAAiB;gBAAEM,IAAI,EAAE,UAAU;gBAAE+G,OAAO,EAAE,CAAC,OAAO,EAAE,YAAY,CAAC;gBAACD,IAAI,EAAE;cAAsG,CAAC,EAC/N;gBAAEtI,KAAK,EAAE,mCAAmC;gBAAEkB,GAAG,EAAE,gBAAgB;gBAAEM,IAAI,EAAE,QAAQ;gBAAC8G,IAAI,EAAE;cAAqG,CAAC,EAChM;gBAAEtI,KAAK,EAAE,6CAA6C;gBAAEkB,GAAG,EAAE,0BAA0B;gBAAEM,IAAI,EAAE,QAAQ;gBAAC8G,IAAI,EAAE;cAA4E,CAAC,EAC3L;gBAAEtI,KAAK,EAAE,mCAAmC;gBAAEkB,GAAG,EAAE,sBAAsB;gBAAEM,IAAI,EAAE,UAAU;gBAAE+G,OAAO,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC;gBAACD,IAAI,EAAE;cAAiG,CAAC,EAC5N;gBAAEtI,KAAK,EAAE,yBAAyB;gBAAEkB,GAAG,EAAE,uBAAuB;gBAAEM,IAAI,EAAE,UAAU;gBAAE+G,OAAO,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC;gBAACD,IAAI,EAAE;cAA6F,CAAC,EAC/M;gBAAEtI,KAAK,EAAE,6BAA6B;gBAAEkB,GAAG,EAAE,uBAAuB;gBAAEM,IAAI,EAAE,QAAQ;gBAAC8G,IAAI,EAAE;cAAqE,CAAC,EACjK;gBAAEtI,KAAK,EAAE,2CAA2C;gBAAEkB,GAAG,EAAE,aAAa;gBAAEM,IAAI,EAAE,UAAU;gBAAE+G,OAAO,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC;gBAACD,IAAI,EAAE;cAA+F,CAAC,CAC5N,CAAC3D,GAAG,CAAC,CAAC;gBAAE3E,KAAK;gBAAEkB,GAAG;gBAAEM,IAAI;gBAAE+G,OAAO;gBAAED;cAAK,CAAC,EAAEP,GAAG,kBAC3C9K,OAAA;gBAAe+J,KAAK,EAAE;kBAAE1I,YAAY,EAAE;gBAAO,CAAE;gBAAA2I,QAAA,gBAC3ChK,OAAA;kBAAOkL,OAAO,EAAEjH,GAAI;kBAAA+F,QAAA,GACfjH,KAAK,eACN/C,OAAA,CAACX,IAAI;oBACD0K,KAAK,EAAE9J,MAAM,CAACkD,QAAS;oBACvBuH,YAAY,EAAEA,CAAA,KAAM1G,WAAW,CAACC,GAAG,CAAE;oBACrC0G,YAAY,EAAEA,CAAA,KAAMxG,WAAW,CAACF,GAAG;kBAAE;oBAAAmG,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACxC,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CAAC,eACRvK,OAAA;kBACI+J,KAAK,EAAE;oBACH,GAAG9J,MAAM,CAACgD,OAAO;oBACjB,IAAIC,cAAc,CAACe,GAAG,CAAC,IAAIhE,MAAM,CAACiD,cAAc;kBACpD,CAAE;kBAAA8G,QAAA,EAEDqB;gBAAI;kBAAAjB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ,CAAC,EACLhG,IAAI,KAAK,UAAU,gBAChBvE,OAAA;kBACImL,EAAE,EAAElH,GAAI;kBACRkE,KAAK,EAAE3D,UAAU,CAACP,GAAG,CAAC,IAAI,EAAG;kBAC7BmH,QAAQ,EAAGvE,CAAC,IACRpC,aAAa,CAAEP,IAAI,KAAM;oBACrB,GAAGA,IAAI;oBACP,CAACD,GAAG,GAAG4C,CAAC,CAACE,MAAM,CAACoB;kBACpB,CAAC,CAAC,CACL;kBACDgC,SAAS,EAAC,YAAY;kBACtBJ,KAAK,EAAE9J,MAAM,CAAC+C,UAAW;kBAAAgH,QAAA,EAExBsB,OAAO,CAAC5D,GAAG,CAAC,CAAC6D,MAAM,EAAEN,CAAC,kBACnBjL,OAAA;oBAAgBmI,KAAK,EAAEoD,MAAO;oBAAAvB,QAAA,EACzBuB;kBAAM,GADEN,CAAC;oBAAAb,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAEN,CACX;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACE,CAAC,gBAETvK,OAAA;kBACImL,EAAE,EAAElH,GAAI;kBACRM,IAAI,EAAEA,IAAK;kBACX4D,KAAK,EAAE3D,UAAU,CAACP,GAAG,CAAC,IAAI,EAAG;kBAC7BmH,QAAQ,EAAGvE,CAAC,IACRpC,aAAa,CAAEP,IAAI,KAAM;oBACrB,GAAGA,IAAI;oBACP,CAACD,GAAG,GAAG4C,CAAC,CAACE,MAAM,CAACoB;kBACpB,CAAC,CAAC,CACL;kBACDgC,SAAS,EAAC,YAAY;kBACtBJ,KAAK,EAAE9J,MAAM,CAAC+C;gBAAW;kBAAAoH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC5B,CACJ;cAAA,GAlDKO,GAAG;gBAAAV,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAmDR,CACR,CAAC,eACFvK,OAAA;gBACRmK,SAAS,EAAC,QAAQ;gBAClBU,OAAO,EAAGhE,CAAC,IAAK;kBACZ,MAAM2E,IAAI,GAAG3E,CAAC,CAACE,MAAM,CAAC0E,qBAAqB,CAAC,CAAC;kBAC7CC,gBAAgB,CAAC;oBACbC,CAAC,EAAEH,IAAI,CAACI,IAAI;oBACZC,CAAC,EAAEL,IAAI,CAACM,GAAG,GAAGC,MAAM,CAACC;kBACzB,CAAC,CAAC;kBACFC,gBAAgB,CAAC/H,IAAI,KAAK;oBAAE,GAAGA,IAAI;oBAAExB,OAAO,EAAE;kBAAS,CAAC,CAAC,CAAC;kBAC1DwJ,oBAAoB,CAAC,IAAI,CAAC;gBAC9B,CAAE;gBAAAlC,QAAA,EACO;cAED;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACR,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,eAEFvK,OAAA;YAAKmK,SAAS,EAAC,SAAS;YAAAH,QAAA,gBACpBhK,OAAA;cAAAgK,QAAA,EAAI;YAAU;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACnBvK,OAAA;cAAKmK,SAAS,EAAC,gBAAgB;cAAAH,QAAA,GAC9B,CACG;gBAAEjH,KAAK,EAAE,2BAA2B;gBAAEkB,GAAG,EAAE,sBAAsB;gBAAEM,IAAI,EAAE,QAAQ;gBAAC8G,IAAI,EAAE;cAA0F,CAAC,EACnL;gBAAEtI,KAAK,EAAE,oCAAoC;gBAAEkB,GAAG,EAAE,iBAAiB;gBAAEM,IAAI,EAAE,UAAU;gBAAE+G,OAAO,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC;gBAACD,IAAI,EAAE;cAA8G,CAAC,EACrO;gBAAEtI,KAAK,EAAE,8BAA8B;gBAAEkB,GAAG,EAAE,sBAAsB;gBAAEM,IAAI,EAAE,UAAU;gBAAE+G,OAAO,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC;gBAACD,IAAI,EAAE;cAA0F,CAAC,EAChN;gBAAEtI,KAAK,EAAE,8BAA8B;gBAAEkB,GAAG,EAAE,oBAAoB;gBAAEM,IAAI,EAAE,QAAQ;gBAAC8G,IAAI,EAAE;cAA6F,CAAC,EACvL;gBAAEtI,KAAK,EAAE,0CAA0C;gBAAEkB,GAAG,EAAE,uBAAuB;gBAAEM,IAAI,EAAE,QAAQ;gBAAC8G,IAAI,EAAE;cAA4F,CAAC,EACrM;gBAAEtI,KAAK,EAAE,oCAAoC;gBAAEkB,GAAG,EAAE,kBAAkB;gBAAEM,IAAI,EAAE,QAAQ;gBAAC8G,IAAI,EAAE;cAA4F,CAAC,EAC1L;gBAAEtI,KAAK,EAAE,qCAAqC;gBAAEkB,GAAG,EAAE,yBAAyB;gBAAEM,IAAI,EAAE,UAAU;gBAAE+G,OAAO,EAAE,CAAC,WAAW,EAAE,QAAQ,CAAC;gBAACD,IAAI,EAAE;cAA2F,CAAC,EACrO;gBAAEtI,KAAK,EAAE,oCAAoC;gBAAEkB,GAAG,EAAE,iBAAiB;gBAAEM,IAAI,EAAE,UAAU;gBAAE+G,OAAO,EAAE,CAAC,SAAS,EAAE,WAAW,EAAE,UAAU,CAAC;gBAACD,IAAI,EAAE;cAA4F,CAAC,CAC7O,CAAC3D,GAAG,CAAC,CAAC;gBAAE3E,KAAK;gBAAEkB,GAAG;gBAAEM,IAAI;gBAAE+G,OAAO;gBAAED;cAAK,CAAC,EAAEP,GAAG,kBAC3C9K,OAAA;gBAAe+J,KAAK,EAAE;kBAAE1I,YAAY,EAAE;gBAAO,CAAE;gBAAA2I,QAAA,gBAC3ChK,OAAA;kBAAOkL,OAAO,EAAEjH,GAAI;kBAAA+F,QAAA,GACfjH,KAAK,eACN/C,OAAA,CAACX,IAAI;oBACD0K,KAAK,EAAE9J,MAAM,CAACkD,QAAS;oBACvBuH,YAAY,EAAEA,CAAA,KAAM1G,WAAW,CAACC,GAAG,CAAE;oBACrC0G,YAAY,EAAEA,CAAA,KAAMxG,WAAW,CAACF,GAAG;kBAAE;oBAAAmG,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACxC,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CAAC,eACRvK,OAAA;kBACI+J,KAAK,EAAE;oBACH,GAAG9J,MAAM,CAACgD,OAAO;oBACjB,IAAIC,cAAc,CAACe,GAAG,CAAC,IAAIhE,MAAM,CAACiD,cAAc;kBACpD,CAAE;kBAAA8G,QAAA,EAEDqB;gBAAI;kBAAAjB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ,CAAC,EACLhG,IAAI,KAAK,UAAU,gBAChBvE,OAAA;kBACImL,EAAE,EAAElH,GAAI;kBACRkE,KAAK,EAAE/C,cAAc,CAACnB,GAAG,CAAC,IAAI,EAAG;kBACjCmH,QAAQ,EAAGvE,CAAC,IACRxB,iBAAiB,CAAEnB,IAAI,KAAM;oBACzB,GAAGA,IAAI;oBACP,CAACD,GAAG,GAAG4C,CAAC,CAACE,MAAM,CAACoB;kBACpB,CAAC,CAAC,CACL;kBACDgC,SAAS,EAAC,YAAY;kBACtBJ,KAAK,EAAE9J,MAAM,CAAC+C,UAAW;kBAAAgH,QAAA,EAExBsB,OAAO,CAAC5D,GAAG,CAAC,CAAC6D,MAAM,EAAEN,CAAC,kBACnBjL,OAAA;oBAAgBmI,KAAK,EAAEoD,MAAO;oBAAAvB,QAAA,EACzBuB;kBAAM,GADEN,CAAC;oBAAAb,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAEN,CACX;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACE,CAAC,gBAETvK,OAAA;kBACImL,EAAE,EAAElH,GAAI;kBACRM,IAAI,EAAEA,IAAK;kBACX4D,KAAK,EAAE/C,cAAc,CAACnB,GAAG,CAAC,IAAI,EAAG;kBACjCmH,QAAQ,EAAGvE,CAAC,IACRxB,iBAAiB,CAAEnB,IAAI,KAAM;oBACzB,GAAGA,IAAI;oBACP,CAACD,GAAG,GAAG4C,CAAC,CAACE,MAAM,CAACoB;kBACpB,CAAC,CAAC,CACL;kBACDgC,SAAS,EAAC,YAAY;kBACtBJ,KAAK,EAAE9J,MAAM,CAAC+C;gBAAW;kBAAAoH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC5B,CACJ;cAAA,GAlDKO,GAAG;gBAAAV,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAmDR,CACR,CAAC,eACFvK,OAAA;gBACAmK,SAAS,EAAC,QAAQ;gBAClBU,OAAO,EAAGhE,CAAC,IAAK;kBACZ,MAAM2E,IAAI,GAAG3E,CAAC,CAACE,MAAM,CAAC0E,qBAAqB,CAAC,CAAC;kBAC7CC,gBAAgB,CAAC;oBACbC,CAAC,EAAEH,IAAI,CAACI,IAAI;oBACZC,CAAC,EAAEL,IAAI,CAACM,GAAG,GAAGC,MAAM,CAACC;kBACzB,CAAC,CAAC;kBACFC,gBAAgB,CAAC/H,IAAI,KAAK;oBAAE,GAAGA,IAAI;oBAAExB,OAAO,EAAE;kBAAa,CAAC,CAAC,CAAC;kBAC9DwJ,oBAAoB,CAAC,IAAI,CAAC;gBAC9B,CAAE;gBAAAlC,QAAA,EACO;cAED;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,eAM1BvK,OAAA;YAAKmK,SAAS,EAAC,SAAS;YAAAH,QAAA,gBACtBhK,OAAA;cAAAgK,QAAA,EAAI;YAAW;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAEpBvK,OAAA;cAAKmK,SAAS,EAAC,uBAAuB;cAAAH,QAAA,gBACpChK,OAAA;gBAAKmK,SAAS,EAAC,aAAa;gBAAAH,QAAA,gBAC1BhK,OAAA;kBAAAgK,QAAA,EAAO;gBAAU;kBAAAI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eACzBvK,OAAA;kBACEuE,IAAI,EAAC,MAAM;kBACX4D,KAAK,EAAErC,cAAc,CAACE,SAAU;kBAChCoF,QAAQ,EAAGvE,CAAC,IACVd,iBAAiB,CAAC;oBAChB,GAAGD,cAAc;oBACjBE,SAAS,EAAEa,CAAC,CAACE,MAAM,CAACoB;kBACtB,CAAC,CACF;kBACDgC,SAAS,EAAC;gBAAY;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACvB,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,eACNvK,OAAA;gBAAKmK,SAAS,EAAC,aAAa;gBAAAH,QAAA,gBAC1BhK,OAAA;kBAAAgK,QAAA,EAAO;gBAAQ;kBAAAI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eACvBvK,OAAA;kBACEuE,IAAI,EAAC,MAAM;kBACX4D,KAAK,EAAErC,cAAc,CAACG,OAAQ;kBAC9BmF,QAAQ,EAAGvE,CAAC,IACVd,iBAAiB,CAAC;oBAChB,GAAGD,cAAc;oBACjBG,OAAO,EAAEY,CAAC,CAACE,MAAM,CAACoB;kBACpB,CAAC,CACF;kBACDgC,SAAS,EAAC;gBAAY;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACvB,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAKNvK,OAAA;YAAKmK,SAAS,EAAC,SAAS;YAAAH,QAAA,gBACpBhK,OAAA;cAAAgK,QAAA,EAAI;YAAU;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACnBvK,OAAA;cAAKmK,SAAS,EAAC,uBAAuB;cAAAH,QAAA,gBAClChK,OAAA;gBACIuE,IAAI,EAAC,MAAM;gBACX4H,MAAM,EAAC,MAAM;gBACbf,QAAQ,EAAExE,eAAgB;gBAC1BuD,SAAS,EAAC,YAAY;gBACtBgB,EAAE,EAAC;cAAY;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAClB,CAAC,eACFvK,OAAA;gBAAOkL,OAAO,EAAC,YAAY;gBAACf,SAAS,EAAC,cAAc;gBAAAH,QAAA,gBAChDhK,OAAA;kBAAAgK,QAAA,EAAG;gBAAgC;kBAAAI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAG,CAAC,eACvCvK,OAAA;kBAAAgK,QAAA,EAAG;gBAAiF;kBAAAI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAG,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACrF,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACP,CAAC,EACLrE,OAAO,iBACJlG,OAAA;cAAKmK,SAAS,EAAC,SAAS;cAAAH,QAAA,gBACpBhK,OAAA;gBAAAgK,QAAA,EAAI9D,OAAO,CAACkG;cAAI;gBAAAhC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACrBvK,OAAA;gBAAAgK,QAAA,GAAIqC,IAAI,CAACC,KAAK,CAACpG,OAAO,CAAC0E,IAAI,GAAG,IAAI,CAAC,EAAC,KAAG;cAAA;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1C,CACR;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eAGNvK,OAAA;YAAKmK,SAAS,EAAC,SAAS;YAAAH,QAAA,gBACpBhK,OAAA;cAAAgK,QAAA,EAAI;YAAW;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACpBvK,OAAA;cAAKmK,SAAS,EAAC,uBAAuB;cAAAH,QAAA,gBAClChK,OAAA;gBACIuE,IAAI,EAAC,MAAM;gBACX4H,MAAM,EAAC,SAAS;gBAChBf,QAAQ,EAAE9C,gBAAiB;gBAC3B6B,SAAS,EAAC,YAAY;gBACtBgB,EAAE,EAAC;cAAa;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACnB,CAAC,eACFvK,OAAA;gBAAOkL,OAAO,EAAC,aAAa;gBAACf,SAAS,EAAC,cAAc;gBAAAH,QAAA,gBACjDhK,OAAA;kBAAAgK,QAAA,EAAG;gBAAgC;kBAAAI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAG,CAAC,eACvCvK,OAAA;kBAAAgK,QAAA,EAAG;gBAAiD;kBAAAI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAG,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACrD,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACP,CAAC,EACLnE,QAAQ,iBACLpG,OAAA;cAAKmK,SAAS,EAAC,SAAS;cAAAH,QAAA,eACpBhK,OAAA;gBAAKiK,GAAG,EAAE7D,QAAS;gBAAC8D,GAAG,EAAC,MAAM;gBAAC1J,KAAK,EAAC;cAAK;gBAAA4J,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5C,CACR;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eAGNvK,OAAA;YAAQmK,SAAS,EAAC,QAAQ;YAACU,OAAO,EAAErC,YAAa;YAAAwB,QAAA,EAAC;UAElD;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTvK,OAAA;YAAAgK,QAAA,GACS1D,OAAO,iBAAItG,OAAA;cAAAgK,QAAA,EAAG;YAA+B;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,EACjD/D,cAAc,iBAAIxG,OAAA;cAAGmK,SAAS,EAAC,SAAS;cAAAH,QAAA,EAAExD;YAAc;cAAA4D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EAC7D7D,YAAY,iBAAI1G,OAAA;cAAGmK,SAAS,EAAC,OAAO;cAAAH,QAAA,EAAEtD;YAAY;cAAA0D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAED,CAAC;AAEN,CAAC;AAAC3G,EAAA,CAvkBID,OAAO;AAAA4I,EAAA,GAAP5I,OAAO;AAykBb,eAAeA,OAAO;AAAC,IAAA4I,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}