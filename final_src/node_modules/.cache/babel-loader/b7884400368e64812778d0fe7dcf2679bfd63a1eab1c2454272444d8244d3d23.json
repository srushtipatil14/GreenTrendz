{"ast":null,"code":"var _jsxFileName = \"/Users/srushtipatil/Downloads/final_src/src/components/ManualInput.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { BarElement, CategoryScale, Chart, Legend, LinearScale, Title, Tooltip } from 'chart.js';\nimport React, { useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport './ManualInput.css'; // Import CSS for custom styling\n\n// Register the required components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst ManualInput = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    companyName: '',\n    energyUsage: '',\n    carbonEmissions: '',\n    wasteManagement: '',\n    employeeDiversity: '',\n    governanceScore: ''\n  });\n  const [message, setMessage] = useState('');\n  const [esgData, setEsgData] = useState([]); // State to hold ESG data for visualization\n\n  // Handle input changes dynamically\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:5000/api/manual-input', formData);\n      setMessage(response.data.message); // Success message from backend\n\n      // Update ESG data for visualization\n      setEsgData(prevData => [...prevData, formData]); // Add new data to the state\n      setFormData({\n        // Reset form fields\n        companyName: '',\n        energyUsage: '',\n        carbonEmissions: '',\n        wasteManagement: '',\n        employeeDiversity: '',\n        governanceScore: ''\n      });\n    } catch (error) {\n      console.error('Error submitting form data:', error);\n      setMessage('Error submitting data. Please try again.');\n    }\n  };\n\n  // Prepare data for chart\n  const chartData = {\n    labels: esgData.map(data => data.companyName || 'Unknown Company'),\n    // Company names\n    datasets: [{\n      label: 'Energy Usage (kWh)',\n      data: esgData.map(data => data.energyUsage || 0),\n      // Energy usage data\n      backgroundColor: 'rgba(75, 192, 192, 0.6)'\n    }, {\n      label: 'Carbon Emissions (tons)',\n      data: esgData.map(data => data.carbonEmissions || 0),\n      backgroundColor: 'rgba(255, 99, 132, 0.6)'\n    }, {\n      label: 'Waste Management (%)',\n      data: esgData.map(data => data.wasteManagement || 0),\n      backgroundColor: 'rgba(54, 162, 235, 0.6)'\n    }, {\n      label: 'Employee Diversity (%)',\n      data: esgData.map(data => data.employeeDiversity || 0),\n      backgroundColor: 'rgba(255, 206, 86, 0.6)'\n    }, {\n      label: 'Governance Score',\n      data: esgData.map(data => data.governanceScore || 0),\n      backgroundColor: 'rgba(153, 102, 255, 0.6)'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"manual-input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Manual ESG Data Input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"manual-input-form\",\n      children: [[{\n        label: 'Company Name',\n        name: 'companyName',\n        type: 'text'\n      }, {\n        label: 'Energy Usage (kWh)',\n        name: 'energyUsage',\n        type: 'number'\n      }, {\n        label: 'Carbon Emissions (tons)',\n        name: 'carbonEmissions',\n        type: 'number'\n      }, {\n        label: 'Waste Management (% recycled)',\n        name: 'wasteManagement',\n        type: 'number'\n      }, {\n        label: 'Employee Diversity (%)',\n        name: 'employeeDiversity',\n        type: 'number'\n      }, {\n        label: 'Governance Score (1-10)',\n        name: 'governanceScore',\n        type: 'number'\n      }].map((field, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [field.label, \":\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: field.type,\n          name: field.name,\n          value: formData[field.name],\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }, this), esgData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"visualization-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"ESG Data Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n_s(ManualInput, \"Bii3Xyqm1mfwp8jvYXGEKd2oUX8=\");\n_c = ManualInput;\nexport default ManualInput;\nvar _c;\n$RefreshReg$(_c, \"ManualInput\");","map":{"version":3,"names":["axios","BarElement","CategoryScale","Chart","Legend","LinearScale","Title","Tooltip","React","useState","Bar","jsxDEV","_jsxDEV","register","ManualInput","_s","formData","setFormData","companyName","energyUsage","carbonEmissions","wasteManagement","employeeDiversity","governanceScore","message","setMessage","esgData","setEsgData","handleChange","e","name","value","target","prevData","handleSubmit","preventDefault","response","post","data","error","console","chartData","labels","map","datasets","label","backgroundColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","field","index","onChange","required","length","_c","$RefreshReg$"],"sources":["/Users/srushtipatil/Downloads/final_src/src/components/ManualInput.js"],"sourcesContent":["import axios from 'axios';\nimport { BarElement, CategoryScale, Chart, Legend, LinearScale, Title, Tooltip } from 'chart.js';\nimport React, { useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport './ManualInput.css'; // Import CSS for custom styling\n\n// Register the required components\nChart.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\nconst ManualInput = () => {\n    const [formData, setFormData] = useState({\n        companyName: '',\n        energyUsage: '',\n        carbonEmissions: '',\n        wasteManagement: '',\n        employeeDiversity: '',\n        governanceScore: '',\n    });\n    const [message, setMessage] = useState('');\n    const [esgData, setEsgData] = useState([]); // State to hold ESG data for visualization\n\n    // Handle input changes dynamically\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData((prevData) => ({\n            ...prevData,\n            [name]: value,\n        }));\n    };\n\n    // Handle form submission\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await axios.post(\n                'http://localhost:5000/api/manual-input',\n                formData\n            );\n            setMessage(response.data.message); // Success message from backend\n\n            // Update ESG data for visualization\n            setEsgData((prevData) => [...prevData, formData]); // Add new data to the state\n            setFormData({ // Reset form fields\n                companyName: '',\n                energyUsage: '',\n                carbonEmissions: '',\n                wasteManagement: '',\n                employeeDiversity: '',\n                governanceScore: '',\n            });\n        } catch (error) {\n            console.error('Error submitting form data:', error);\n            setMessage('Error submitting data. Please try again.');\n        }\n    };\n\n    // Prepare data for chart\n    const chartData = {\n        labels: esgData.map((data) => data.companyName || 'Unknown Company'), // Company names\n        datasets: [\n            {\n                label: 'Energy Usage (kWh)',\n                data: esgData.map((data) => data.energyUsage || 0), // Energy usage data\n                backgroundColor: 'rgba(75, 192, 192, 0.6)',\n            },\n            {\n                label: 'Carbon Emissions (tons)',\n                data: esgData.map((data) => data.carbonEmissions || 0),\n                backgroundColor: 'rgba(255, 99, 132, 0.6)',\n            },\n            {\n                label: 'Waste Management (%)',\n                data: esgData.map((data) => data.wasteManagement || 0),\n                backgroundColor: 'rgba(54, 162, 235, 0.6)',\n            },\n            {\n                label: 'Employee Diversity (%)',\n                data: esgData.map((data) => data.employeeDiversity || 0),\n                backgroundColor: 'rgba(255, 206, 86, 0.6)',\n            },\n            {\n                label: 'Governance Score',\n                data: esgData.map((data) => data.governanceScore || 0),\n                backgroundColor: 'rgba(153, 102, 255, 0.6)',\n            },\n        ],\n    };\n\n    return (\n        <div className=\"manual-input-container\">\n            <h2>Manual ESG Data Input</h2>\n            <form onSubmit={handleSubmit} className=\"manual-input-form\">\n                {[\n                    { label: 'Company Name', name: 'companyName', type: 'text' },\n                    { label: 'Energy Usage (kWh)', name: 'energyUsage', type: 'number' },\n                    { label: 'Carbon Emissions (tons)', name: 'carbonEmissions', type: 'number' },\n                    { label: 'Waste Management (% recycled)', name: 'wasteManagement', type: 'number' },\n                    { label: 'Employee Diversity (%)', name: 'employeeDiversity', type: 'number' },\n                    { label: 'Governance Score (1-10)', name: 'governanceScore', type: 'number' },\n                ].map((field, index) => (\n                    <label key={index}>\n                        {field.label}:\n                        <input\n                            type={field.type}\n                            name={field.name}\n                            value={formData[field.name]}\n                            onChange={handleChange}\n                            required\n                        />\n                    </label>\n                ))}\n                <button type=\"submit\">Submit</button>\n            </form>\n            {message && <p className=\"message\">{message}</p>}\n\n           {/* Visualization */}\n{esgData.length > 0 && (\n    <div className=\"visualization-container\">\n        <h2>ESG Data Visualization</h2>\n        <Bar data={chartData} />\n    </div>\n            )}\n        </div>\n    );\n};\n\nexport default ManualInput;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}